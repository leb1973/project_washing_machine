
prj_WASHER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012a  00800100  000022a8  0000233c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b4  0080022a  0080022a  00002466  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002466  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00002504  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004218  00000000  00000000  0000277c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013eb  00000000  00000000  00006994  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019ec  00000000  00000000  00007d7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000584  00000000  00000000  0000976c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a7a  00000000  00000000  00009cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e89  00000000  00000000  0000a76a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000b5f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
       2:	00 00       	nop
       4:	6d c0       	rjmp	.+218    	; 0xe0 <__bad_interrupt>
       6:	00 00       	nop
       8:	6b c0       	rjmp	.+214    	; 0xe0 <__bad_interrupt>
       a:	00 00       	nop
       c:	69 c0       	rjmp	.+210    	; 0xe0 <__bad_interrupt>
       e:	00 00       	nop
      10:	67 c0       	rjmp	.+206    	; 0xe0 <__bad_interrupt>
      12:	00 00       	nop
      14:	65 c0       	rjmp	.+202    	; 0xe0 <__bad_interrupt>
      16:	00 00       	nop
      18:	63 c0       	rjmp	.+198    	; 0xe0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	61 c0       	rjmp	.+194    	; 0xe0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5f c0       	rjmp	.+190    	; 0xe0 <__bad_interrupt>
      22:	00 00       	nop
      24:	5d c0       	rjmp	.+186    	; 0xe0 <__bad_interrupt>
      26:	00 00       	nop
      28:	5b c0       	rjmp	.+182    	; 0xe0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	59 c0       	rjmp	.+178    	; 0xe0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	57 c0       	rjmp	.+174    	; 0xe0 <__bad_interrupt>
      32:	00 00       	nop
      34:	55 c0       	rjmp	.+170    	; 0xe0 <__bad_interrupt>
      36:	00 00       	nop
      38:	53 c0       	rjmp	.+166    	; 0xe0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	51 c0       	rjmp	.+162    	; 0xe0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	95 c2       	rjmp	.+1322   	; 0x56c <__vector_16>
      42:	00 00       	nop
      44:	4d c0       	rjmp	.+154    	; 0xe0 <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__vector_18>
      4c:	49 c0       	rjmp	.+146    	; 0xe0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	47 c0       	rjmp	.+142    	; 0xe0 <__bad_interrupt>
      52:	00 00       	nop
      54:	45 c0       	rjmp	.+138    	; 0xe0 <__bad_interrupt>
      56:	00 00       	nop
      58:	43 c0       	rjmp	.+134    	; 0xe0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	41 c0       	rjmp	.+130    	; 0xe0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3f c0       	rjmp	.+126    	; 0xe0 <__bad_interrupt>
      62:	00 00       	nop
      64:	3d c0       	rjmp	.+122    	; 0xe0 <__bad_interrupt>
      66:	00 00       	nop
      68:	3b c0       	rjmp	.+118    	; 0xe0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	39 c0       	rjmp	.+114    	; 0xe0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	37 c0       	rjmp	.+110    	; 0xe0 <__bad_interrupt>
      72:	00 00       	nop
      74:	35 c0       	rjmp	.+106    	; 0xe0 <__bad_interrupt>
      76:	00 00       	nop
      78:	33 c0       	rjmp	.+102    	; 0xe0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	31 c0       	rjmp	.+98     	; 0xe0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	2f c0       	rjmp	.+94     	; 0xe0 <__bad_interrupt>
      82:	00 00       	nop
      84:	2d c0       	rjmp	.+90     	; 0xe0 <__bad_interrupt>
      86:	00 00       	nop
      88:	2b c0       	rjmp	.+86     	; 0xe0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d4 06       	cpc	r13, r20
      8e:	4c 07       	cpc	r20, r28
      90:	c4 07       	cpc	r28, r20
      92:	3c 08       	sbc	r3, r12
      94:	bb 08       	sbc	r11, r11
      96:	33 09       	sbc	r19, r3
      98:	ab 09       	sbc	r26, r11
      9a:	23 0a       	sbc	r2, r19
      9c:	9b 0a       	sbc	r9, r27
      9e:	1a 0b       	sbc	r17, r26
      a0:	99 0b       	sbc	r25, r25

000000a2 <__ctors_end>:
      a2:	11 24       	eor	r1, r1
      a4:	1f be       	out	0x3f, r1	; 63
      a6:	cf ef       	ldi	r28, 0xFF	; 255
      a8:	d0 e1       	ldi	r29, 0x10	; 16
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
      ae:	12 e0       	ldi	r17, 0x02	; 2
      b0:	a0 e0       	ldi	r26, 0x00	; 0
      b2:	b1 e0       	ldi	r27, 0x01	; 1
      b4:	e8 ea       	ldi	r30, 0xA8	; 168
      b6:	f2 e2       	ldi	r31, 0x22	; 34
      b8:	00 e0       	ldi	r16, 0x00	; 0
      ba:	0b bf       	out	0x3b, r16	; 59
      bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
      be:	07 90       	elpm	r0, Z+
      c0:	0d 92       	st	X+, r0
      c2:	aa 32       	cpi	r26, 0x2A	; 42
      c4:	b1 07       	cpc	r27, r17
      c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
      c8:	22 e0       	ldi	r18, 0x02	; 2
      ca:	aa e2       	ldi	r26, 0x2A	; 42
      cc:	b2 e0       	ldi	r27, 0x02	; 2
      ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
      d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
      d2:	ae 3d       	cpi	r26, 0xDE	; 222
      d4:	b2 07       	cpc	r27, r18
      d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
      d8:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <main>
      dc:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <_exit>

000000e0 <__bad_interrupt>:
      e0:	8f cf       	rjmp	.-226    	; 0x0 <__vectors>

000000e2 <init_button>:
      e2:	81 b3       	in	r24, 0x11	; 17
      e4:	8f 70       	andi	r24, 0x0F	; 15
      e6:	81 bb       	out	0x11, r24	; 17
      e8:	08 95       	ret

000000ea <get_button1>:
      ea:	80 b3       	in	r24, 0x10	; 16
      ec:	80 71       	andi	r24, 0x10	; 16
      ee:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <prev_state.1737>
      f2:	91 11       	cpse	r25, r1
      f4:	11 c0       	rjmp	.+34     	; 0x118 <get_button1+0x2e>
      f6:	88 23       	and	r24, r24
      f8:	79 f0       	breq	.+30     	; 0x118 <get_button1+0x2e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fa:	2f ef       	ldi	r18, 0xFF	; 255
      fc:	8d ee       	ldi	r24, 0xED	; 237
      fe:	92 e0       	ldi	r25, 0x02	; 2
     100:	21 50       	subi	r18, 0x01	; 1
     102:	80 40       	sbci	r24, 0x00	; 0
     104:	90 40       	sbci	r25, 0x00	; 0
     106:	e1 f7       	brne	.-8      	; 0x100 <get_button1+0x16>
     108:	00 c0       	rjmp	.+0      	; 0x10a <get_button1+0x20>
     10a:	00 00       	nop
     10c:	81 e0       	ldi	r24, 0x01	; 1
     10e:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <prev_state.1737>
     112:	80 e0       	ldi	r24, 0x00	; 0
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	08 95       	ret
     118:	91 30       	cpi	r25, 0x01	; 1
     11a:	81 f4       	brne	.+32     	; 0x13c <get_button1+0x52>
     11c:	81 11       	cpse	r24, r1
     11e:	11 c0       	rjmp	.+34     	; 0x142 <get_button1+0x58>
     120:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <prev_state.1737>
     124:	2f ef       	ldi	r18, 0xFF	; 255
     126:	86 e7       	ldi	r24, 0x76	; 118
     128:	91 e0       	ldi	r25, 0x01	; 1
     12a:	21 50       	subi	r18, 0x01	; 1
     12c:	80 40       	sbci	r24, 0x00	; 0
     12e:	90 40       	sbci	r25, 0x00	; 0
     130:	e1 f7       	brne	.-8      	; 0x12a <get_button1+0x40>
     132:	00 c0       	rjmp	.+0      	; 0x134 <get_button1+0x4a>
     134:	00 00       	nop
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	08 95       	ret
     13c:	80 e0       	ldi	r24, 0x00	; 0
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	08 95       	ret
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	08 95       	ret

00000148 <get_button2>:
     148:	80 b3       	in	r24, 0x10	; 16
     14a:	80 72       	andi	r24, 0x20	; 32
     14c:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <prev_state.1741>
     150:	91 11       	cpse	r25, r1
     152:	11 c0       	rjmp	.+34     	; 0x176 <get_button2+0x2e>
     154:	88 23       	and	r24, r24
     156:	79 f0       	breq	.+30     	; 0x176 <get_button2+0x2e>
     158:	2f ef       	ldi	r18, 0xFF	; 255
     15a:	8d ee       	ldi	r24, 0xED	; 237
     15c:	92 e0       	ldi	r25, 0x02	; 2
     15e:	21 50       	subi	r18, 0x01	; 1
     160:	80 40       	sbci	r24, 0x00	; 0
     162:	90 40       	sbci	r25, 0x00	; 0
     164:	e1 f7       	brne	.-8      	; 0x15e <get_button2+0x16>
     166:	00 c0       	rjmp	.+0      	; 0x168 <get_button2+0x20>
     168:	00 00       	nop
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <prev_state.1741>
     170:	80 e0       	ldi	r24, 0x00	; 0
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	08 95       	ret
     176:	91 30       	cpi	r25, 0x01	; 1
     178:	81 f4       	brne	.+32     	; 0x19a <get_button2+0x52>
     17a:	81 11       	cpse	r24, r1
     17c:	11 c0       	rjmp	.+34     	; 0x1a0 <get_button2+0x58>
     17e:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <prev_state.1741>
     182:	2f ef       	ldi	r18, 0xFF	; 255
     184:	86 e7       	ldi	r24, 0x76	; 118
     186:	91 e0       	ldi	r25, 0x01	; 1
     188:	21 50       	subi	r18, 0x01	; 1
     18a:	80 40       	sbci	r24, 0x00	; 0
     18c:	90 40       	sbci	r25, 0x00	; 0
     18e:	e1 f7       	brne	.-8      	; 0x188 <get_button2+0x40>
     190:	00 c0       	rjmp	.+0      	; 0x192 <get_button2+0x4a>
     192:	00 00       	nop
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	08 95       	ret
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	08 95       	ret
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	08 95       	ret

000001a6 <get_button3>:
     1a6:	80 b3       	in	r24, 0x10	; 16
     1a8:	80 74       	andi	r24, 0x40	; 64
     1aa:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <__data_end>
     1ae:	91 11       	cpse	r25, r1
     1b0:	11 c0       	rjmp	.+34     	; 0x1d4 <get_button3+0x2e>
     1b2:	88 23       	and	r24, r24
     1b4:	79 f0       	breq	.+30     	; 0x1d4 <get_button3+0x2e>
     1b6:	2f ef       	ldi	r18, 0xFF	; 255
     1b8:	8d ee       	ldi	r24, 0xED	; 237
     1ba:	92 e0       	ldi	r25, 0x02	; 2
     1bc:	21 50       	subi	r18, 0x01	; 1
     1be:	80 40       	sbci	r24, 0x00	; 0
     1c0:	90 40       	sbci	r25, 0x00	; 0
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <get_button3+0x16>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <get_button3+0x20>
     1c6:	00 00       	nop
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <__data_end>
     1ce:	80 e0       	ldi	r24, 0x00	; 0
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	08 95       	ret
     1d4:	91 30       	cpi	r25, 0x01	; 1
     1d6:	81 f4       	brne	.+32     	; 0x1f8 <get_button3+0x52>
     1d8:	81 11       	cpse	r24, r1
     1da:	11 c0       	rjmp	.+34     	; 0x1fe <get_button3+0x58>
     1dc:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <__data_end>
     1e0:	2f ef       	ldi	r18, 0xFF	; 255
     1e2:	86 e7       	ldi	r24, 0x76	; 118
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	21 50       	subi	r18, 0x01	; 1
     1e8:	80 40       	sbci	r24, 0x00	; 0
     1ea:	90 40       	sbci	r25, 0x00	; 0
     1ec:	e1 f7       	brne	.-8      	; 0x1e6 <get_button3+0x40>
     1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <get_button3+0x4a>
     1f0:	00 00       	nop
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	08 95       	ret
     1f8:	80 e0       	ldi	r24, 0x00	; 0
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	08 95       	ret
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	08 95       	ret

00000204 <get_fnd_data>:
     204:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <fnd_data>
     208:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <fnd_data+0x1>
     20c:	08 95       	ret

0000020e <display_fnd>:
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
     216:	2a 97       	sbiw	r28, 0x0a	; 10
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	f8 94       	cli
     21c:	de bf       	out	0x3e, r29	; 62
     21e:	0f be       	out	0x3f, r0	; 63
     220:	cd bf       	out	0x3d, r28	; 61
     222:	8a e0       	ldi	r24, 0x0A	; 10
     224:	e2 e1       	ldi	r30, 0x12	; 18
     226:	f1 e0       	ldi	r31, 0x01	; 1
     228:	de 01       	movw	r26, r28
     22a:	11 96       	adiw	r26, 0x01	; 1
     22c:	01 90       	ld	r0, Z+
     22e:	0d 92       	st	X+, r0
     230:	8a 95       	dec	r24
     232:	e1 f7       	brne	.-8      	; 0x22c <display_fnd+0x1e>
     234:	e7 df       	rcall	.-50     	; 0x204 <get_fnd_data>
     236:	ac 01       	movw	r20, r24
     238:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <digit_position.1620>
     23c:	81 30       	cpi	r24, 0x01	; 1
     23e:	61 f1       	breq	.+88     	; 0x298 <display_fnd+0x8a>
     240:	38 f0       	brcs	.+14     	; 0x250 <display_fnd+0x42>
     242:	82 30       	cpi	r24, 0x02	; 2
     244:	09 f4       	brne	.+2      	; 0x248 <display_fnd+0x3a>
     246:	56 c0       	rjmp	.+172    	; 0x2f4 <display_fnd+0xe6>
     248:	83 30       	cpi	r24, 0x03	; 3
     24a:	09 f4       	brne	.+2      	; 0x24e <display_fnd+0x40>
     24c:	83 c0       	rjmp	.+262    	; 0x354 <display_fnd+0x146>
     24e:	b1 c0       	rjmp	.+354    	; 0x3b2 <display_fnd+0x1a4>
     250:	80 e8       	ldi	r24, 0x80	; 128
     252:	88 bb       	out	0x18, r24	; 24
     254:	9a 01       	movw	r18, r20
     256:	ad ec       	ldi	r26, 0xCD	; 205
     258:	bc ec       	ldi	r27, 0xCC	; 204
     25a:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     25e:	96 95       	lsr	r25
     260:	87 95       	ror	r24
     262:	96 95       	lsr	r25
     264:	87 95       	ror	r24
     266:	96 95       	lsr	r25
     268:	87 95       	ror	r24
     26a:	9c 01       	movw	r18, r24
     26c:	22 0f       	add	r18, r18
     26e:	33 1f       	adc	r19, r19
     270:	88 0f       	add	r24, r24
     272:	99 1f       	adc	r25, r25
     274:	88 0f       	add	r24, r24
     276:	99 1f       	adc	r25, r25
     278:	88 0f       	add	r24, r24
     27a:	99 1f       	adc	r25, r25
     27c:	82 0f       	add	r24, r18
     27e:	93 1f       	adc	r25, r19
     280:	9a 01       	movw	r18, r20
     282:	28 1b       	sub	r18, r24
     284:	39 0b       	sbc	r19, r25
     286:	e1 e0       	ldi	r30, 0x01	; 1
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	ec 0f       	add	r30, r28
     28c:	fd 1f       	adc	r31, r29
     28e:	e2 0f       	add	r30, r18
     290:	f3 1f       	adc	r31, r19
     292:	80 81       	ld	r24, Z
     294:	85 bb       	out	0x15, r24	; 21
     296:	8d c0       	rjmp	.+282    	; 0x3b2 <display_fnd+0x1a4>
     298:	80 e4       	ldi	r24, 0x40	; 64
     29a:	88 bb       	out	0x18, r24	; 24
     29c:	9a 01       	movw	r18, r20
     29e:	ad ec       	ldi	r26, 0xCD	; 205
     2a0:	bc ec       	ldi	r27, 0xCC	; 204
     2a2:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     2a6:	ac 01       	movw	r20, r24
     2a8:	56 95       	lsr	r21
     2aa:	47 95       	ror	r20
     2ac:	56 95       	lsr	r21
     2ae:	47 95       	ror	r20
     2b0:	56 95       	lsr	r21
     2b2:	47 95       	ror	r20
     2b4:	9a 01       	movw	r18, r20
     2b6:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     2ba:	96 95       	lsr	r25
     2bc:	87 95       	ror	r24
     2be:	96 95       	lsr	r25
     2c0:	87 95       	ror	r24
     2c2:	96 95       	lsr	r25
     2c4:	87 95       	ror	r24
     2c6:	9c 01       	movw	r18, r24
     2c8:	22 0f       	add	r18, r18
     2ca:	33 1f       	adc	r19, r19
     2cc:	88 0f       	add	r24, r24
     2ce:	99 1f       	adc	r25, r25
     2d0:	88 0f       	add	r24, r24
     2d2:	99 1f       	adc	r25, r25
     2d4:	88 0f       	add	r24, r24
     2d6:	99 1f       	adc	r25, r25
     2d8:	82 0f       	add	r24, r18
     2da:	93 1f       	adc	r25, r19
     2dc:	9a 01       	movw	r18, r20
     2de:	28 1b       	sub	r18, r24
     2e0:	39 0b       	sbc	r19, r25
     2e2:	e1 e0       	ldi	r30, 0x01	; 1
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	ec 0f       	add	r30, r28
     2e8:	fd 1f       	adc	r31, r29
     2ea:	e2 0f       	add	r30, r18
     2ec:	f3 1f       	adc	r31, r19
     2ee:	80 81       	ld	r24, Z
     2f0:	85 bb       	out	0x15, r24	; 21
     2f2:	5f c0       	rjmp	.+190    	; 0x3b2 <display_fnd+0x1a4>
     2f4:	80 e2       	ldi	r24, 0x20	; 32
     2f6:	88 bb       	out	0x18, r24	; 24
     2f8:	9a 01       	movw	r18, r20
     2fa:	36 95       	lsr	r19
     2fc:	27 95       	ror	r18
     2fe:	36 95       	lsr	r19
     300:	27 95       	ror	r18
     302:	ab e7       	ldi	r26, 0x7B	; 123
     304:	b4 e1       	ldi	r27, 0x14	; 20
     306:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     30a:	ac 01       	movw	r20, r24
     30c:	56 95       	lsr	r21
     30e:	47 95       	ror	r20
     310:	9a 01       	movw	r18, r20
     312:	ad ec       	ldi	r26, 0xCD	; 205
     314:	bc ec       	ldi	r27, 0xCC	; 204
     316:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     31a:	96 95       	lsr	r25
     31c:	87 95       	ror	r24
     31e:	96 95       	lsr	r25
     320:	87 95       	ror	r24
     322:	96 95       	lsr	r25
     324:	87 95       	ror	r24
     326:	9c 01       	movw	r18, r24
     328:	22 0f       	add	r18, r18
     32a:	33 1f       	adc	r19, r19
     32c:	88 0f       	add	r24, r24
     32e:	99 1f       	adc	r25, r25
     330:	88 0f       	add	r24, r24
     332:	99 1f       	adc	r25, r25
     334:	88 0f       	add	r24, r24
     336:	99 1f       	adc	r25, r25
     338:	82 0f       	add	r24, r18
     33a:	93 1f       	adc	r25, r19
     33c:	9a 01       	movw	r18, r20
     33e:	28 1b       	sub	r18, r24
     340:	39 0b       	sbc	r19, r25
     342:	e1 e0       	ldi	r30, 0x01	; 1
     344:	f0 e0       	ldi	r31, 0x00	; 0
     346:	ec 0f       	add	r30, r28
     348:	fd 1f       	adc	r31, r29
     34a:	e2 0f       	add	r30, r18
     34c:	f3 1f       	adc	r31, r19
     34e:	80 81       	ld	r24, Z
     350:	85 bb       	out	0x15, r24	; 21
     352:	2f c0       	rjmp	.+94     	; 0x3b2 <display_fnd+0x1a4>
     354:	80 e1       	ldi	r24, 0x10	; 16
     356:	88 bb       	out	0x18, r24	; 24
     358:	9a 01       	movw	r18, r20
     35a:	36 95       	lsr	r19
     35c:	27 95       	ror	r18
     35e:	36 95       	lsr	r19
     360:	27 95       	ror	r18
     362:	36 95       	lsr	r19
     364:	27 95       	ror	r18
     366:	a5 ec       	ldi	r26, 0xC5	; 197
     368:	b0 e2       	ldi	r27, 0x20	; 32
     36a:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     36e:	ac 01       	movw	r20, r24
     370:	52 95       	swap	r21
     372:	42 95       	swap	r20
     374:	4f 70       	andi	r20, 0x0F	; 15
     376:	45 27       	eor	r20, r21
     378:	5f 70       	andi	r21, 0x0F	; 15
     37a:	45 27       	eor	r20, r21
     37c:	9a 01       	movw	r18, r20
     37e:	ab ea       	ldi	r26, 0xAB	; 171
     380:	ba ea       	ldi	r27, 0xAA	; 170
     382:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__umulhisi3>
     386:	96 95       	lsr	r25
     388:	87 95       	ror	r24
     38a:	96 95       	lsr	r25
     38c:	87 95       	ror	r24
     38e:	9c 01       	movw	r18, r24
     390:	22 0f       	add	r18, r18
     392:	33 1f       	adc	r19, r19
     394:	82 0f       	add	r24, r18
     396:	93 1f       	adc	r25, r19
     398:	88 0f       	add	r24, r24
     39a:	99 1f       	adc	r25, r25
     39c:	9a 01       	movw	r18, r20
     39e:	28 1b       	sub	r18, r24
     3a0:	39 0b       	sbc	r19, r25
     3a2:	e1 e0       	ldi	r30, 0x01	; 1
     3a4:	f0 e0       	ldi	r31, 0x00	; 0
     3a6:	ec 0f       	add	r30, r28
     3a8:	fd 1f       	adc	r31, r29
     3aa:	e2 0f       	add	r30, r18
     3ac:	f3 1f       	adc	r31, r19
     3ae:	80 81       	ld	r24, Z
     3b0:	85 bb       	out	0x15, r24	; 21
     3b2:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <digit_position.1620>
     3b6:	8f 5f       	subi	r24, 0xFF	; 255
     3b8:	83 70       	andi	r24, 0x03	; 3
     3ba:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <digit_position.1620>
     3be:	2a 96       	adiw	r28, 0x0a	; 10
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	df 91       	pop	r29
     3cc:	cf 91       	pop	r28
     3ce:	08 95       	ret

000003d0 <init_fnd>:
     3d0:	9f ef       	ldi	r25, 0xFF	; 255
     3d2:	94 bb       	out	0x14, r25	; 20
     3d4:	87 b3       	in	r24, 0x17	; 23
     3d6:	80 6f       	ori	r24, 0xF0	; 240
     3d8:	87 bb       	out	0x17, r24	; 23
     3da:	95 bb       	out	0x15, r25	; 21
     3dc:	08 95       	ret

000003de <I2C_init>:
     3de:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     3e2:	08 95       	ret

000003e4 <I2C_start>:
     3e4:	84 ea       	ldi	r24, 0xA4	; 164
     3e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3ea:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3ee:	88 23       	and	r24, r24
     3f0:	e4 f7       	brge	.-8      	; 0x3ea <I2C_start+0x6>
     3f2:	08 95       	ret

000003f4 <I2C_transmit>:
     3f4:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
     3f8:	84 e8       	ldi	r24, 0x84	; 132
     3fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3fe:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     402:	88 23       	and	r24, r24
     404:	e4 f7       	brge	.-8      	; 0x3fe <I2C_transmit+0xa>
     406:	08 95       	ret

00000408 <I2C_stop>:
     408:	84 e9       	ldi	r24, 0x94	; 148
     40a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     40e:	08 95       	ret

00000410 <I2C_write_byte>:
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
     414:	d8 2f       	mov	r29, r24
     416:	c6 2f       	mov	r28, r22
     418:	e5 df       	rcall	.-54     	; 0x3e4 <I2C_start>
     41a:	8d 2f       	mov	r24, r29
     41c:	eb df       	rcall	.-42     	; 0x3f4 <I2C_transmit>
     41e:	8c 2f       	mov	r24, r28
     420:	e9 df       	rcall	.-46     	; 0x3f4 <I2C_transmit>
     422:	f2 df       	rcall	.-28     	; 0x408 <I2C_stop>
     424:	df 91       	pop	r29
     426:	cf 91       	pop	r28
     428:	08 95       	ret

0000042a <I2C_LCD_write_data>:
     42a:	1f 93       	push	r17
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	00 d0       	rcall	.+0      	; 0x432 <I2C_LCD_write_data+0x8>
     432:	00 d0       	rcall	.+0      	; 0x434 <I2C_LCD_write_data+0xa>
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
     438:	28 2f       	mov	r18, r24
     43a:	20 7f       	andi	r18, 0xF0	; 240
     43c:	30 e1       	ldi	r19, 0x10	; 16
     43e:	83 9f       	mul	r24, r19
     440:	c0 01       	movw	r24, r0
     442:	11 24       	eor	r1, r1
     444:	92 2f       	mov	r25, r18
     446:	9d 60       	ori	r25, 0x0D	; 13
     448:	99 83       	std	Y+1, r25	; 0x01
     44a:	29 60       	ori	r18, 0x09	; 9
     44c:	2a 83       	std	Y+2, r18	; 0x02
     44e:	98 2f       	mov	r25, r24
     450:	9d 60       	ori	r25, 0x0D	; 13
     452:	9b 83       	std	Y+3, r25	; 0x03
     454:	89 60       	ori	r24, 0x09	; 9
     456:	8c 83       	std	Y+4, r24	; 0x04
     458:	10 e0       	ldi	r17, 0x00	; 0
     45a:	0a c0       	rjmp	.+20     	; 0x470 <I2C_LCD_write_data+0x46>
     45c:	e1 e0       	ldi	r30, 0x01	; 1
     45e:	f0 e0       	ldi	r31, 0x00	; 0
     460:	ec 0f       	add	r30, r28
     462:	fd 1f       	adc	r31, r29
     464:	e1 0f       	add	r30, r17
     466:	f1 1d       	adc	r31, r1
     468:	60 81       	ld	r22, Z
     46a:	8e e4       	ldi	r24, 0x4E	; 78
     46c:	d1 df       	rcall	.-94     	; 0x410 <I2C_write_byte>
     46e:	1f 5f       	subi	r17, 0xFF	; 255
     470:	14 30       	cpi	r17, 0x04	; 4
     472:	a0 f3       	brcs	.-24     	; 0x45c <I2C_LCD_write_data+0x32>
     474:	0f 90       	pop	r0
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	df 91       	pop	r29
     47e:	cf 91       	pop	r28
     480:	1f 91       	pop	r17
     482:	08 95       	ret

00000484 <I2C_LCD_write_command>:
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	00 d0       	rcall	.+0      	; 0x48c <I2C_LCD_write_command+0x8>
     48c:	00 d0       	rcall	.+0      	; 0x48e <I2C_LCD_write_command+0xa>
     48e:	cd b7       	in	r28, 0x3d	; 61
     490:	de b7       	in	r29, 0x3e	; 62
     492:	28 2f       	mov	r18, r24
     494:	20 7f       	andi	r18, 0xF0	; 240
     496:	30 e1       	ldi	r19, 0x10	; 16
     498:	83 9f       	mul	r24, r19
     49a:	c0 01       	movw	r24, r0
     49c:	11 24       	eor	r1, r1
     49e:	92 2f       	mov	r25, r18
     4a0:	9c 60       	ori	r25, 0x0C	; 12
     4a2:	99 83       	std	Y+1, r25	; 0x01
     4a4:	28 60       	ori	r18, 0x08	; 8
     4a6:	2a 83       	std	Y+2, r18	; 0x02
     4a8:	98 2f       	mov	r25, r24
     4aa:	9c 60       	ori	r25, 0x0C	; 12
     4ac:	9b 83       	std	Y+3, r25	; 0x03
     4ae:	88 60       	ori	r24, 0x08	; 8
     4b0:	8c 83       	std	Y+4, r24	; 0x04
     4b2:	10 e0       	ldi	r17, 0x00	; 0
     4b4:	0a c0       	rjmp	.+20     	; 0x4ca <I2C_LCD_write_command+0x46>
     4b6:	e1 e0       	ldi	r30, 0x01	; 1
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	ec 0f       	add	r30, r28
     4bc:	fd 1f       	adc	r31, r29
     4be:	e1 0f       	add	r30, r17
     4c0:	f1 1d       	adc	r31, r1
     4c2:	60 81       	ld	r22, Z
     4c4:	8e e4       	ldi	r24, 0x4E	; 78
     4c6:	a4 df       	rcall	.-184    	; 0x410 <I2C_write_byte>
     4c8:	1f 5f       	subi	r17, 0xFF	; 255
     4ca:	14 30       	cpi	r17, 0x04	; 4
     4cc:	a0 f3       	brcs	.-24     	; 0x4b6 <I2C_LCD_write_command+0x32>
     4ce:	0f 90       	pop	r0
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	df 91       	pop	r29
     4d8:	cf 91       	pop	r28
     4da:	1f 91       	pop	r17
     4dc:	08 95       	ret

000004de <I2C_LCD_init>:
     4de:	80 e1       	ldi	r24, 0x10	; 16
     4e0:	97 e2       	ldi	r25, 0x27	; 39
     4e2:	7d df       	rcall	.-262    	; 0x3de <I2C_init>
     4e4:	2f ef       	ldi	r18, 0xFF	; 255
     4e6:	80 e7       	ldi	r24, 0x70	; 112
     4e8:	92 e0       	ldi	r25, 0x02	; 2
     4ea:	21 50       	subi	r18, 0x01	; 1
     4ec:	80 40       	sbci	r24, 0x00	; 0
     4ee:	90 40       	sbci	r25, 0x00	; 0
     4f0:	e1 f7       	brne	.-8      	; 0x4ea <I2C_LCD_init+0xc>
     4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <I2C_LCD_init+0x16>
     4f4:	00 00       	nop
     4f6:	83 e3       	ldi	r24, 0x33	; 51
     4f8:	c5 df       	rcall	.-118    	; 0x484 <I2C_LCD_write_command>
     4fa:	82 e3       	ldi	r24, 0x32	; 50
     4fc:	c3 df       	rcall	.-122    	; 0x484 <I2C_LCD_write_command>
     4fe:	88 e2       	ldi	r24, 0x28	; 40
     500:	c1 df       	rcall	.-126    	; 0x484 <I2C_LCD_write_command>
     502:	8c e0       	ldi	r24, 0x0C	; 12
     504:	bf df       	rcall	.-130    	; 0x484 <I2C_LCD_write_command>
     506:	86 e0       	ldi	r24, 0x06	; 6
     508:	bd df       	rcall	.-134    	; 0x484 <I2C_LCD_write_command>
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	bb df       	rcall	.-138    	; 0x484 <I2C_LCD_write_command>
     50e:	8f e3       	ldi	r24, 0x3F	; 63
     510:	9c e9       	ldi	r25, 0x9C	; 156
     512:	01 97       	sbiw	r24, 0x01	; 1
     514:	f1 f7       	brne	.-4      	; 0x512 <I2C_LCD_init+0x34>
     516:	00 c0       	rjmp	.+0      	; 0x518 <I2C_LCD_init+0x3a>
     518:	00 00       	nop
     51a:	08 95       	ret

0000051c <I2C_LCD_write_string>:
     51c:	0f 93       	push	r16
     51e:	1f 93       	push	r17
     520:	cf 93       	push	r28
     522:	8c 01       	movw	r16, r24
     524:	c0 e0       	ldi	r28, 0x00	; 0
     526:	02 c0       	rjmp	.+4      	; 0x52c <I2C_LCD_write_string+0x10>
     528:	80 df       	rcall	.-256    	; 0x42a <I2C_LCD_write_data>
     52a:	cf 5f       	subi	r28, 0xFF	; 255
     52c:	f8 01       	movw	r30, r16
     52e:	ec 0f       	add	r30, r28
     530:	f1 1d       	adc	r31, r1
     532:	80 81       	ld	r24, Z
     534:	81 11       	cpse	r24, r1
     536:	f8 cf       	rjmp	.-16     	; 0x528 <I2C_LCD_write_string+0xc>
     538:	cf 91       	pop	r28
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	08 95       	ret

00000540 <I2C_LCD_goto_XY>:
     540:	6f 70       	andi	r22, 0x0F	; 15
     542:	81 70       	andi	r24, 0x01	; 1
     544:	90 e4       	ldi	r25, 0x40	; 64
     546:	89 9f       	mul	r24, r25
     548:	60 0d       	add	r22, r0
     54a:	11 24       	eor	r1, r1
     54c:	86 2f       	mov	r24, r22
     54e:	80 58       	subi	r24, 0x80	; 128
     550:	99 cf       	rjmp	.-206    	; 0x484 <I2C_LCD_write_command>
     552:	08 95       	ret

00000554 <I2C_LCD_write_string_XY>:
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	ea 01       	movw	r28, r20
     55a:	f2 df       	rcall	.-28     	; 0x540 <I2C_LCD_goto_XY>
     55c:	ce 01       	movw	r24, r28
     55e:	de df       	rcall	.-68     	; 0x51c <I2C_LCD_write_string>
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <init_led>:
     566:	8f ef       	ldi	r24, 0xFF	; 255
     568:	8a bb       	out	0x1a, r24	; 26
     56a:	08 95       	ret

0000056c <__vector_16>:
// 3. 8 bit Timer OV: 0.004ms x 256 ==> 0.00124sec ==> 약 1.24ms
//                    0.004ms x 250 ==> 1ms
// 256개의 pulse 를 count 를 하면 이곳으로 온다.
// 1ms 마다 ISR(TIMER0_OVF_vect) 이곳으로 들어 온다
ISR(TIMER0_OVF_vect)
{
     56c:	1f 92       	push	r1
     56e:	0f 92       	push	r0
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	0f 92       	push	r0
     574:	11 24       	eor	r1, r1
     576:	0b b6       	in	r0, 0x3b	; 59
     578:	0f 92       	push	r0
     57a:	2f 93       	push	r18
     57c:	3f 93       	push	r19
     57e:	4f 93       	push	r20
     580:	5f 93       	push	r21
     582:	6f 93       	push	r22
     584:	7f 93       	push	r23
     586:	8f 93       	push	r24
     588:	9f 93       	push	r25
     58a:	af 93       	push	r26
     58c:	bf 93       	push	r27
     58e:	ef 93       	push	r30
     590:	ff 93       	push	r31
	TCNT0 =0;
     592:	12 be       	out	0x32, r1	; 50
	ms_count++;
     594:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <ms_count>
     598:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <ms_count+0x1>
     59c:	a0 91 5a 02 	lds	r26, 0x025A	; 0x80025a <ms_count+0x2>
     5a0:	b0 91 5b 02 	lds	r27, 0x025B	; 0x80025b <ms_count+0x3>
     5a4:	01 96       	adiw	r24, 0x01	; 1
     5a6:	a1 1d       	adc	r26, r1
     5a8:	b1 1d       	adc	r27, r1
     5aa:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <ms_count>
     5ae:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <ms_count+0x1>
     5b2:	a0 93 5a 02 	sts	0x025A, r26	; 0x80025a <ms_count+0x2>
     5b6:	b0 93 5b 02 	sts	0x025B, r27	; 0x80025b <ms_count+0x3>
	fs_ms_count++;
     5ba:	20 91 46 02 	lds	r18, 0x0246	; 0x800246 <fs_ms_count>
     5be:	30 91 47 02 	lds	r19, 0x0247	; 0x800247 <fs_ms_count+0x1>
     5c2:	2f 5f       	subi	r18, 0xFF	; 255
     5c4:	3f 4f       	sbci	r19, 0xFF	; 255
     5c6:	30 93 47 02 	sts	0x0247, r19	; 0x800247 <fs_ms_count+0x1>
     5ca:	20 93 46 02 	sts	0x0246, r18	; 0x800246 <fs_ms_count>
	common_ms_count++;
     5ce:	20 91 44 02 	lds	r18, 0x0244	; 0x800244 <common_ms_count>
     5d2:	30 91 45 02 	lds	r19, 0x0245	; 0x800245 <common_ms_count+0x1>
     5d6:	2f 5f       	subi	r18, 0xFF	; 255
     5d8:	3f 4f       	sbci	r19, 0xFF	; 255
     5da:	30 93 45 02 	sts	0x0245, r19	; 0x800245 <common_ms_count+0x1>
     5de:	20 93 44 02 	sts	0x0244, r18	; 0x800244 <common_ms_count>
	 MANUAL_ms_count++;
     5e2:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <MANUAL_ms_count>
     5e6:	30 91 43 02 	lds	r19, 0x0243	; 0x800243 <MANUAL_ms_count+0x1>
     5ea:	2f 5f       	subi	r18, 0xFF	; 255
     5ec:	3f 4f       	sbci	r19, 0xFF	; 255
     5ee:	30 93 43 02 	sts	0x0243, r19	; 0x800243 <MANUAL_ms_count+0x1>
     5f2:	20 93 42 02 	sts	0x0242, r18	; 0x800242 <MANUAL_ms_count>
	
	
	if(ms_count >=1000)
     5f6:	88 3e       	cpi	r24, 0xE8	; 232
     5f8:	93 40       	sbci	r25, 0x03	; 3
     5fa:	a1 05       	cpc	r26, r1
     5fc:	b1 05       	cpc	r27, r1
     5fe:	08 f4       	brcc	.+2      	; 0x602 <__vector_16+0x96>
     600:	68 c0       	rjmp	.+208    	; 0x6d2 <__vector_16+0x166>
	{
		ms_count = 0;
     602:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <ms_count>
     606:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <ms_count+0x1>
     60a:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <ms_count+0x2>
     60e:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <ms_count+0x3>
		sec_count++;
     612:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <sec_count>
     616:	90 91 55 02 	lds	r25, 0x0255	; 0x800255 <sec_count+0x1>
     61a:	a0 91 56 02 	lds	r26, 0x0256	; 0x800256 <sec_count+0x2>
     61e:	b0 91 57 02 	lds	r27, 0x0257	; 0x800257 <sec_count+0x3>
     622:	01 96       	adiw	r24, 0x01	; 1
     624:	a1 1d       	adc	r26, r1
     626:	b1 1d       	adc	r27, r1
     628:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <sec_count>
     62c:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <sec_count+0x1>
     630:	a0 93 56 02 	sts	0x0256, r26	; 0x800256 <sec_count+0x2>
     634:	b0 93 57 02 	sts	0x0257, r27	; 0x800257 <sec_count+0x3>
		if (!fast_indicator)
     638:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <fast_indicator>
     63c:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <fast_indicator+0x1>
     640:	89 2b       	or	r24, r25
     642:	99 f4       	brne	.+38     	; 0x66a <__vector_16+0xfe>
			fast_sec_count++;
     644:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <fast_sec_count>
     648:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <fast_sec_count+0x1>
     64c:	a0 91 52 02 	lds	r26, 0x0252	; 0x800252 <fast_sec_count+0x2>
     650:	b0 91 53 02 	lds	r27, 0x0253	; 0x800253 <fast_sec_count+0x3>
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	a1 1d       	adc	r26, r1
     658:	b1 1d       	adc	r27, r1
     65a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <fast_sec_count>
     65e:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <fast_sec_count+0x1>
     662:	a0 93 52 02 	sts	0x0252, r26	; 0x800252 <fast_sec_count+0x2>
     666:	b0 93 53 02 	sts	0x0253, r27	; 0x800253 <fast_sec_count+0x3>
		if (!common_indicator)
     66a:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <common_indicator>
     66e:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <common_indicator+0x1>
     672:	89 2b       	or	r24, r25
     674:	99 f4       	brne	.+38     	; 0x69c <__vector_16+0x130>
			common_sec_count++;
     676:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <common_sec_count>
     67a:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <common_sec_count+0x1>
     67e:	a0 91 4e 02 	lds	r26, 0x024E	; 0x80024e <common_sec_count+0x2>
     682:	b0 91 4f 02 	lds	r27, 0x024F	; 0x80024f <common_sec_count+0x3>
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	a1 1d       	adc	r26, r1
     68a:	b1 1d       	adc	r27, r1
     68c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <common_sec_count>
     690:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <common_sec_count+0x1>
     694:	a0 93 4e 02 	sts	0x024E, r26	; 0x80024e <common_sec_count+0x2>
     698:	b0 93 4f 02 	sts	0x024F, r27	; 0x80024f <common_sec_count+0x3>
		if (!MANUAL_indicator)
     69c:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <MANUAL_indicator>
     6a0:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <MANUAL_indicator+0x1>
     6a4:	89 2b       	or	r24, r25
     6a6:	99 f4       	brne	.+38     	; 0x6ce <__vector_16+0x162>
		MANUAL_sec_count++;
     6a8:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     6ac:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     6b0:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     6b4:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	a1 1d       	adc	r26, r1
     6bc:	b1 1d       	adc	r27, r1
     6be:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <MANUAL_sec_count>
     6c2:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <MANUAL_sec_count+0x1>
     6c6:	a0 93 4a 02 	sts	0x024A, r26	; 0x80024a <MANUAL_sec_count+0x2>
     6ca:	b0 93 4b 02 	sts	0x024B, r27	; 0x80024b <MANUAL_sec_count+0x3>
		
		inc_time_sec();
     6ce:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <inc_time_sec>
	}
		if (ms_count%4 == 0)  // 4ms 마다 FND를 display
     6d2:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <ms_count>
     6d6:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <ms_count+0x1>
     6da:	a0 91 5a 02 	lds	r26, 0x025A	; 0x80025a <ms_count+0x2>
     6de:	b0 91 5b 02 	lds	r27, 0x025B	; 0x80025b <ms_count+0x3>
     6e2:	83 70       	andi	r24, 0x03	; 3
     6e4:	99 27       	eor	r25, r25
     6e6:	aa 27       	eor	r26, r26
     6e8:	bb 27       	eor	r27, r27
     6ea:	89 2b       	or	r24, r25
     6ec:	8a 2b       	or	r24, r26
     6ee:	8b 2b       	or	r24, r27
     6f0:	09 f4       	brne	.+2      	; 0x6f4 <__vector_16+0x188>
		display_fnd();
     6f2:	8d dd       	rcall	.-1254   	; 0x20e <display_fnd>
		
}
     6f4:	ff 91       	pop	r31
     6f6:	ef 91       	pop	r30
     6f8:	bf 91       	pop	r27
     6fa:	af 91       	pop	r26
     6fc:	9f 91       	pop	r25
     6fe:	8f 91       	pop	r24
     700:	7f 91       	pop	r23
     702:	6f 91       	pop	r22
     704:	5f 91       	pop	r21
     706:	4f 91       	pop	r20
     708:	3f 91       	pop	r19
     70a:	2f 91       	pop	r18
     70c:	0f 90       	pop	r0
     70e:	0b be       	out	0x3b, r0	; 59
     710:	0f 90       	pop	r0
     712:	0f be       	out	0x3f, r0	; 63
     714:	0f 90       	pop	r0
     716:	1f 90       	pop	r1
     718:	18 95       	reti

0000071a <init_timer0>:
	}
}

void init_timer0()
{
	TCNT0=6;   // TCNT 6~256 ==> 정확히 1ms 마다 TIMT 0 OVF INT
     71a:	86 e0       	ldi	r24, 0x06	; 6
     71c:	82 bf       	out	0x32, r24	; 50
	// 분주비를 64로 설정 P269 표13-1
	TCCR0 |= (1 << CS02) | (0 << CS01) | (0 << CS00);
     71e:	83 b7       	in	r24, 0x33	; 51
     720:	84 60       	ori	r24, 0x04	; 4
     722:	83 bf       	out	0x33, r24	; 51

	TIMSK |= (1 << TOIE0);			// 오버플로 인터럽트 허용
     724:	87 b7       	in	r24, 0x37	; 55
     726:	81 60       	ori	r24, 0x01	; 1
     728:	87 bf       	out	0x37, r24	; 55
	
	sei();							// 전역적으로 인터럽트 허용
     72a:	78 94       	sei
     72c:	08 95       	ret

0000072e <init_pwm>:
}

void init_pwm()
{
	DDRE |= (1 << 3) | (1 << 4) | (1 << 5);
     72e:	82 b1       	in	r24, 0x02	; 2
     730:	88 63       	ori	r24, 0x38	; 56
     732:	82 b9       	out	0x02, r24	; 2
	// 모드 5 : 8비트 고속 pwm timer 3
	TCCR3A |= (1 << WGM30);
     734:	ab e8       	ldi	r26, 0x8B	; 139
     736:	b0 e0       	ldi	r27, 0x00	; 0
     738:	8c 91       	ld	r24, X
     73a:	81 60       	ori	r24, 0x01	; 1
     73c:	8c 93       	st	X, r24
	TCCR3B |= (1 << WGM32);	// p348 표 15-6
     73e:	ea e8       	ldi	r30, 0x8A	; 138
     740:	f0 e0       	ldi	r31, 0x00	; 0
     742:	80 81       	ld	r24, Z
     744:	88 60       	ori	r24, 0x08	; 8
     746:	80 83       	st	Z, r24
	// 비반전 모드 top : 0xff 비교일치값 OCR3c
	TCCR3A |= (1 << COM3C1);
     748:	8c 91       	ld	r24, X
     74a:	88 60       	ori	r24, 0x08	; 8
     74c:	8c 93       	st	X, r24
	// 분주비 64 : 16000000/64 ==> 250000Hz(2250KHz)
	// 256 / 250000Hz ==> 1.02ms
	// 127 / 250000 => 0.5ms
	TCCR3B |= (1 << CS31) | (1 << CS30);	// 분주비 64
     74e:	80 81       	ld	r24, Z
     750:	83 60       	ori	r24, 0x03	; 3
     752:	80 83       	st	Z, r24
	OCR3C = 0;
     754:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     758:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	DDRA = 0xff;
     75c:	8f ef       	ldi	r24, 0xFF	; 255
     75e:	8a bb       	out	0x1a, r24	; 26
	DDRF = 0x01;
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     766:	08 95       	ret

00000768 <power_AUTO>:
	}
}

void power_AUTO()
{
	PORTE &= 0b11111011;
     768:	83 b1       	in	r24, 0x03	; 3
     76a:	8b 7f       	andi	r24, 0xFB	; 251
     76c:	83 b9       	out	0x03, r24	; 3
	PORTE |= 0b00000001;
     76e:	83 b1       	in	r24, 0x03	; 3
     770:	81 60       	ori	r24, 0x01	; 1
     772:	83 b9       	out	0x03, r24	; 3
	OCR3C=210;
     774:	82 ed       	ldi	r24, 0xD2	; 210
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     77c:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     780:	08 95       	ret

00000782 <power_common>:
}

void power_common()
{

	PORTE &= 0b11111011;
     782:	83 b1       	in	r24, 0x03	; 3
     784:	8b 7f       	andi	r24, 0xFB	; 251
     786:	83 b9       	out	0x03, r24	; 3
	PORTE |= 0b00000001;
     788:	83 b1       	in	r24, 0x03	; 3
     78a:	81 60       	ori	r24, 0x01	; 1
     78c:	83 b9       	out	0x03, r24	; 3
	OCR3C=170;
     78e:	8a ea       	ldi	r24, 0xAA	; 170
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     796:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     79a:	08 95       	ret

0000079c <power_MANUAL_mode>:
}
void power_MANUAL_mode()
{
	switch(spin)
     79c:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <spin>
     7a0:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <spin+0x1>
     7a4:	81 30       	cpi	r24, 0x01	; 1
     7a6:	91 05       	cpc	r25, r1
     7a8:	61 f0       	breq	.+24     	; 0x7c2 <power_MANUAL_mode+0x26>
     7aa:	82 30       	cpi	r24, 0x02	; 2
     7ac:	91 05       	cpc	r25, r1
     7ae:	69 f0       	breq	.+26     	; 0x7ca <power_MANUAL_mode+0x2e>
     7b0:	89 2b       	or	r24, r25
     7b2:	91 f4       	brne	.+36     	; 0x7d8 <power_MANUAL_mode+0x3c>
	{
		case 0:
		// 정회전 : PE2:0 PE0 1
		PORTE &= 0b11111011;
     7b4:	83 b1       	in	r24, 0x03	; 3
     7b6:	8b 7f       	andi	r24, 0xFB	; 251
     7b8:	83 b9       	out	0x03, r24	; 3
		PORTE |= 0b00000001;
     7ba:	83 b1       	in	r24, 0x03	; 3
     7bc:	81 60       	ori	r24, 0x01	; 1
     7be:	83 b9       	out	0x03, r24	; 3
		break;
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <power_MANUAL_mode+0x42>
		case 1:
		// 모터정지 : PE0:1 PE2:1
		PORTE |= 0b00000101;
     7c2:	83 b1       	in	r24, 0x03	; 3
     7c4:	85 60       	ori	r24, 0x05	; 5
     7c6:	83 b9       	out	0x03, r24	; 3
		break;
     7c8:	0a c0       	rjmp	.+20     	; 0x7de <power_MANUAL_mode+0x42>
		case 2:
		// 역회전 : PE2:1 PE0 0
		PORTE &= 0b11111110;
     7ca:	83 b1       	in	r24, 0x03	; 3
     7cc:	8e 7f       	andi	r24, 0xFE	; 254
     7ce:	83 b9       	out	0x03, r24	; 3
		PORTE |= 0b00000100;
     7d0:	83 b1       	in	r24, 0x03	; 3
     7d2:	84 60       	ori	r24, 0x04	; 4
     7d4:	83 b9       	out	0x03, r24	; 3
		break;
     7d6:	03 c0       	rjmp	.+6      	; 0x7de <power_MANUAL_mode+0x42>
		default:
		// 모터정지 : PE0:1 PE2:1
		PORTE |= 0b00000101;
     7d8:	83 b1       	in	r24, 0x03	; 3
     7da:	85 60       	ori	r24, 0x05	; 5
     7dc:	83 b9       	out	0x03, r24	; 3
		break;
	}
	OCR3C=160;
     7de:	80 ea       	ldi	r24, 0xA0	; 160
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     7e6:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     7ea:	08 95       	ret

000007ec <power_done>:
	
}

void power_done()
{
	OCR3C = 0;
     7ec:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     7f0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     7f4:	08 95       	ret

000007f6 <FAST_time>:
	DDRA = 0xff;
	DDRF = 0x01;
}

void FAST_time()
{
     7f6:	0f 93       	push	r16
     7f8:	1f 93       	push	r17
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	cd b7       	in	r28, 0x3d	; 61
     800:	de b7       	in	r29, 0x3e	; 62
     802:	a8 97       	sbiw	r28, 0x28	; 40
     804:	0f b6       	in	r0, 0x3f	; 63
     806:	f8 94       	cli
     808:	de bf       	out	0x3e, r29	; 62
     80a:	0f be       	out	0x3f, r0	; 63
     80c:	cd bf       	out	0x3d, r28	; 61
	char sbuf[40];
	int fan_mode;

	   if(before_finishing==0 && check_running==0)// can not setting during 세탁, 일시정지
	   {
		   wash=1;
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <wash+0x1>
     816:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <wash>
		   RIN =1;
     81a:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <RIN+0x1>
     81e:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <RIN>
		   dry =1;
     822:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <dry+0x1>
     826:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <dry>
		   total_time =(wash*10)+(RIN*10)+(dry*10);
     82a:	8e e1       	ldi	r24, 0x1E	; 30
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	a0 e0       	ldi	r26, 0x00	; 0
     830:	b0 e0       	ldi	r27, 0x00	; 0
     832:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <total_time>
     836:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <total_time+0x1>
     83a:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <total_time+0x2>
     83e:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <total_time+0x3>
		   set_time =total_time;
     842:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <set_time+0x1>
     846:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <set_time>
	   }
		fs_ms_count=0;
     84a:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <fs_ms_count+0x1>
     84e:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <fs_ms_count>
		
		 for(fast_sec_count = 0; fast_sec_count < total_time;)
     852:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <fast_sec_count>
     856:	10 92 51 02 	sts	0x0251, r1	; 0x800251 <fast_sec_count+0x1>
     85a:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <fast_sec_count+0x2>
     85e:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <fast_sec_count+0x3>
     862:	ac c0       	rjmp	.+344    	; 0x9bc <FAST_time+0x1c6>
		 {
			 
			 if (fs_ms_count >= 1000)   // 1000ms ==> 1sec
     864:	20 91 46 02 	lds	r18, 0x0246	; 0x800246 <fs_ms_count>
     868:	30 91 47 02 	lds	r19, 0x0247	; 0x800247 <fs_ms_count+0x1>
     86c:	28 3e       	cpi	r18, 0xE8	; 232
     86e:	33 40       	sbci	r19, 0x03	; 3
     870:	f4 f0       	brlt	.+60     	; 0x8ae <FAST_time+0xb8>
			 {
				 
				fs_ms_count=0;
     872:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <fs_ms_count+0x1>
     876:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <fs_ms_count>
				fast_sec_count++;
     87a:	01 96       	adiw	r24, 0x01	; 1
     87c:	a1 1d       	adc	r26, r1
     87e:	b1 1d       	adc	r27, r1
     880:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <fast_sec_count>
     884:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <fast_sec_count+0x1>
     888:	a0 93 52 02 	sts	0x0252, r26	; 0x800252 <fast_sec_count+0x2>
     88c:	b0 93 53 02 	sts	0x0253, r27	; 0x800253 <fast_sec_count+0x3>
				
				 I2C_LCD_write_string_XY(0, 0, "                ");
     890:	4e e1       	ldi	r20, 0x1E	; 30
     892:	51 e0       	ldi	r21, 0x01	; 1
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	5b de       	rcall	.-842    	; 0x554 <I2C_LCD_write_string_XY>
				 I2C_LCD_write_string_XY(1, 0, "                ");
     89e:	4e e1       	ldi	r20, 0x1E	; 30
     8a0:	51 e0       	ldi	r21, 0x01	; 1
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	81 e0       	ldi	r24, 0x01	; 1
     8a8:	90 e0       	ldi	r25, 0x00	; 0
				 power_AUTO();
     8aa:	54 de       	rcall	.-856    	; 0x554 <I2C_LCD_write_string_XY>
     8ac:	5d df       	rcall	.-326    	; 0x768 <power_AUTO>
				 

			 }		


			I2C_LCD_write_string_XY(0, 0, "                  ");
     8ae:	4c e1       	ldi	r20, 0x1C	; 28
     8b0:	51 e0       	ldi	r21, 0x01	; 1
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	4c de       	rcall	.-872    	; 0x554 <I2C_LCD_write_string_XY>
			sprintf(sbuf, "[FAST]time : %d s",total_time - fast_sec_count);
     8bc:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <total_time>
     8c0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <total_time+0x1>
     8c4:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <total_time+0x2>
     8c8:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <total_time+0x3>
     8cc:	40 91 50 02 	lds	r20, 0x0250	; 0x800250 <fast_sec_count>
     8d0:	50 91 51 02 	lds	r21, 0x0251	; 0x800251 <fast_sec_count+0x1>
     8d4:	60 91 52 02 	lds	r22, 0x0252	; 0x800252 <fast_sec_count+0x2>
     8d8:	70 91 53 02 	lds	r23, 0x0253	; 0x800253 <fast_sec_count+0x3>
     8dc:	84 1b       	sub	r24, r20
     8de:	95 0b       	sbc	r25, r21
     8e0:	a6 0b       	sbc	r26, r22
     8e2:	b7 0b       	sbc	r27, r23
     8e4:	bf 93       	push	r27
     8e6:	af 93       	push	r26
     8e8:	9f 93       	push	r25
     8ea:	8f 93       	push	r24
     8ec:	8f e2       	ldi	r24, 0x2F	; 47
     8ee:	91 e0       	ldi	r25, 0x01	; 1
     8f0:	9f 93       	push	r25
     8f2:	8f 93       	push	r24
     8f4:	8e 01       	movw	r16, r28
     8f6:	0f 5f       	subi	r16, 0xFF	; 255
     8f8:	1f 4f       	sbci	r17, 0xFF	; 255
     8fa:	1f 93       	push	r17
     8fc:	0f 93       	push	r16
     8fe:	0e 94 77 0e 	call	0x1cee	; 0x1cee <sprintf>
			I2C_LCD_write_string_XY(0, 0,sbuf );
     902:	a8 01       	movw	r20, r16
     904:	60 e0       	ldi	r22, 0x00	; 0
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	23 de       	rcall	.-954    	; 0x554 <I2C_LCD_write_string_XY>
			I2C_LCD_write_string_XY(1, 0, "                  ");
     90e:	4c e1       	ldi	r20, 0x1C	; 28
     910:	51 e0       	ldi	r21, 0x01	; 1
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	1c de       	rcall	.-968    	; 0x554 <I2C_LCD_write_string_XY>
			sprintf(sbuf, "w: %d,R : %d D : %d ",wash,RIN,dry);
     91c:	80 91 5d 02 	lds	r24, 0x025D	; 0x80025d <dry+0x1>
     920:	8f 93       	push	r24
     922:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <dry>
     926:	8f 93       	push	r24
     928:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <RIN+0x1>
     92c:	8f 93       	push	r24
     92e:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <RIN>
     932:	8f 93       	push	r24
     934:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <wash+0x1>
     938:	8f 93       	push	r24
     93a:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <wash>
     93e:	8f 93       	push	r24
     940:	81 e4       	ldi	r24, 0x41	; 65
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	1f 93       	push	r17
     94a:	0f 93       	push	r16
     94c:	0e 94 77 0e 	call	0x1cee	; 0x1cee <sprintf>
			I2C_LCD_write_string_XY(1, 0, sbuf);
     950:	a8 01       	movw	r20, r16
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	70 e0       	ldi	r23, 0x00	; 0
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	fc dd       	rcall	.-1032   	; 0x554 <I2C_LCD_write_string_XY>
			
		
			if(total_time == fast_sec_count)
     95c:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <total_time>
     960:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <total_time+0x1>
     964:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <total_time+0x2>
     968:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <total_time+0x3>
     96c:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <fast_sec_count>
     970:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <fast_sec_count+0x1>
     974:	a0 91 52 02 	lds	r26, 0x0252	; 0x800252 <fast_sec_count+0x2>
     978:	b0 91 53 02 	lds	r27, 0x0253	; 0x800253 <fast_sec_count+0x3>
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	f8 94       	cli
     980:	de bf       	out	0x3e, r29	; 62
     982:	0f be       	out	0x3f, r0	; 63
     984:	cd bf       	out	0x3d, r28	; 61
     986:	48 17       	cp	r20, r24
     988:	59 07       	cpc	r21, r25
     98a:	6a 07       	cpc	r22, r26
     98c:	7b 07       	cpc	r23, r27
			{
			
				I2C_LCD_write_string_XY(0, 0, "                ");
     98e:	b1 f4       	brne	.+44     	; 0x9bc <FAST_time+0x1c6>
     990:	4e e1       	ldi	r20, 0x1E	; 30
     992:	51 e0       	ldi	r21, 0x01	; 1
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	90 e0       	ldi	r25, 0x00	; 0
				I2C_LCD_write_string_XY(0, 0, "      end       ");
     99c:	db dd       	rcall	.-1098   	; 0x554 <I2C_LCD_write_string_XY>
     99e:	46 e5       	ldi	r20, 0x56	; 86
     9a0:	51 e0       	ldi	r21, 0x01	; 1
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	80 e0       	ldi	r24, 0x00	; 0
				I2C_LCD_write_string_XY(1, 0, "                ");
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	d4 dd       	rcall	.-1112   	; 0x554 <I2C_LCD_write_string_XY>
     9ac:	4e e1       	ldi	r20, 0x1E	; 30
     9ae:	51 e0       	ldi	r21, 0x01	; 1
     9b0:	60 e0       	ldi	r22, 0x00	; 0
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	90 e0       	ldi	r25, 0x00	; 0
				power_done();
     9b8:	cd dd       	rcall	.-1126   	; 0x554 <I2C_LCD_write_string_XY>
     9ba:	18 df       	rcall	.-464    	; 0x7ec <power_done>
		   total_time =(wash*10)+(RIN*10)+(dry*10);
		   set_time =total_time;
	   }
		fs_ms_count=0;
		
		 for(fast_sec_count = 0; fast_sec_count < total_time;)
     9bc:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <fast_sec_count>
     9c0:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <fast_sec_count+0x1>
     9c4:	a0 91 52 02 	lds	r26, 0x0252	; 0x800252 <fast_sec_count+0x2>
     9c8:	b0 91 53 02 	lds	r27, 0x0253	; 0x800253 <fast_sec_count+0x3>
     9cc:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <total_time>
     9d0:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <total_time+0x1>
     9d4:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <total_time+0x2>
     9d8:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <total_time+0x3>
     9dc:	84 17       	cp	r24, r20
     9de:	95 07       	cpc	r25, r21
     9e0:	a6 07       	cpc	r26, r22
     9e2:	b7 07       	cpc	r27, r23
     9e4:	08 f4       	brcc	.+2      	; 0x9e8 <FAST_time+0x1f2>
     9e6:	3e cf       	rjmp	.-388    	; 0x864 <FAST_time+0x6e>
				power_done();
			
			}
		
		 }
}
     9e8:	a8 96       	adiw	r28, 0x28	; 40
     9ea:	0f b6       	in	r0, 0x3f	; 63
     9ec:	f8 94       	cli
     9ee:	de bf       	out	0x3e, r29	; 62
     9f0:	0f be       	out	0x3f, r0	; 63
     9f2:	cd bf       	out	0x3d, r28	; 61
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	1f 91       	pop	r17
     9fa:	0f 91       	pop	r16
     9fc:	08 95       	ret

000009fe <common_time>:

void common_time()
{
     9fe:	0f 93       	push	r16
     a00:	1f 93       	push	r17
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	cd b7       	in	r28, 0x3d	; 61
     a08:	de b7       	in	r29, 0x3e	; 62
     a0a:	a8 97       	sbiw	r28, 0x28	; 40
     a0c:	0f b6       	in	r0, 0x3f	; 63
     a0e:	f8 94       	cli
     a10:	de bf       	out	0x3e, r29	; 62
     a12:	0f be       	out	0x3f, r0	; 63
     a14:	cd bf       	out	0x3d, r28	; 61
	char sbuf[40];
	if(before_finishing==0 && check_running==0)// can not setting during 세탁, 일시정지
	{
		wash=1;
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <wash+0x1>
     a1e:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <wash>
		RIN =2;
     a22:	82 e0       	ldi	r24, 0x02	; 2
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <RIN+0x1>
     a2a:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <RIN>
		dry =2;
     a2e:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <dry+0x1>
     a32:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <dry>
		total_time =(wash*10)+(RIN*10)+(dry*10);
     a36:	82 e3       	ldi	r24, 0x32	; 50
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	a0 e0       	ldi	r26, 0x00	; 0
     a3c:	b0 e0       	ldi	r27, 0x00	; 0
     a3e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <total_time>
     a42:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <total_time+0x1>
     a46:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <total_time+0x2>
     a4a:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <total_time+0x3>
		set_time =total_time;
     a4e:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <set_time+0x1>
     a52:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <set_time>
	}
	common_ms_count =0;
     a56:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <common_ms_count+0x1>
     a5a:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <common_ms_count>
	 for(common_sec_count = 0; common_sec_count < total_time;)
     a5e:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <common_sec_count>
     a62:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <common_sec_count+0x1>
     a66:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <common_sec_count+0x2>
     a6a:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <common_sec_count+0x3>
     a6e:	ac c0       	rjmp	.+344    	; 0xbc8 <common_time+0x1ca>
	 {
		 
		 if (common_ms_count >= 1000)   // 1000ms ==> 1sec
     a70:	20 91 44 02 	lds	r18, 0x0244	; 0x800244 <common_ms_count>
     a74:	30 91 45 02 	lds	r19, 0x0245	; 0x800245 <common_ms_count+0x1>
     a78:	28 3e       	cpi	r18, 0xE8	; 232
     a7a:	33 40       	sbci	r19, 0x03	; 3
     a7c:	f4 f0       	brlt	.+60     	; 0xaba <common_time+0xbc>
		 {
			 common_ms_count=0;
     a7e:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <common_ms_count+0x1>
     a82:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <common_ms_count>
			 common_sec_count++;
     a86:	01 96       	adiw	r24, 0x01	; 1
     a88:	a1 1d       	adc	r26, r1
     a8a:	b1 1d       	adc	r27, r1
     a8c:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <common_sec_count>
     a90:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <common_sec_count+0x1>
     a94:	a0 93 4e 02 	sts	0x024E, r26	; 0x80024e <common_sec_count+0x2>
     a98:	b0 93 4f 02 	sts	0x024F, r27	; 0x80024f <common_sec_count+0x3>
			 I2C_LCD_write_string_XY(0, 0, "                ");
     a9c:	4e e1       	ldi	r20, 0x1E	; 30
     a9e:	51 e0       	ldi	r21, 0x01	; 1
     aa0:	60 e0       	ldi	r22, 0x00	; 0
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	55 dd       	rcall	.-1366   	; 0x554 <I2C_LCD_write_string_XY>
			 I2C_LCD_write_string_XY(1, 0, "                ");
     aaa:	4e e1       	ldi	r20, 0x1E	; 30
     aac:	51 e0       	ldi	r21, 0x01	; 1
     aae:	60 e0       	ldi	r22, 0x00	; 0
     ab0:	70 e0       	ldi	r23, 0x00	; 0
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	90 e0       	ldi	r25, 0x00	; 0
			 power_common();
     ab6:	4e dd       	rcall	.-1380   	; 0x554 <I2C_LCD_write_string_XY>
     ab8:	64 de       	rcall	.-824    	; 0x782 <power_common>
			 
		 }
		I2C_LCD_write_string_XY(0, 0, "                  ");
     aba:	4c e1       	ldi	r20, 0x1C	; 28
     abc:	51 e0       	ldi	r21, 0x01	; 1
     abe:	60 e0       	ldi	r22, 0x00	; 0
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	46 dd       	rcall	.-1396   	; 0x554 <I2C_LCD_write_string_XY>
		sprintf(sbuf, "[common]time:%d",total_time-common_sec_count);
     ac8:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <total_time>
     acc:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <total_time+0x1>
     ad0:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <total_time+0x2>
     ad4:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <total_time+0x3>
     ad8:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <common_sec_count>
     adc:	50 91 4d 02 	lds	r21, 0x024D	; 0x80024d <common_sec_count+0x1>
     ae0:	60 91 4e 02 	lds	r22, 0x024E	; 0x80024e <common_sec_count+0x2>
     ae4:	70 91 4f 02 	lds	r23, 0x024F	; 0x80024f <common_sec_count+0x3>
     ae8:	84 1b       	sub	r24, r20
     aea:	95 0b       	sbc	r25, r21
     aec:	a6 0b       	sbc	r26, r22
     aee:	b7 0b       	sbc	r27, r23
     af0:	bf 93       	push	r27
     af2:	af 93       	push	r26
     af4:	9f 93       	push	r25
     af6:	8f 93       	push	r24
     af8:	87 e6       	ldi	r24, 0x67	; 103
     afa:	91 e0       	ldi	r25, 0x01	; 1
     afc:	9f 93       	push	r25
     afe:	8f 93       	push	r24
     b00:	8e 01       	movw	r16, r28
     b02:	0f 5f       	subi	r16, 0xFF	; 255
     b04:	1f 4f       	sbci	r17, 0xFF	; 255
     b06:	1f 93       	push	r17
     b08:	0f 93       	push	r16
     b0a:	0e 94 77 0e 	call	0x1cee	; 0x1cee <sprintf>
		I2C_LCD_write_string_XY(0, 0, sbuf);
     b0e:	a8 01       	movw	r20, r16
     b10:	60 e0       	ldi	r22, 0x00	; 0
     b12:	70 e0       	ldi	r23, 0x00	; 0
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	1d dd       	rcall	.-1478   	; 0x554 <I2C_LCD_write_string_XY>
		I2C_LCD_write_string_XY(1, 0, "                  ");
     b1a:	4c e1       	ldi	r20, 0x1C	; 28
     b1c:	51 e0       	ldi	r21, 0x01	; 1
     b1e:	60 e0       	ldi	r22, 0x00	; 0
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	16 dd       	rcall	.-1492   	; 0x554 <I2C_LCD_write_string_XY>
		sprintf(sbuf, "w: %d,R : %d D : %d ",wash,RIN,dry);
     b28:	80 91 5d 02 	lds	r24, 0x025D	; 0x80025d <dry+0x1>
     b2c:	8f 93       	push	r24
     b2e:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <dry>
     b32:	8f 93       	push	r24
     b34:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <RIN+0x1>
     b38:	8f 93       	push	r24
     b3a:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <RIN>
     b3e:	8f 93       	push	r24
     b40:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <wash+0x1>
     b44:	8f 93       	push	r24
     b46:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <wash>
     b4a:	8f 93       	push	r24
     b4c:	81 e4       	ldi	r24, 0x41	; 65
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	9f 93       	push	r25
     b52:	8f 93       	push	r24
     b54:	1f 93       	push	r17
     b56:	0f 93       	push	r16
     b58:	0e 94 77 0e 	call	0x1cee	; 0x1cee <sprintf>
		I2C_LCD_write_string_XY(1, 0, sbuf);
     b5c:	a8 01       	movw	r20, r16
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	81 e0       	ldi	r24, 0x01	; 1
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	f6 dc       	rcall	.-1556   	; 0x554 <I2C_LCD_write_string_XY>
		
		if(total_time == common_sec_count)
     b68:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <total_time>
     b6c:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <total_time+0x1>
     b70:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <total_time+0x2>
     b74:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <total_time+0x3>
     b78:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <common_sec_count>
     b7c:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <common_sec_count+0x1>
     b80:	a0 91 4e 02 	lds	r26, 0x024E	; 0x80024e <common_sec_count+0x2>
     b84:	b0 91 4f 02 	lds	r27, 0x024F	; 0x80024f <common_sec_count+0x3>
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	f8 94       	cli
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	cd bf       	out	0x3d, r28	; 61
     b92:	48 17       	cp	r20, r24
     b94:	59 07       	cpc	r21, r25
     b96:	6a 07       	cpc	r22, r26
     b98:	7b 07       	cpc	r23, r27
		{
			
			I2C_LCD_write_string_XY(0, 0, "                ");
     b9a:	b1 f4       	brne	.+44     	; 0xbc8 <common_time+0x1ca>
     b9c:	4e e1       	ldi	r20, 0x1E	; 30
     b9e:	51 e0       	ldi	r21, 0x01	; 1
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	90 e0       	ldi	r25, 0x00	; 0
			I2C_LCD_write_string_XY(0, 0, "      end       ");
     ba8:	d5 dc       	rcall	.-1622   	; 0x554 <I2C_LCD_write_string_XY>
     baa:	46 e5       	ldi	r20, 0x56	; 86
     bac:	51 e0       	ldi	r21, 0x01	; 1
     bae:	60 e0       	ldi	r22, 0x00	; 0
     bb0:	70 e0       	ldi	r23, 0x00	; 0
     bb2:	80 e0       	ldi	r24, 0x00	; 0
			I2C_LCD_write_string_XY(1, 0, "                ");
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	ce dc       	rcall	.-1636   	; 0x554 <I2C_LCD_write_string_XY>
     bb8:	4e e1       	ldi	r20, 0x1E	; 30
     bba:	51 e0       	ldi	r21, 0x01	; 1
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	90 e0       	ldi	r25, 0x00	; 0
			power_done();
     bc4:	c7 dc       	rcall	.-1650   	; 0x554 <I2C_LCD_write_string_XY>
     bc6:	12 de       	rcall	.-988    	; 0x7ec <power_done>
		dry =2;
		total_time =(wash*10)+(RIN*10)+(dry*10);
		set_time =total_time;
	}
	common_ms_count =0;
	 for(common_sec_count = 0; common_sec_count < total_time;)
     bc8:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <common_sec_count>
     bcc:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <common_sec_count+0x1>
     bd0:	a0 91 4e 02 	lds	r26, 0x024E	; 0x80024e <common_sec_count+0x2>
     bd4:	b0 91 4f 02 	lds	r27, 0x024F	; 0x80024f <common_sec_count+0x3>
     bd8:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <total_time>
     bdc:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <total_time+0x1>
     be0:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <total_time+0x2>
     be4:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <total_time+0x3>
     be8:	84 17       	cp	r24, r20
     bea:	95 07       	cpc	r25, r21
     bec:	a6 07       	cpc	r26, r22
     bee:	b7 07       	cpc	r27, r23
     bf0:	08 f4       	brcc	.+2      	; 0xbf4 <common_time+0x1f6>
     bf2:	3e cf       	rjmp	.-388    	; 0xa70 <common_time+0x72>
			power_done();
			
			
		}
	 }
}
     bf4:	a8 96       	adiw	r28, 0x28	; 40
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	de bf       	out	0x3e, r29	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	cd bf       	out	0x3d, r28	; 61
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	1f 91       	pop	r17
     c06:	0f 91       	pop	r16
     c08:	08 95       	ret

00000c0a <power_MANUAL>:
	}
	OCR3C=160;
}

void power_MANUAL()
{
     c0a:	cf 92       	push	r12
     c0c:	df 92       	push	r13
     c0e:	ef 92       	push	r14
     c10:	ff 92       	push	r15
     c12:	0f 93       	push	r16
     c14:	1f 93       	push	r17
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	cd b7       	in	r28, 0x3d	; 61
     c1c:	de b7       	in	r29, 0x3e	; 62
     c1e:	a8 97       	sbiw	r28, 0x28	; 40
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	f8 94       	cli
     c24:	de bf       	out	0x3e, r29	; 62
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	cd bf       	out	0x3d, r28	; 61
	int sum;
	sum = wash_count + rinse_count + dry_count;
     c2a:	00 91 3a 02 	lds	r16, 0x023A	; 0x80023a <wash_count>
     c2e:	10 91 3b 02 	lds	r17, 0x023B	; 0x80023b <wash_count+0x1>
     c32:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <rinse_count>
     c36:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <rinse_count+0x1>
     c3a:	08 0f       	add	r16, r24
     c3c:	19 1f       	adc	r17, r25
     c3e:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <dry_count>
     c42:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <dry_count+0x1>
     c46:	0e 0f       	add	r16, r30
     c48:	1f 1f       	adc	r17, r31
	int laundry = wash_count * 5 + rinse_count * 5 + dry_count * 5;
     c4a:	68 01       	movw	r12, r16
     c4c:	cc 0c       	add	r12, r12
     c4e:	dd 1c       	adc	r13, r13
     c50:	cc 0c       	add	r12, r12
     c52:	dd 1c       	adc	r13, r13
     c54:	c0 0e       	add	r12, r16
     c56:	d1 1e       	adc	r13, r17
	char sbuf[40];
	MANUAL_sec_count = 0;
     c58:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <MANUAL_sec_count>
     c5c:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <MANUAL_sec_count+0x1>
     c60:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <MANUAL_sec_count+0x2>
     c64:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <MANUAL_sec_count+0x3>
	for(MANUAL_sec_count = 0; MANUAL_sec_count <laundry;)
     c68:	0d 2c       	mov	r0, r13
     c6a:	00 0c       	add	r0, r0
     c6c:	ee 08       	sbc	r14, r14
     c6e:	ff 08       	sbc	r15, r15
     c70:	c1 14       	cp	r12, r1
     c72:	d1 04       	cpc	r13, r1
     c74:	e1 04       	cpc	r14, r1
     c76:	f1 04       	cpc	r15, r1
     c78:	09 f4       	brne	.+2      	; 0xc7c <power_MANUAL+0x72>
     c7a:	69 c5       	rjmp	.+2770   	; 0x174e <__stack+0x64f>
	{
		
		if (MANUAL_ms_count >= 1000)   // 1000ms ==> 1sec
     c7c:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <MANUAL_ms_count>
     c80:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <MANUAL_ms_count+0x1>
     c84:	88 3e       	cpi	r24, 0xE8	; 232
     c86:	93 40       	sbci	r25, 0x03	; 3
     c88:	f4 f0       	brlt	.+60     	; 0xcc6 <power_MANUAL+0xbc>
		{
			
			MANUAL_ms_count=0;
     c8a:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <MANUAL_ms_count+0x1>
     c8e:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <MANUAL_ms_count>
			MANUAL_sec_count++;
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	a0 e0       	ldi	r26, 0x00	; 0
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <MANUAL_sec_count>
     c9e:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <MANUAL_sec_count+0x1>
     ca2:	a0 93 4a 02 	sts	0x024A, r26	; 0x80024a <MANUAL_sec_count+0x2>
     ca6:	b0 93 4b 02 	sts	0x024B, r27	; 0x80024b <MANUAL_sec_count+0x3>
			
			I2C_LCD_write_string_XY(0, 0, "                ");
     caa:	4e e1       	ldi	r20, 0x1E	; 30
     cac:	51 e0       	ldi	r21, 0x01	; 1
     cae:	60 e0       	ldi	r22, 0x00	; 0
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	4e dc       	rcall	.-1892   	; 0x554 <I2C_LCD_write_string_XY>
			I2C_LCD_write_string_XY(1, 0, "                ");
     cb8:	4e e1       	ldi	r20, 0x1E	; 30
     cba:	51 e0       	ldi	r21, 0x01	; 1
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	47 dc       	rcall	.-1906   	; 0x554 <I2C_LCD_write_string_XY>

		}
	
		switch (sum)
     cc6:	0b 30       	cpi	r16, 0x0B	; 11
     cc8:	11 05       	cpc	r17, r1
     cca:	08 f0       	brcs	.+2      	; 0xcce <power_MANUAL+0xc4>
     ccc:	40 c5       	rjmp	.+2688   	; 0x174e <__stack+0x64f>
     cce:	f8 01       	movw	r30, r16
     cd0:	ea 5b       	subi	r30, 0xBA	; 186
     cd2:	ff 4f       	sbci	r31, 0xFF	; 255
     cd4:	e0 c7       	rjmp	.+4032   	; 0x1c96 <__tablejump2__>
		{
			case 0:
			for(;laundry > MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
     cd6:	4e e1       	ldi	r20, 0x1E	; 30
     cd8:	51 e0       	ldi	r21, 0x01	; 1
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	38 dc       	rcall	.-1936   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, " ==mode start==  ");
     ce4:	82 e1       	ldi	r24, 0x12	; 18
     ce6:	e7 e7       	ldi	r30, 0x77	; 119
     ce8:	f1 e0       	ldi	r31, 0x01	; 1
     cea:	8e 01       	movw	r16, r28
     cec:	0f 5f       	subi	r16, 0xFF	; 255
     cee:	1f 4f       	sbci	r17, 0xFF	; 255
     cf0:	d8 01       	movw	r26, r16
     cf2:	01 90       	ld	r0, Z+
     cf4:	0d 92       	st	X+, r0
     cf6:	8a 95       	dec	r24
     cf8:	e1 f7       	brne	.-8      	; 0xcf2 <power_MANUAL+0xe8>
				I2C_LCD_write_string_XY(0,0,sbuf);
     cfa:	a8 01       	movw	r20, r16
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	27 dc       	rcall	.-1970   	; 0x554 <I2C_LCD_write_string_XY>
				 I2C_LCD_write_string_XY(1, 0, "                ");
     d06:	4e e1       	ldi	r20, 0x1E	; 30
     d08:	51 e0       	ldi	r21, 0x01	; 1
     d0a:	60 e0       	ldi	r22, 0x00	; 0
     d0c:	70 e0       	ldi	r23, 0x00	; 0
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	20 dc       	rcall	.-1984   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
     d14:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     d18:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     d1c:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     d20:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     d24:	a7 01       	movw	r20, r14
     d26:	96 01       	movw	r18, r12
     d28:	28 1b       	sub	r18, r24
     d2a:	39 0b       	sbc	r19, r25
     d2c:	4a 0b       	sbc	r20, r26
     d2e:	5b 0b       	sbc	r21, r27
     d30:	da 01       	movw	r26, r20
     d32:	c9 01       	movw	r24, r18
     d34:	bf 93       	push	r27
     d36:	af 93       	push	r26
     d38:	9f 93       	push	r25
     d3a:	2f 93       	push	r18
     d3c:	89 e8       	ldi	r24, 0x89	; 137
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	9f 93       	push	r25
     d42:	8f 93       	push	r24
     d44:	1f 93       	push	r17
     d46:	0f 93       	push	r16
     d48:	d2 d7       	rcall	.+4004   	; 0x1cee <sprintf>
				I2C_LCD_write_string_XY(1,0,sbuf);
     d4a:	a8 01       	movw	r20, r16
     d4c:	60 e0       	ldi	r22, 0x00	; 0
     d4e:	70 e0       	ldi	r23, 0x00	; 0
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	90 e0       	ldi	r25, 0x00	; 0
				 power_MANUAL_mode();
     d54:	ff db       	rcall	.-2050   	; 0x554 <I2C_LCD_write_string_XY>
     d56:	22 dd       	rcall	.-1468   	; 0x79c <power_MANUAL_mode>
				if(laundry == MANUAL_sec_count)
     d58:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     d5c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     d60:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     d64:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	f8 94       	cli
     d6c:	de bf       	out	0x3e, r29	; 62
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	cd bf       	out	0x3d, r28	; 61
     d72:	c8 16       	cp	r12, r24
     d74:	d9 06       	cpc	r13, r25
     d76:	ea 06       	cpc	r14, r26
     d78:	fb 06       	cpc	r15, r27
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
     d7a:	b1 f4       	brne	.+44     	; 0xda8 <power_MANUAL+0x19e>
     d7c:	4e e1       	ldi	r20, 0x1E	; 30
     d7e:	51 e0       	ldi	r21, 0x01	; 1
     d80:	60 e0       	ldi	r22, 0x00	; 0
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	90 e0       	ldi	r25, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
     d88:	e5 db       	rcall	.-2102   	; 0x554 <I2C_LCD_write_string_XY>
     d8a:	46 e5       	ldi	r20, 0x56	; 86
     d8c:	51 e0       	ldi	r21, 0x01	; 1
     d8e:	60 e0       	ldi	r22, 0x00	; 0
     d90:	70 e0       	ldi	r23, 0x00	; 0
     d92:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	de db       	rcall	.-2116   	; 0x554 <I2C_LCD_write_string_XY>
     d98:	4e e1       	ldi	r20, 0x1E	; 30
     d9a:	51 e0       	ldi	r21, 0x01	; 1
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	81 e0       	ldi	r24, 0x01	; 1
     da2:	90 e0       	ldi	r25, 0x00	; 0
					power_done();
     da4:	d7 db       	rcall	.-2130   	; 0x554 <I2C_LCD_write_string_XY>
     da6:	22 dd       	rcall	.-1468   	; 0x7ec <power_done>
		}
	
		switch (sum)
		{
			case 0:
			for(;laundry > MANUAL_sec_count;)
     da8:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     dac:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     db0:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     db4:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     db8:	8c 15       	cp	r24, r12
     dba:	9d 05       	cpc	r25, r13
     dbc:	ae 05       	cpc	r26, r14
     dbe:	bf 05       	cpc	r27, r15
     dc0:	08 f4       	brcc	.+2      	; 0xdc4 <power_MANUAL+0x1ba>
     dc2:	89 cf       	rjmp	.-238    	; 0xcd6 <power_MANUAL+0xcc>
			break;
			
			case 1:
			for(;laundry > MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
     dc4:	c4 c4       	rjmp	.+2440   	; 0x174e <__stack+0x64f>
     dc6:	4e e1       	ldi	r20, 0x1E	; 30
     dc8:	51 e0       	ldi	r21, 0x01	; 1
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	c0 db       	rcall	.-2176   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, " ==mode start==  ");
     dd4:	82 e1       	ldi	r24, 0x12	; 18
     dd6:	e7 e7       	ldi	r30, 0x77	; 119
     dd8:	f1 e0       	ldi	r31, 0x01	; 1
     dda:	8e 01       	movw	r16, r28
     ddc:	0f 5f       	subi	r16, 0xFF	; 255
     dde:	1f 4f       	sbci	r17, 0xFF	; 255
     de0:	d8 01       	movw	r26, r16
     de2:	01 90       	ld	r0, Z+
     de4:	0d 92       	st	X+, r0
     de6:	8a 95       	dec	r24
				I2C_LCD_write_string_XY(0,0,sbuf);
     de8:	e1 f7       	brne	.-8      	; 0xde2 <power_MANUAL+0x1d8>
     dea:	a8 01       	movw	r20, r16
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	90 e0       	ldi	r25, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
     df4:	af db       	rcall	.-2210   	; 0x554 <I2C_LCD_write_string_XY>
     df6:	4e e1       	ldi	r20, 0x1E	; 30
     df8:	51 e0       	ldi	r21, 0x01	; 1
     dfa:	60 e0       	ldi	r22, 0x00	; 0
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	a8 db       	rcall	.-2224   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, "time = %d", laundry -  MANUAL_sec_count);
     e04:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     e08:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     e0c:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     e10:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     e14:	a7 01       	movw	r20, r14
     e16:	96 01       	movw	r18, r12
     e18:	28 1b       	sub	r18, r24
     e1a:	39 0b       	sbc	r19, r25
     e1c:	4a 0b       	sbc	r20, r26
     e1e:	5b 0b       	sbc	r21, r27
     e20:	da 01       	movw	r26, r20
     e22:	c9 01       	movw	r24, r18
     e24:	bf 93       	push	r27
     e26:	af 93       	push	r26
     e28:	9f 93       	push	r25
     e2a:	2f 93       	push	r18
     e2c:	82 e9       	ldi	r24, 0x92	; 146
     e2e:	91 e0       	ldi	r25, 0x01	; 1
     e30:	9f 93       	push	r25
     e32:	8f 93       	push	r24
     e34:	1f 93       	push	r17
				I2C_LCD_write_string_XY(1,0,sbuf);
     e36:	0f 93       	push	r16
     e38:	5a d7       	rcall	.+3764   	; 0x1cee <sprintf>
     e3a:	a8 01       	movw	r20, r16
     e3c:	60 e0       	ldi	r22, 0x00	; 0
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	90 e0       	ldi	r25, 0x00	; 0
				 power_MANUAL_mode();
     e44:	87 db       	rcall	.-2290   	; 0x554 <I2C_LCD_write_string_XY>
     e46:	aa dc       	rcall	.-1708   	; 0x79c <power_MANUAL_mode>
				if(laundry == MANUAL_sec_count)
     e48:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     e4c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     e50:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     e54:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	de bf       	out	0x3e, r29	; 62
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	cd bf       	out	0x3d, r28	; 61
     e62:	c8 16       	cp	r12, r24
     e64:	d9 06       	cpc	r13, r25
     e66:	ea 06       	cpc	r14, r26
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
     e68:	fb 06       	cpc	r15, r27
     e6a:	b1 f4       	brne	.+44     	; 0xe98 <power_MANUAL+0x28e>
     e6c:	4e e1       	ldi	r20, 0x1E	; 30
     e6e:	51 e0       	ldi	r21, 0x01	; 1
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	70 e0       	ldi	r23, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
     e74:	80 e0       	ldi	r24, 0x00	; 0
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	6d db       	rcall	.-2342   	; 0x554 <I2C_LCD_write_string_XY>
     e7a:	46 e5       	ldi	r20, 0x56	; 86
     e7c:	51 e0       	ldi	r21, 0x01	; 1
     e7e:	60 e0       	ldi	r22, 0x00	; 0
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	66 db       	rcall	.-2356   	; 0x554 <I2C_LCD_write_string_XY>
     e88:	4e e1       	ldi	r20, 0x1E	; 30
     e8a:	51 e0       	ldi	r21, 0x01	; 1
     e8c:	60 e0       	ldi	r22, 0x00	; 0
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
					power_done();
     e94:	5f db       	rcall	.-2370   	; 0x554 <I2C_LCD_write_string_XY>
     e96:	aa dc       	rcall	.-1708   	; 0x7ec <power_done>
			
			}
			break;
			
			case 1:
			for(;laundry > MANUAL_sec_count;)
     e98:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     e9c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     ea0:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     ea4:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     ea8:	8c 15       	cp	r24, r12
     eaa:	9d 05       	cpc	r25, r13
     eac:	ae 05       	cpc	r26, r14
     eae:	bf 05       	cpc	r27, r15
     eb0:	08 f4       	brcc	.+2      	; 0xeb4 <power_MANUAL+0x2aa>
     eb2:	89 cf       	rjmp	.-238    	; 0xdc6 <power_MANUAL+0x1bc>
			break;
		
			case 2:
			for(;laundry >  MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
     eb4:	4c c4       	rjmp	.+2200   	; 0x174e <__stack+0x64f>
     eb6:	4e e1       	ldi	r20, 0x1E	; 30
     eb8:	51 e0       	ldi	r21, 0x01	; 1
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, " ==mode start==  ");
     ec2:	48 db       	rcall	.-2416   	; 0x554 <I2C_LCD_write_string_XY>
     ec4:	82 e1       	ldi	r24, 0x12	; 18
     ec6:	e7 e7       	ldi	r30, 0x77	; 119
     ec8:	f1 e0       	ldi	r31, 0x01	; 1
     eca:	8e 01       	movw	r16, r28
     ecc:	0f 5f       	subi	r16, 0xFF	; 255
     ece:	1f 4f       	sbci	r17, 0xFF	; 255
     ed0:	d8 01       	movw	r26, r16
     ed2:	01 90       	ld	r0, Z+
     ed4:	0d 92       	st	X+, r0
				I2C_LCD_write_string_XY(0,0,sbuf);
     ed6:	8a 95       	dec	r24
     ed8:	e1 f7       	brne	.-8      	; 0xed2 <power_MANUAL+0x2c8>
     eda:	a8 01       	movw	r20, r16
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
     ee4:	37 db       	rcall	.-2450   	; 0x554 <I2C_LCD_write_string_XY>
     ee6:	4e e1       	ldi	r20, 0x1E	; 30
     ee8:	51 e0       	ldi	r21, 0x01	; 1
     eea:	60 e0       	ldi	r22, 0x00	; 0
     eec:	70 e0       	ldi	r23, 0x00	; 0
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	30 db       	rcall	.-2464   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
     ef4:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     ef8:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     efc:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     f00:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     f04:	a7 01       	movw	r20, r14
     f06:	96 01       	movw	r18, r12
     f08:	28 1b       	sub	r18, r24
     f0a:	39 0b       	sbc	r19, r25
     f0c:	4a 0b       	sbc	r20, r26
     f0e:	5b 0b       	sbc	r21, r27
     f10:	da 01       	movw	r26, r20
     f12:	c9 01       	movw	r24, r18
     f14:	bf 93       	push	r27
     f16:	af 93       	push	r26
     f18:	9f 93       	push	r25
     f1a:	2f 93       	push	r18
     f1c:	89 e8       	ldi	r24, 0x89	; 137
     f1e:	91 e0       	ldi	r25, 0x01	; 1
     f20:	9f 93       	push	r25
     f22:	8f 93       	push	r24
     f24:	1f 93       	push	r17
				I2C_LCD_write_string_XY(1,0,sbuf);
     f26:	0f 93       	push	r16
     f28:	e2 d6       	rcall	.+3524   	; 0x1cee <sprintf>
     f2a:	a8 01       	movw	r20, r16
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	81 e0       	ldi	r24, 0x01	; 1
				 power_MANUAL_mode();
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	0f db       	rcall	.-2530   	; 0x554 <I2C_LCD_write_string_XY>
				if(laundry == MANUAL_sec_count)
     f36:	32 dc       	rcall	.-1948   	; 0x79c <power_MANUAL_mode>
     f38:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     f3c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     f40:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     f44:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	f8 94       	cli
     f4c:	de bf       	out	0x3e, r29	; 62
     f4e:	0f be       	out	0x3f, r0	; 63
     f50:	cd bf       	out	0x3d, r28	; 61
     f52:	c8 16       	cp	r12, r24
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
     f54:	d9 06       	cpc	r13, r25
     f56:	ea 06       	cpc	r14, r26
     f58:	fb 06       	cpc	r15, r27
     f5a:	b1 f4       	brne	.+44     	; 0xf88 <power_MANUAL+0x37e>
     f5c:	4e e1       	ldi	r20, 0x1E	; 30
     f5e:	51 e0       	ldi	r21, 0x01	; 1
     f60:	60 e0       	ldi	r22, 0x00	; 0
     f62:	70 e0       	ldi	r23, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	f5 da       	rcall	.-2582   	; 0x554 <I2C_LCD_write_string_XY>
     f6a:	46 e5       	ldi	r20, 0x56	; 86
     f6c:	51 e0       	ldi	r21, 0x01	; 1
     f6e:	60 e0       	ldi	r22, 0x00	; 0
     f70:	70 e0       	ldi	r23, 0x00	; 0
     f72:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	ee da       	rcall	.-2596   	; 0x554 <I2C_LCD_write_string_XY>
     f78:	4e e1       	ldi	r20, 0x1E	; 30
     f7a:	51 e0       	ldi	r21, 0x01	; 1
     f7c:	60 e0       	ldi	r22, 0x00	; 0
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	81 e0       	ldi	r24, 0x01	; 1
					power_done();
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	e7 da       	rcall	.-2610   	; 0x554 <I2C_LCD_write_string_XY>
			

			break;
		
			case 2:
			for(;laundry >  MANUAL_sec_count;)
     f86:	32 dc       	rcall	.-1948   	; 0x7ec <power_done>
     f88:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     f8c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     f90:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     f94:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     f98:	8c 15       	cp	r24, r12
     f9a:	9d 05       	cpc	r25, r13
     f9c:	ae 05       	cpc	r26, r14
     f9e:	bf 05       	cpc	r27, r15
     fa0:	08 f4       	brcc	.+2      	; 0xfa4 <power_MANUAL+0x39a>
			break;
		
			case 3:
			for(;laundry >  MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
     fa2:	89 cf       	rjmp	.-238    	; 0xeb6 <power_MANUAL+0x2ac>
     fa4:	d4 c3       	rjmp	.+1960   	; 0x174e <__stack+0x64f>
     fa6:	4e e1       	ldi	r20, 0x1E	; 30
     fa8:	51 e0       	ldi	r21, 0x01	; 1
     faa:	60 e0       	ldi	r22, 0x00	; 0
     fac:	70 e0       	ldi	r23, 0x00	; 0
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, " ==mode start==  ");
     fb2:	d0 da       	rcall	.-2656   	; 0x554 <I2C_LCD_write_string_XY>
     fb4:	82 e1       	ldi	r24, 0x12	; 18
     fb6:	e7 e7       	ldi	r30, 0x77	; 119
     fb8:	f1 e0       	ldi	r31, 0x01	; 1
     fba:	8e 01       	movw	r16, r28
     fbc:	0f 5f       	subi	r16, 0xFF	; 255
     fbe:	1f 4f       	sbci	r17, 0xFF	; 255
     fc0:	d8 01       	movw	r26, r16
     fc2:	01 90       	ld	r0, Z+
     fc4:	0d 92       	st	X+, r0
     fc6:	8a 95       	dec	r24
				I2C_LCD_write_string_XY(0,0,sbuf);
     fc8:	e1 f7       	brne	.-8      	; 0xfc2 <power_MANUAL+0x3b8>
     fca:	a8 01       	movw	r20, r16
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	80 e0       	ldi	r24, 0x00	; 0
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	bf da       	rcall	.-2690   	; 0x554 <I2C_LCD_write_string_XY>
				 I2C_LCD_write_string_XY(1, 0, "                ");
     fd6:	4e e1       	ldi	r20, 0x1E	; 30
     fd8:	51 e0       	ldi	r21, 0x01	; 1
     fda:	60 e0       	ldi	r22, 0x00	; 0
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
     fe2:	b8 da       	rcall	.-2704   	; 0x554 <I2C_LCD_write_string_XY>
     fe4:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
     fe8:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
     fec:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
     ff0:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
     ff4:	a7 01       	movw	r20, r14
     ff6:	96 01       	movw	r18, r12
     ff8:	28 1b       	sub	r18, r24
     ffa:	39 0b       	sbc	r19, r25
     ffc:	4a 0b       	sbc	r20, r26
     ffe:	5b 0b       	sbc	r21, r27
    1000:	da 01       	movw	r26, r20
    1002:	c9 01       	movw	r24, r18
    1004:	bf 93       	push	r27
    1006:	af 93       	push	r26
    1008:	9f 93       	push	r25
    100a:	2f 93       	push	r18
    100c:	89 e8       	ldi	r24, 0x89	; 137
    100e:	91 e0       	ldi	r25, 0x01	; 1
    1010:	9f 93       	push	r25
    1012:	8f 93       	push	r24
    1014:	1f 93       	push	r17
    1016:	0f 93       	push	r16
				I2C_LCD_write_string_XY(1,0,sbuf);
    1018:	6a d6       	rcall	.+3284   	; 0x1cee <sprintf>
    101a:	a8 01       	movw	r20, r16
    101c:	60 e0       	ldi	r22, 0x00	; 0
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
				 power_MANUAL_mode();
    1024:	97 da       	rcall	.-2770   	; 0x554 <I2C_LCD_write_string_XY>
    1026:	ba db       	rcall	.-2188   	; 0x79c <power_MANUAL_mode>
				if(laundry == MANUAL_sec_count)
    1028:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    102c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    1030:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1034:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1038:	0f b6       	in	r0, 0x3f	; 63
    103a:	f8 94       	cli
    103c:	de bf       	out	0x3e, r29	; 62
    103e:	0f be       	out	0x3f, r0	; 63
    1040:	cd bf       	out	0x3d, r28	; 61
    1042:	c8 16       	cp	r12, r24
    1044:	d9 06       	cpc	r13, r25
    1046:	ea 06       	cpc	r14, r26
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1048:	fb 06       	cpc	r15, r27
    104a:	b1 f4       	brne	.+44     	; 0x1078 <__DATA_REGION_LENGTH__+0x78>
    104c:	4e e1       	ldi	r20, 0x1E	; 30
    104e:	51 e0       	ldi	r21, 0x01	; 1
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	7d da       	rcall	.-2822   	; 0x554 <I2C_LCD_write_string_XY>
    105a:	46 e5       	ldi	r20, 0x56	; 86
    105c:	51 e0       	ldi	r21, 0x01	; 1
    105e:	60 e0       	ldi	r22, 0x00	; 0
    1060:	70 e0       	ldi	r23, 0x00	; 0
    1062:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	76 da       	rcall	.-2836   	; 0x554 <I2C_LCD_write_string_XY>
    1068:	4e e1       	ldi	r20, 0x1E	; 30
    106a:	51 e0       	ldi	r21, 0x01	; 1
    106c:	60 e0       	ldi	r22, 0x00	; 0
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	90 e0       	ldi	r25, 0x00	; 0
					power_done();
    1074:	6f da       	rcall	.-2850   	; 0x554 <I2C_LCD_write_string_XY>
    1076:	ba db       	rcall	.-2188   	; 0x7ec <power_done>
			}
			
			break;
		
			case 3:
			for(;laundry >  MANUAL_sec_count;)
    1078:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    107c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    1080:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1084:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1088:	8c 15       	cp	r24, r12
    108a:	9d 05       	cpc	r25, r13
    108c:	ae 05       	cpc	r26, r14
    108e:	bf 05       	cpc	r27, r15
					I2C_LCD_write_string_XY(1, 0, "                ");
					power_done();
				}
			
			}
			if(laundry == MANUAL_sec_count)
    1090:	08 f4       	brcc	.+2      	; 0x1094 <__DATA_REGION_LENGTH__+0x94>
    1092:	89 cf       	rjmp	.-238    	; 0xfa6 <power_MANUAL+0x39c>
    1094:	c8 16       	cp	r12, r24
    1096:	d9 06       	cpc	r13, r25
    1098:	ea 06       	cpc	r14, r26
    109a:	fb 06       	cpc	r15, r27
			{
				power_done();
    109c:	09 f0       	breq	.+2      	; 0x10a0 <__DATA_REGION_LENGTH__+0xa0>
    109e:	57 c3       	rjmp	.+1710   	; 0x174e <__stack+0x64f>
    10a0:	a5 db       	rcall	.-2230   	; 0x7ec <power_done>
			break;
		
			case 4:
			for(;laundry >  MANUAL_sec_count;)
			{
				I2C_LCD_write_string_XY(0, 0, "                ");
    10a2:	55 c3       	rjmp	.+1706   	; 0x174e <__stack+0x64f>
    10a4:	4e e1       	ldi	r20, 0x1E	; 30
    10a6:	51 e0       	ldi	r21, 0x01	; 1
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	51 da       	rcall	.-2910   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, " ==mode start==  ");
    10b2:	82 e1       	ldi	r24, 0x12	; 18
    10b4:	e7 e7       	ldi	r30, 0x77	; 119
    10b6:	f1 e0       	ldi	r31, 0x01	; 1
    10b8:	8e 01       	movw	r16, r28
    10ba:	0f 5f       	subi	r16, 0xFF	; 255
    10bc:	1f 4f       	sbci	r17, 0xFF	; 255
    10be:	d8 01       	movw	r26, r16
    10c0:	01 90       	ld	r0, Z+
    10c2:	0d 92       	st	X+, r0
    10c4:	8a 95       	dec	r24
				I2C_LCD_write_string_XY(0,0,sbuf);
    10c6:	e1 f7       	brne	.-8      	; 0x10c0 <__DATA_REGION_LENGTH__+0xc0>
    10c8:	a8 01       	movw	r20, r16
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	80 e0       	ldi	r24, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	40 da       	rcall	.-2944   	; 0x554 <I2C_LCD_write_string_XY>
    10d4:	4e e1       	ldi	r20, 0x1E	; 30
    10d6:	51 e0       	ldi	r21, 0x01	; 1
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    10e0:	39 da       	rcall	.-2958   	; 0x554 <I2C_LCD_write_string_XY>
    10e2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    10e6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    10ea:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    10ee:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    10f2:	a7 01       	movw	r20, r14
    10f4:	96 01       	movw	r18, r12
    10f6:	28 1b       	sub	r18, r24
    10f8:	39 0b       	sbc	r19, r25
    10fa:	4a 0b       	sbc	r20, r26
    10fc:	5b 0b       	sbc	r21, r27
    10fe:	da 01       	movw	r26, r20
    1100:	c9 01       	movw	r24, r18
    1102:	bf 93       	push	r27
    1104:	af 93       	push	r26
    1106:	9f 93       	push	r25
    1108:	2f 93       	push	r18
    110a:	89 e8       	ldi	r24, 0x89	; 137
    110c:	91 e0       	ldi	r25, 0x01	; 1
    110e:	9f 93       	push	r25
    1110:	8f 93       	push	r24
    1112:	1f 93       	push	r17
				I2C_LCD_write_string_XY(1,0,sbuf);
    1114:	0f 93       	push	r16
    1116:	eb d5       	rcall	.+3030   	; 0x1cee <sprintf>
    1118:	a8 01       	movw	r20, r16
    111a:	60 e0       	ldi	r22, 0x00	; 0
    111c:	70 e0       	ldi	r23, 0x00	; 0
    111e:	81 e0       	ldi	r24, 0x01	; 1
				 power_MANUAL_mode();
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	18 da       	rcall	.-3024   	; 0x554 <I2C_LCD_write_string_XY>
				if(laundry == MANUAL_sec_count)
    1124:	3b db       	rcall	.-2442   	; 0x79c <power_MANUAL_mode>
    1126:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    112a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    112e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1132:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1136:	0f b6       	in	r0, 0x3f	; 63
    1138:	f8 94       	cli
    113a:	de bf       	out	0x3e, r29	; 62
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	cd bf       	out	0x3d, r28	; 61
    1140:	c8 16       	cp	r12, r24
    1142:	d9 06       	cpc	r13, r25
    1144:	ea 06       	cpc	r14, r26
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1146:	fb 06       	cpc	r15, r27
    1148:	b1 f4       	brne	.+44     	; 0x1176 <__stack+0x77>
    114a:	4e e1       	ldi	r20, 0x1E	; 30
    114c:	51 e0       	ldi	r21, 0x01	; 1
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	90 e0       	ldi	r25, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1156:	fe d9       	rcall	.-3076   	; 0x554 <I2C_LCD_write_string_XY>
    1158:	46 e5       	ldi	r20, 0x56	; 86
    115a:	51 e0       	ldi	r21, 0x01	; 1
    115c:	60 e0       	ldi	r22, 0x00	; 0
    115e:	70 e0       	ldi	r23, 0x00	; 0
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1164:	f7 d9       	rcall	.-3090   	; 0x554 <I2C_LCD_write_string_XY>
    1166:	4e e1       	ldi	r20, 0x1E	; 30
    1168:	51 e0       	ldi	r21, 0x01	; 1
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	90 e0       	ldi	r25, 0x00	; 0
					power_done();
    1172:	f0 d9       	rcall	.-3104   	; 0x554 <I2C_LCD_write_string_XY>
    1174:	3b db       	rcall	.-2442   	; 0x7ec <power_done>
				power_done();
			}
			break;
		
			case 4:
			for(;laundry >  MANUAL_sec_count;)
    1176:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    117a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    117e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1182:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1186:	8c 15       	cp	r24, r12
    1188:	9d 05       	cpc	r25, r13
    118a:	ae 05       	cpc	r26, r14
    118c:	bf 05       	cpc	r27, r15
    118e:	08 f4       	brcc	.+2      	; 0x1192 <__stack+0x93>
    1190:	89 cf       	rjmp	.-238    	; 0x10a4 <__DATA_REGION_LENGTH__+0xa4>
    1192:	dd c2       	rjmp	.+1466   	; 0x174e <__stack+0x64f>
			
			break;
		
			case 5:
			for(;laundry >  MANUAL_sec_count;)
			{    I2C_LCD_write_string_XY(0, 0, "                ");
    1194:	4e e1       	ldi	r20, 0x1E	; 30
    1196:	51 e0       	ldi	r21, 0x01	; 1
    1198:	60 e0       	ldi	r22, 0x00	; 0
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	d9 d9       	rcall	.-3150   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, " ==mode start==  ");
    11a2:	82 e1       	ldi	r24, 0x12	; 18
    11a4:	e7 e7       	ldi	r30, 0x77	; 119
    11a6:	f1 e0       	ldi	r31, 0x01	; 1
    11a8:	8e 01       	movw	r16, r28
    11aa:	0f 5f       	subi	r16, 0xFF	; 255
    11ac:	1f 4f       	sbci	r17, 0xFF	; 255
    11ae:	d8 01       	movw	r26, r16
    11b0:	01 90       	ld	r0, Z+
    11b2:	0d 92       	st	X+, r0
				I2C_LCD_write_string_XY(0,0,sbuf);
    11b4:	8a 95       	dec	r24
    11b6:	e1 f7       	brne	.-8      	; 0x11b0 <__stack+0xb1>
    11b8:	a8 01       	movw	r20, r16
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	70 e0       	ldi	r23, 0x00	; 0
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	90 e0       	ldi	r25, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
    11c2:	c8 d9       	rcall	.-3184   	; 0x554 <I2C_LCD_write_string_XY>
    11c4:	4e e1       	ldi	r20, 0x1E	; 30
    11c6:	51 e0       	ldi	r21, 0x01	; 1
    11c8:	60 e0       	ldi	r22, 0x00	; 0
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	c1 d9       	rcall	.-3198   	; 0x554 <I2C_LCD_write_string_XY>
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    11d2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    11d6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    11da:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    11de:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    11e2:	a7 01       	movw	r20, r14
    11e4:	96 01       	movw	r18, r12
    11e6:	28 1b       	sub	r18, r24
    11e8:	39 0b       	sbc	r19, r25
    11ea:	4a 0b       	sbc	r20, r26
    11ec:	5b 0b       	sbc	r21, r27
    11ee:	da 01       	movw	r26, r20
    11f0:	c9 01       	movw	r24, r18
    11f2:	bf 93       	push	r27
    11f4:	af 93       	push	r26
    11f6:	9f 93       	push	r25
    11f8:	2f 93       	push	r18
    11fa:	89 e8       	ldi	r24, 0x89	; 137
    11fc:	91 e0       	ldi	r25, 0x01	; 1
    11fe:	9f 93       	push	r25
    1200:	8f 93       	push	r24
				I2C_LCD_write_string_XY(1,0,sbuf);
    1202:	1f 93       	push	r17
    1204:	0f 93       	push	r16
    1206:	73 d5       	rcall	.+2790   	; 0x1cee <sprintf>
    1208:	a8 01       	movw	r20, r16
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	70 e0       	ldi	r23, 0x00	; 0
    120e:	81 e0       	ldi	r24, 0x01	; 1
				power_common();
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	a0 d9       	rcall	.-3264   	; 0x554 <I2C_LCD_write_string_XY>
				if(laundry == MANUAL_sec_count)
    1214:	b6 da       	rcall	.-2708   	; 0x782 <power_common>
    1216:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    121a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    121e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1222:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1226:	0f b6       	in	r0, 0x3f	; 63
    1228:	f8 94       	cli
    122a:	de bf       	out	0x3e, r29	; 62
    122c:	0f be       	out	0x3f, r0	; 63
    122e:	cd bf       	out	0x3d, r28	; 61
    1230:	c8 16       	cp	r12, r24
    1232:	d9 06       	cpc	r13, r25
    1234:	ea 06       	cpc	r14, r26
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1236:	fb 06       	cpc	r15, r27
    1238:	b1 f4       	brne	.+44     	; 0x1266 <__stack+0x167>
    123a:	4e e1       	ldi	r20, 0x1E	; 30
    123c:	51 e0       	ldi	r21, 0x01	; 1
    123e:	60 e0       	ldi	r22, 0x00	; 0
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	86 d9       	rcall	.-3316   	; 0x554 <I2C_LCD_write_string_XY>
    1248:	46 e5       	ldi	r20, 0x56	; 86
    124a:	51 e0       	ldi	r21, 0x01	; 1
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	7f d9       	rcall	.-3330   	; 0x554 <I2C_LCD_write_string_XY>
    1256:	4e e1       	ldi	r20, 0x1E	; 30
    1258:	51 e0       	ldi	r21, 0x01	; 1
    125a:	60 e0       	ldi	r22, 0x00	; 0
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	81 e0       	ldi	r24, 0x01	; 1
    1260:	90 e0       	ldi	r25, 0x00	; 0
					power_done();
    1262:	78 d9       	rcall	.-3344   	; 0x554 <I2C_LCD_write_string_XY>
    1264:	c3 da       	rcall	.-2682   	; 0x7ec <power_done>
			}
			
			break;
		
			case 5:
			for(;laundry >  MANUAL_sec_count;)
    1266:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    126a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    126e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1272:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1276:	8c 15       	cp	r24, r12
    1278:	9d 05       	cpc	r25, r13
    127a:	ae 05       	cpc	r26, r14
    127c:	bf 05       	cpc	r27, r15
    127e:	08 f4       	brcc	.+2      	; 0x1282 <__stack+0x183>
    1280:	89 cf       	rjmp	.-238    	; 0x1194 <__stack+0x95>
			
			break;
			case 6:
			for(;laundry > MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
    1282:	65 c2       	rjmp	.+1226   	; 0x174e <__stack+0x64f>
    1284:	4e e1       	ldi	r20, 0x1E	; 30
    1286:	51 e0       	ldi	r21, 0x01	; 1
    1288:	60 e0       	ldi	r22, 0x00	; 0
    128a:	70 e0       	ldi	r23, 0x00	; 0
    128c:	80 e0       	ldi	r24, 0x00	; 0
				sprintf(sbuf, " ==mode start==  ");
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	61 d9       	rcall	.-3390   	; 0x554 <I2C_LCD_write_string_XY>
    1292:	82 e1       	ldi	r24, 0x12	; 18
    1294:	e7 e7       	ldi	r30, 0x77	; 119
    1296:	f1 e0       	ldi	r31, 0x01	; 1
    1298:	8e 01       	movw	r16, r28
    129a:	0f 5f       	subi	r16, 0xFF	; 255
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	d8 01       	movw	r26, r16
    12a0:	01 90       	ld	r0, Z+
    12a2:	0d 92       	st	X+, r0
				I2C_LCD_write_string_XY(0,0,sbuf);
    12a4:	8a 95       	dec	r24
    12a6:	e1 f7       	brne	.-8      	; 0x12a0 <__stack+0x1a1>
    12a8:	a8 01       	movw	r20, r16
    12aa:	60 e0       	ldi	r22, 0x00	; 0
    12ac:	70 e0       	ldi	r23, 0x00	; 0
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	90 e0       	ldi	r25, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
    12b2:	50 d9       	rcall	.-3424   	; 0x554 <I2C_LCD_write_string_XY>
    12b4:	4e e1       	ldi	r20, 0x1E	; 30
    12b6:	51 e0       	ldi	r21, 0x01	; 1
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    12c0:	49 d9       	rcall	.-3438   	; 0x554 <I2C_LCD_write_string_XY>
    12c2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    12c6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    12ca:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    12ce:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    12d2:	a7 01       	movw	r20, r14
    12d4:	96 01       	movw	r18, r12
    12d6:	28 1b       	sub	r18, r24
    12d8:	39 0b       	sbc	r19, r25
    12da:	4a 0b       	sbc	r20, r26
    12dc:	5b 0b       	sbc	r21, r27
    12de:	da 01       	movw	r26, r20
    12e0:	c9 01       	movw	r24, r18
    12e2:	bf 93       	push	r27
    12e4:	af 93       	push	r26
    12e6:	9f 93       	push	r25
    12e8:	2f 93       	push	r18
    12ea:	89 e8       	ldi	r24, 0x89	; 137
    12ec:	91 e0       	ldi	r25, 0x01	; 1
    12ee:	9f 93       	push	r25
    12f0:	8f 93       	push	r24
				I2C_LCD_write_string_XY(1,0,sbuf);
    12f2:	1f 93       	push	r17
    12f4:	0f 93       	push	r16
    12f6:	fb d4       	rcall	.+2550   	; 0x1cee <sprintf>
    12f8:	a8 01       	movw	r20, r16
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	70 e0       	ldi	r23, 0x00	; 0
				power_common();
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	90 e0       	ldi	r25, 0x00	; 0
				if(laundry == MANUAL_sec_count)
    1302:	28 d9       	rcall	.-3504   	; 0x554 <I2C_LCD_write_string_XY>
    1304:	3e da       	rcall	.-2948   	; 0x782 <power_common>
    1306:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    130a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    130e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1312:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	f8 94       	cli
    131a:	de bf       	out	0x3e, r29	; 62
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	cd bf       	out	0x3d, r28	; 61
    1320:	c8 16       	cp	r12, r24
    1322:	d9 06       	cpc	r13, r25
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1324:	ea 06       	cpc	r14, r26
    1326:	fb 06       	cpc	r15, r27
    1328:	b1 f4       	brne	.+44     	; 0x1356 <__stack+0x257>
    132a:	4e e1       	ldi	r20, 0x1E	; 30
    132c:	51 e0       	ldi	r21, 0x01	; 1
    132e:	60 e0       	ldi	r22, 0x00	; 0
    1330:	70 e0       	ldi	r23, 0x00	; 0
    1332:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	0e d9       	rcall	.-3556   	; 0x554 <I2C_LCD_write_string_XY>
    1338:	46 e5       	ldi	r20, 0x56	; 86
    133a:	51 e0       	ldi	r21, 0x01	; 1
    133c:	60 e0       	ldi	r22, 0x00	; 0
    133e:	70 e0       	ldi	r23, 0x00	; 0
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	90 e0       	ldi	r25, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1344:	07 d9       	rcall	.-3570   	; 0x554 <I2C_LCD_write_string_XY>
    1346:	4e e1       	ldi	r20, 0x1E	; 30
    1348:	51 e0       	ldi	r21, 0x01	; 1
    134a:	60 e0       	ldi	r22, 0x00	; 0
    134c:	70 e0       	ldi	r23, 0x00	; 0
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	00 d9       	rcall	.-3584   	; 0x554 <I2C_LCD_write_string_XY>
					power_done();
    1354:	4b da       	rcall	.-2922   	; 0x7ec <power_done>
    1356:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
			
			}
			
			break;
			case 6:
			for(;laundry > MANUAL_sec_count;)
    135a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    135e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1362:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1366:	8c 15       	cp	r24, r12
    1368:	9d 05       	cpc	r25, r13
    136a:	ae 05       	cpc	r26, r14
    136c:	bf 05       	cpc	r27, r15
    136e:	08 f4       	brcc	.+2      	; 0x1372 <__stack+0x273>
			
			break;
			case 7:
			for(;laundry >  MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
    1370:	89 cf       	rjmp	.-238    	; 0x1284 <__stack+0x185>
    1372:	ed c1       	rjmp	.+986    	; 0x174e <__stack+0x64f>
    1374:	4e e1       	ldi	r20, 0x1E	; 30
    1376:	51 e0       	ldi	r21, 0x01	; 1
    1378:	60 e0       	ldi	r22, 0x00	; 0
    137a:	70 e0       	ldi	r23, 0x00	; 0
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, " ==mode start==  ");
    1380:	e9 d8       	rcall	.-3630   	; 0x554 <I2C_LCD_write_string_XY>
    1382:	82 e1       	ldi	r24, 0x12	; 18
    1384:	e7 e7       	ldi	r30, 0x77	; 119
    1386:	f1 e0       	ldi	r31, 0x01	; 1
    1388:	8e 01       	movw	r16, r28
    138a:	0f 5f       	subi	r16, 0xFF	; 255
    138c:	1f 4f       	sbci	r17, 0xFF	; 255
    138e:	d8 01       	movw	r26, r16
    1390:	01 90       	ld	r0, Z+
    1392:	0d 92       	st	X+, r0
				I2C_LCD_write_string_XY(0,0,sbuf);
    1394:	8a 95       	dec	r24
    1396:	e1 f7       	brne	.-8      	; 0x1390 <__stack+0x291>
    1398:	a8 01       	movw	r20, r16
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	70 e0       	ldi	r23, 0x00	; 0
    139e:	80 e0       	ldi	r24, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	d8 d8       	rcall	.-3664   	; 0x554 <I2C_LCD_write_string_XY>
    13a4:	4e e1       	ldi	r20, 0x1E	; 30
    13a6:	51 e0       	ldi	r21, 0x01	; 1
    13a8:	60 e0       	ldi	r22, 0x00	; 0
    13aa:	70 e0       	ldi	r23, 0x00	; 0
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	d1 d8       	rcall	.-3678   	; 0x554 <I2C_LCD_write_string_XY>
    13b2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    13b6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    13ba:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    13be:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    13c2:	a7 01       	movw	r20, r14
    13c4:	96 01       	movw	r18, r12
    13c6:	28 1b       	sub	r18, r24
    13c8:	39 0b       	sbc	r19, r25
    13ca:	4a 0b       	sbc	r20, r26
    13cc:	5b 0b       	sbc	r21, r27
    13ce:	da 01       	movw	r26, r20
    13d0:	c9 01       	movw	r24, r18
    13d2:	bf 93       	push	r27
    13d4:	af 93       	push	r26
    13d6:	9f 93       	push	r25
    13d8:	2f 93       	push	r18
    13da:	89 e8       	ldi	r24, 0x89	; 137
    13dc:	91 e0       	ldi	r25, 0x01	; 1
    13de:	9f 93       	push	r25
    13e0:	8f 93       	push	r24
				I2C_LCD_write_string_XY(1,0,sbuf);
    13e2:	1f 93       	push	r17
    13e4:	0f 93       	push	r16
    13e6:	83 d4       	rcall	.+2310   	; 0x1cee <sprintf>
    13e8:	a8 01       	movw	r20, r16
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	81 e0       	ldi	r24, 0x01	; 1
				power_common();
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	b0 d8       	rcall	.-3744   	; 0x554 <I2C_LCD_write_string_XY>
				if(laundry == MANUAL_sec_count)
    13f4:	c6 d9       	rcall	.-3188   	; 0x782 <power_common>
    13f6:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    13fa:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    13fe:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1402:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
    1410:	c8 16       	cp	r12, r24
    1412:	d9 06       	cpc	r13, r25
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1414:	ea 06       	cpc	r14, r26
    1416:	fb 06       	cpc	r15, r27
    1418:	b1 f4       	brne	.+44     	; 0x1446 <__stack+0x347>
    141a:	4e e1       	ldi	r20, 0x1E	; 30
    141c:	51 e0       	ldi	r21, 0x01	; 1
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	70 e0       	ldi	r23, 0x00	; 0
    1422:	80 e0       	ldi	r24, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	96 d8       	rcall	.-3796   	; 0x554 <I2C_LCD_write_string_XY>
    1428:	46 e5       	ldi	r20, 0x56	; 86
    142a:	51 e0       	ldi	r21, 0x01	; 1
    142c:	60 e0       	ldi	r22, 0x00	; 0
    142e:	70 e0       	ldi	r23, 0x00	; 0
    1430:	80 e0       	ldi	r24, 0x00	; 0
    1432:	90 e0       	ldi	r25, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1434:	8f d8       	rcall	.-3810   	; 0x554 <I2C_LCD_write_string_XY>
    1436:	4e e1       	ldi	r20, 0x1E	; 30
    1438:	51 e0       	ldi	r21, 0x01	; 1
    143a:	60 e0       	ldi	r22, 0x00	; 0
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	81 e0       	ldi	r24, 0x01	; 1
					power_done();
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	88 d8       	rcall	.-3824   	; 0x554 <I2C_LCD_write_string_XY>
			
			}
			
			break;
			case 7:
			for(;laundry >  MANUAL_sec_count;)
    1444:	d3 d9       	rcall	.-3162   	; 0x7ec <power_done>
    1446:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    144a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    144e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1452:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1456:	8c 15       	cp	r24, r12
    1458:	9d 05       	cpc	r25, r13
    145a:	ae 05       	cpc	r26, r14
    145c:	bf 05       	cpc	r27, r15
    145e:	08 f4       	brcc	.+2      	; 0x1462 <__stack+0x363>
    1460:	89 cf       	rjmp	.-238    	; 0x1374 <__stack+0x275>
			
			break;
			case 8:
			for(;laundry >  MANUAL_sec_count;)
			{
				 I2C_LCD_write_string_XY(0, 0, "                ");
    1462:	75 c1       	rjmp	.+746    	; 0x174e <__stack+0x64f>
    1464:	4e e1       	ldi	r20, 0x1E	; 30
    1466:	51 e0       	ldi	r21, 0x01	; 1
    1468:	60 e0       	ldi	r22, 0x00	; 0
    146a:	70 e0       	ldi	r23, 0x00	; 0
    146c:	80 e0       	ldi	r24, 0x00	; 0
    146e:	90 e0       	ldi	r25, 0x00	; 0
				sprintf(sbuf, " ==mode start==  ");
    1470:	71 d8       	rcall	.-3870   	; 0x554 <I2C_LCD_write_string_XY>
    1472:	82 e1       	ldi	r24, 0x12	; 18
    1474:	e7 e7       	ldi	r30, 0x77	; 119
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	8e 01       	movw	r16, r28
    147a:	0f 5f       	subi	r16, 0xFF	; 255
    147c:	1f 4f       	sbci	r17, 0xFF	; 255
    147e:	d8 01       	movw	r26, r16
    1480:	01 90       	ld	r0, Z+
    1482:	0d 92       	st	X+, r0
				I2C_LCD_write_string_XY(0,0,sbuf);
    1484:	8a 95       	dec	r24
    1486:	e1 f7       	brne	.-8      	; 0x1480 <__stack+0x381>
    1488:	a8 01       	movw	r20, r16
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	70 e0       	ldi	r23, 0x00	; 0
				 I2C_LCD_write_string_XY(1, 0, "                ");
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	60 d8       	rcall	.-3904   	; 0x554 <I2C_LCD_write_string_XY>
    1494:	4e e1       	ldi	r20, 0x1E	; 30
    1496:	51 e0       	ldi	r21, 0x01	; 1
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	81 e0       	ldi	r24, 0x01	; 1
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	59 d8       	rcall	.-3918   	; 0x554 <I2C_LCD_write_string_XY>
    14a2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    14a6:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    14aa:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    14ae:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    14b2:	a7 01       	movw	r20, r14
    14b4:	96 01       	movw	r18, r12
    14b6:	28 1b       	sub	r18, r24
    14b8:	39 0b       	sbc	r19, r25
    14ba:	4a 0b       	sbc	r20, r26
    14bc:	5b 0b       	sbc	r21, r27
    14be:	da 01       	movw	r26, r20
    14c0:	c9 01       	movw	r24, r18
    14c2:	bf 93       	push	r27
    14c4:	af 93       	push	r26
    14c6:	9f 93       	push	r25
    14c8:	2f 93       	push	r18
    14ca:	89 e8       	ldi	r24, 0x89	; 137
    14cc:	91 e0       	ldi	r25, 0x01	; 1
    14ce:	9f 93       	push	r25
    14d0:	8f 93       	push	r24
    14d2:	1f 93       	push	r17
    14d4:	0f 93       	push	r16
				I2C_LCD_write_string_XY(1,0,sbuf);
    14d6:	0b d4       	rcall	.+2070   	; 0x1cee <sprintf>
    14d8:	a8 01       	movw	r20, r16
    14da:	60 e0       	ldi	r22, 0x00	; 0
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	38 d8       	rcall	.-3984   	; 0x554 <I2C_LCD_write_string_XY>
				power_common();
    14e4:	4e d9       	rcall	.-3428   	; 0x782 <power_common>
    14e6:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
				if(laundry == MANUAL_sec_count)
    14ea:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    14ee:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    14f2:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
    1500:	c8 16       	cp	r12, r24
    1502:	d9 06       	cpc	r13, r25
    1504:	ea 06       	cpc	r14, r26
    1506:	fb 06       	cpc	r15, r27
    1508:	b1 f4       	brne	.+44     	; 0x1536 <__stack+0x437>
    150a:	4e e1       	ldi	r20, 0x1E	; 30
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    150c:	51 e0       	ldi	r21, 0x01	; 1
    150e:	60 e0       	ldi	r22, 0x00	; 0
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	1e d8       	rcall	.-4036   	; 0x554 <I2C_LCD_write_string_XY>
    1518:	46 e5       	ldi	r20, 0x56	; 86
    151a:	51 e0       	ldi	r21, 0x01	; 1
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    151c:	60 e0       	ldi	r22, 0x00	; 0
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	80 e0       	ldi	r24, 0x00	; 0
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	17 d8       	rcall	.-4050   	; 0x554 <I2C_LCD_write_string_XY>
    1526:	4e e1       	ldi	r20, 0x1E	; 30
    1528:	51 e0       	ldi	r21, 0x01	; 1
					I2C_LCD_write_string_XY(1, 0, "                ");
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	70 e0       	ldi	r23, 0x00	; 0
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	10 d8       	rcall	.-4064   	; 0x554 <I2C_LCD_write_string_XY>
    1534:	5b d9       	rcall	.-3402   	; 0x7ec <power_done>
    1536:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
					power_done();
    153a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
			
			}
			
			break;
			case 8:
			for(;laundry >  MANUAL_sec_count;)
    153e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1542:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1546:	8c 15       	cp	r24, r12
    1548:	9d 05       	cpc	r25, r13
    154a:	ae 05       	cpc	r26, r14
    154c:	bf 05       	cpc	r27, r15
    154e:	08 f4       	brcc	.+2      	; 0x1552 <__stack+0x453>
    1550:	89 cf       	rjmp	.-238    	; 0x1464 <__stack+0x365>
    1552:	fd c0       	rjmp	.+506    	; 0x174e <__stack+0x64f>
    1554:	4e e1       	ldi	r20, 0x1E	; 30
    1556:	51 e0       	ldi	r21, 0x01	; 1
    1558:	60 e0       	ldi	r22, 0x00	; 0
			break;
			
			case 9:
			for(;laundry >  MANUAL_sec_count;)
			{
				I2C_LCD_write_string_XY(0, 0, "                ");
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1564:	82 e1       	ldi	r24, 0x12	; 18
    1566:	e7 e7       	ldi	r30, 0x77	; 119
    1568:	f1 e0       	ldi	r31, 0x01	; 1
				sprintf(sbuf, " ==mode start==  ");
    156a:	8e 01       	movw	r16, r28
    156c:	0f 5f       	subi	r16, 0xFF	; 255
    156e:	1f 4f       	sbci	r17, 0xFF	; 255
    1570:	d8 01       	movw	r26, r16
    1572:	01 90       	ld	r0, Z+
    1574:	0d 92       	st	X+, r0
    1576:	8a 95       	dec	r24
    1578:	e1 f7       	brne	.-8      	; 0x1572 <__stack+0x473>
    157a:	a8 01       	movw	r20, r16
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	70 e0       	ldi	r23, 0x00	; 0
				I2C_LCD_write_string_XY(0,0,sbuf);
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1588:	4e e1       	ldi	r20, 0x1E	; 30
    158a:	51 e0       	ldi	r21, 0x01	; 1
				I2C_LCD_write_string_XY(1, 0, "                ");
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	81 e0       	ldi	r24, 0x01	; 1
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1598:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    159c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    15a0:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    15a4:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    15a8:	a7 01       	movw	r20, r14
    15aa:	96 01       	movw	r18, r12
    15ac:	28 1b       	sub	r18, r24
    15ae:	39 0b       	sbc	r19, r25
    15b0:	4a 0b       	sbc	r20, r26
    15b2:	5b 0b       	sbc	r21, r27
    15b4:	da 01       	movw	r26, r20
    15b6:	c9 01       	movw	r24, r18
    15b8:	bf 93       	push	r27
    15ba:	af 93       	push	r26
    15bc:	9f 93       	push	r25
    15be:	2f 93       	push	r18
    15c0:	89 e8       	ldi	r24, 0x89	; 137
    15c2:	91 e0       	ldi	r25, 0x01	; 1
    15c4:	9f 93       	push	r25
    15c6:	8f 93       	push	r24
    15c8:	1f 93       	push	r17
    15ca:	0f 93       	push	r16
    15cc:	90 d3       	rcall	.+1824   	; 0x1cee <sprintf>
    15ce:	a8 01       	movw	r20, r16
    15d0:	60 e0       	ldi	r22, 0x00	; 0
    15d2:	70 e0       	ldi	r23, 0x00	; 0
				I2C_LCD_write_string_XY(1,0,sbuf);
    15d4:	81 e0       	ldi	r24, 0x01	; 1
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    15dc:	d2 d8       	rcall	.-3676   	; 0x782 <power_common>
    15de:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
				power_common();
    15e2:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
				if(laundry == MANUAL_sec_count)
    15e6:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    15ea:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    15ee:	0f b6       	in	r0, 0x3f	; 63
    15f0:	f8 94       	cli
    15f2:	de bf       	out	0x3e, r29	; 62
    15f4:	0f be       	out	0x3f, r0	; 63
    15f6:	cd bf       	out	0x3d, r28	; 61
    15f8:	c8 16       	cp	r12, r24
    15fa:	d9 06       	cpc	r13, r25
    15fc:	ea 06       	cpc	r14, r26
    15fe:	fb 06       	cpc	r15, r27
    1600:	c9 f4       	brne	.+50     	; 0x1634 <__stack+0x535>
    1602:	4e e1       	ldi	r20, 0x1E	; 30
    1604:	51 e0       	ldi	r21, 0x01	; 1
    1606:	60 e0       	ldi	r22, 0x00	; 0
    1608:	70 e0       	ldi	r23, 0x00	; 0
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1612:	46 e5       	ldi	r20, 0x56	; 86
    1614:	51 e0       	ldi	r21, 0x01	; 1
    1616:	60 e0       	ldi	r22, 0x00	; 0
    1618:	70 e0       	ldi	r23, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1622:	4e e1       	ldi	r20, 0x1E	; 30
    1624:	51 e0       	ldi	r21, 0x01	; 1
    1626:	60 e0       	ldi	r22, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1632:	dc d8       	rcall	.-3656   	; 0x7ec <power_done>
    1634:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
					power_done();
    1638:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
			
			}
			break;
			
			case 9:
			for(;laundry >  MANUAL_sec_count;)
    163c:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    1640:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1644:	8c 15       	cp	r24, r12
    1646:	9d 05       	cpc	r25, r13
    1648:	ae 05       	cpc	r26, r14
    164a:	bf 05       	cpc	r27, r15
    164c:	08 f4       	brcc	.+2      	; 0x1650 <__stack+0x551>
    164e:	82 cf       	rjmp	.-252    	; 0x1554 <__stack+0x455>
    1650:	7e c0       	rjmp	.+252    	; 0x174e <__stack+0x64f>
    1652:	4e e1       	ldi	r20, 0x1E	; 30
    1654:	51 e0       	ldi	r21, 0x01	; 1
    1656:	60 e0       	ldi	r22, 0x00	; 0
			}
			break;
			case 10:
			for(;laundry >  MANUAL_sec_count;)
			{
				I2C_LCD_write_string_XY(0, 0, "                ");
    1658:	70 e0       	ldi	r23, 0x00	; 0
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1662:	82 e1       	ldi	r24, 0x12	; 18
    1664:	e7 e7       	ldi	r30, 0x77	; 119
    1666:	f1 e0       	ldi	r31, 0x01	; 1
				sprintf(sbuf, " ==mode start==  ");
    1668:	8e 01       	movw	r16, r28
    166a:	0f 5f       	subi	r16, 0xFF	; 255
    166c:	1f 4f       	sbci	r17, 0xFF	; 255
    166e:	d8 01       	movw	r26, r16
    1670:	01 90       	ld	r0, Z+
    1672:	0d 92       	st	X+, r0
    1674:	8a 95       	dec	r24
    1676:	e1 f7       	brne	.-8      	; 0x1670 <__stack+0x571>
    1678:	a8 01       	movw	r20, r16
    167a:	60 e0       	ldi	r22, 0x00	; 0
    167c:	70 e0       	ldi	r23, 0x00	; 0
				I2C_LCD_write_string_XY(0,0,sbuf);
    167e:	80 e0       	ldi	r24, 0x00	; 0
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1686:	4e e1       	ldi	r20, 0x1E	; 30
    1688:	51 e0       	ldi	r21, 0x01	; 1
				I2C_LCD_write_string_XY(1, 0, "                ");
    168a:	60 e0       	ldi	r22, 0x00	; 0
    168c:	70 e0       	ldi	r23, 0x00	; 0
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1696:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
				sprintf(sbuf, "time =%d", laundry -  MANUAL_sec_count);
    169a:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
    169e:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    16a2:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    16a6:	a7 01       	movw	r20, r14
    16a8:	96 01       	movw	r18, r12
    16aa:	28 1b       	sub	r18, r24
    16ac:	39 0b       	sbc	r19, r25
    16ae:	4a 0b       	sbc	r20, r26
    16b0:	5b 0b       	sbc	r21, r27
    16b2:	da 01       	movw	r26, r20
    16b4:	c9 01       	movw	r24, r18
    16b6:	bf 93       	push	r27
    16b8:	af 93       	push	r26
    16ba:	9f 93       	push	r25
    16bc:	2f 93       	push	r18
    16be:	89 e8       	ldi	r24, 0x89	; 137
    16c0:	91 e0       	ldi	r25, 0x01	; 1
    16c2:	9f 93       	push	r25
    16c4:	8f 93       	push	r24
    16c6:	1f 93       	push	r17
    16c8:	0f 93       	push	r16
    16ca:	11 d3       	rcall	.+1570   	; 0x1cee <sprintf>
    16cc:	a8 01       	movw	r20, r16
    16ce:	60 e0       	ldi	r22, 0x00	; 0
    16d0:	70 e0       	ldi	r23, 0x00	; 0
				I2C_LCD_write_string_XY(1,0,sbuf);
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    16da:	53 d8       	rcall	.-3930   	; 0x782 <power_common>
    16dc:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
				power_common();
    16e0:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
				if(laundry == MANUAL_sec_count)
    16e4:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
    16e8:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    16ec:	0f b6       	in	r0, 0x3f	; 63
    16ee:	f8 94       	cli
    16f0:	de bf       	out	0x3e, r29	; 62
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	cd bf       	out	0x3d, r28	; 61
    16f6:	c8 16       	cp	r12, r24
    16f8:	d9 06       	cpc	r13, r25
    16fa:	ea 06       	cpc	r14, r26
    16fc:	fb 06       	cpc	r15, r27
    16fe:	c9 f4       	brne	.+50     	; 0x1732 <__stack+0x633>
    1700:	4e e1       	ldi	r20, 0x1E	; 30
    1702:	51 e0       	ldi	r21, 0x01	; 1
    1704:	60 e0       	ldi	r22, 0x00	; 0
    1706:	70 e0       	ldi	r23, 0x00	; 0
				{
					I2C_LCD_write_string_XY(0, 0, "                ");
    1708:	80 e0       	ldi	r24, 0x00	; 0
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1710:	46 e5       	ldi	r20, 0x56	; 86
    1712:	51 e0       	ldi	r21, 0x01	; 1
    1714:	60 e0       	ldi	r22, 0x00	; 0
    1716:	70 e0       	ldi	r23, 0x00	; 0
					I2C_LCD_write_string_XY(0, 0, "      end       ");
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1720:	4e e1       	ldi	r20, 0x1E	; 30
    1722:	51 e0       	ldi	r21, 0x01	; 1
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	70 e0       	ldi	r23, 0x00	; 0
					I2C_LCD_write_string_XY(1, 0, "                ");
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1730:	5d d8       	rcall	.-3910   	; 0x7ec <power_done>
    1732:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <MANUAL_sec_count>
    1736:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <MANUAL_sec_count+0x1>
					power_done();
    173a:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <MANUAL_sec_count+0x2>
				}
				
			}
			break;
			case 10:
			for(;laundry >  MANUAL_sec_count;)
    173e:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <MANUAL_sec_count+0x3>
    1742:	8c 15       	cp	r24, r12
    1744:	9d 05       	cpc	r25, r13
    1746:	ae 05       	cpc	r26, r14
    1748:	bf 05       	cpc	r27, r15
    174a:	08 f4       	brcc	.+2      	; 0x174e <__stack+0x64f>
    174c:	82 cf       	rjmp	.-252    	; 0x1652 <__stack+0x553>
    174e:	a8 96       	adiw	r28, 0x28	; 40
    1750:	0f b6       	in	r0, 0x3f	; 63
    1752:	f8 94       	cli
    1754:	de bf       	out	0x3e, r29	; 62
    1756:	0f be       	out	0x3f, r0	; 63
			break;
		}
		break;
	}
	
}
    1758:	cd bf       	out	0x3d, r28	; 61
    175a:	df 91       	pop	r29
    175c:	cf 91       	pop	r28
    175e:	1f 91       	pop	r17
    1760:	0f 91       	pop	r16
    1762:	ff 90       	pop	r15
    1764:	ef 90       	pop	r14
    1766:	df 90       	pop	r13
    1768:	cf 90       	pop	r12
    176a:	08 95       	ret

0000176c <MANUAL_time>:
    176c:	ef 92       	push	r14
    176e:	ff 92       	push	r15
    1770:	0f 93       	push	r16
    1772:	1f 93       	push	r17
    1774:	cf 93       	push	r28
		}
	 }
}

void MANUAL_time()
{
    1776:	df 93       	push	r29
    1778:	cd b7       	in	r28, 0x3d	; 61
    177a:	de b7       	in	r29, 0x3e	; 62
    177c:	ac 97       	sbiw	r28, 0x2c	; 44
    177e:	0f b6       	in	r0, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	cd bf       	out	0x3d, r28	; 61
	char sbuf[40];
	int set_count=0;
    1788:	e1 2c       	mov	r14, r1
    178a:	f1 2c       	mov	r15, r1
	
	while(1)
	{
		
		
		if (get_button2())
    178c:	0e 94 a4 00 	call	0x148	; 0x148 <get_button2>
    1790:	89 2b       	or	r24, r25
    1792:	41 f1       	breq	.+80     	; 0x17e4 <MANUAL_time+0x78>
		{
			if (set_count==0)
    1794:	e1 14       	cp	r14, r1
    1796:	f1 04       	cpc	r15, r1
    1798:	51 f4       	brne	.+20     	; 0x17ae <MANUAL_time+0x42>
			wash_count++;
    179a:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <wash_count>
    179e:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <wash_count+0x1>
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <wash_count+0x1>
    17a8:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <wash_count>
    17ac:	1b c0       	rjmp	.+54     	; 0x17e4 <MANUAL_time+0x78>
			else if (set_count==1)
    17ae:	81 e0       	ldi	r24, 0x01	; 1
    17b0:	e8 16       	cp	r14, r24
    17b2:	f1 04       	cpc	r15, r1
    17b4:	51 f4       	brne	.+20     	; 0x17ca <MANUAL_time+0x5e>
			rinse_count++;
    17b6:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <rinse_count>
    17ba:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <rinse_count+0x1>
    17be:	01 96       	adiw	r24, 0x01	; 1
    17c0:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <rinse_count+0x1>
    17c4:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <rinse_count>
    17c8:	0d c0       	rjmp	.+26     	; 0x17e4 <MANUAL_time+0x78>
			else if (set_count==2)
    17ca:	92 e0       	ldi	r25, 0x02	; 2
    17cc:	e9 16       	cp	r14, r25
    17ce:	f1 04       	cpc	r15, r1
    17d0:	49 f4       	brne	.+18     	; 0x17e4 <MANUAL_time+0x78>
			dry_count++;
    17d2:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <dry_count>
    17d6:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <dry_count+0x1>
    17da:	01 96       	adiw	r24, 0x01	; 1
    17dc:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <dry_count+0x1>
    17e0:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <dry_count>
		}
		if (get_button3())
    17e4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <get_button3>
    17e8:	89 2b       	or	r24, r25
    17ea:	09 f4       	brne	.+2      	; 0x17ee <MANUAL_time+0x82>
    17ec:	60 c0       	rjmp	.+192    	; 0x18ae <MANUAL_time+0x142>
		{
			set_count++;
    17ee:	c7 01       	movw	r24, r14
    17f0:	01 96       	adiw	r24, 0x01	; 1
			set_count %= 3;
    17f2:	63 e0       	ldi	r22, 0x03	; 3
    17f4:	70 e0       	ldi	r23, 0x00	; 0
    17f6:	3c d2       	rcall	.+1144   	; 0x1c70 <__divmodhi4>
    17f8:	8c 01       	movw	r16, r24
    17fa:	7c 01       	movw	r14, r24

			switch(set_count)
    17fc:	01 30       	cpi	r16, 0x01	; 1
    17fe:	11 05       	cpc	r17, r1
    1800:	e9 f0       	breq	.+58     	; 0x183c <MANUAL_time+0xd0>
    1802:	02 30       	cpi	r16, 0x02	; 2
    1804:	11 05       	cpc	r17, r1
    1806:	81 f1       	breq	.+96     	; 0x1868 <MANUAL_time+0xfc>
    1808:	01 15       	cp	r16, r1
    180a:	11 05       	cpc	r17, r1
    180c:	09 f0       	breq	.+2      	; 0x1810 <MANUAL_time+0xa4>
    180e:	41 c0       	rjmp	.+130    	; 0x1892 <MANUAL_time+0x126>
			{
				case 0:
				sprintf(s, "%d", wash_count);
    1810:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <wash_count+0x1>
    1814:	8f 93       	push	r24
    1816:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <wash_count>
    181a:	8f 93       	push	r24
    181c:	89 e9       	ldi	r24, 0x99	; 153
    181e:	91 e0       	ldi	r25, 0x01	; 1
    1820:	9f 93       	push	r25
    1822:	8f 93       	push	r24
    1824:	ce 01       	movw	r24, r28
    1826:	89 96       	adiw	r24, 0x29	; 41
    1828:	9f 93       	push	r25
    182a:	8f 93       	push	r24
    182c:	60 d2       	rcall	.+1216   	; 0x1cee <sprintf>
				break;
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	0f 90       	pop	r0
    1834:	0f 90       	pop	r0
    1836:	0f 90       	pop	r0
    1838:	0f 90       	pop	r0
    183a:	2b c0       	rjmp	.+86     	; 0x1892 <MANUAL_time+0x126>
				case 1:
				sprintf(s, "%d", rinse_count);
    183c:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <rinse_count+0x1>
    1840:	8f 93       	push	r24
    1842:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <rinse_count>
    1846:	8f 93       	push	r24
    1848:	89 e9       	ldi	r24, 0x99	; 153
    184a:	91 e0       	ldi	r25, 0x01	; 1
    184c:	9f 93       	push	r25
    184e:	8f 93       	push	r24
    1850:	ce 01       	movw	r24, r28
    1852:	89 96       	adiw	r24, 0x29	; 41
    1854:	9f 93       	push	r25
    1856:	8f 93       	push	r24
    1858:	4a d2       	rcall	.+1172   	; 0x1cee <sprintf>
				break;
    185a:	0f 90       	pop	r0
    185c:	0f 90       	pop	r0
    185e:	0f 90       	pop	r0
    1860:	0f 90       	pop	r0
    1862:	0f 90       	pop	r0
    1864:	0f 90       	pop	r0
    1866:	15 c0       	rjmp	.+42     	; 0x1892 <MANUAL_time+0x126>
				case 2:
				sprintf(s, "%d", dry_count);
    1868:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <dry_count+0x1>
    186c:	8f 93       	push	r24
    186e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <dry_count>
    1872:	8f 93       	push	r24
    1874:	89 e9       	ldi	r24, 0x99	; 153
    1876:	91 e0       	ldi	r25, 0x01	; 1
    1878:	9f 93       	push	r25
    187a:	8f 93       	push	r24
    187c:	ce 01       	movw	r24, r28
    187e:	89 96       	adiw	r24, 0x29	; 41
    1880:	9f 93       	push	r25
    1882:	8f 93       	push	r24
    1884:	34 d2       	rcall	.+1128   	; 0x1cee <sprintf>
				break;
    1886:	0f 90       	pop	r0
    1888:	0f 90       	pop	r0
    188a:	0f 90       	pop	r0
    188c:	0f 90       	pop	r0
    188e:	0f 90       	pop	r0
    1890:	0f 90       	pop	r0
			}
			I2C_LCD_write_string_XY(1,(set_count+1)*3,s);
    1892:	0f 5f       	subi	r16, 0xFF	; 255
    1894:	1f 4f       	sbci	r17, 0xFF	; 255
    1896:	b8 01       	movw	r22, r16
    1898:	66 0f       	add	r22, r22
    189a:	77 1f       	adc	r23, r23
    189c:	60 0f       	add	r22, r16
    189e:	71 1f       	adc	r23, r17
    18a0:	ae 01       	movw	r20, r28
    18a2:	47 5d       	subi	r20, 0xD7	; 215
    18a4:	5f 4f       	sbci	r21, 0xFF	; 255
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
		}
		if (get_button1())
    18ae:	0e 94 75 00 	call	0xea	; 0xea <get_button1>
    18b2:	89 2b       	or	r24, r25
		{
			power_MANUAL();
    18b4:	11 f0       	breq	.+4      	; 0x18ba <MANUAL_time+0x14e>
    18b6:	a9 d9       	rcall	.-3246   	; 0xc0a <power_MANUAL>
			sprintf(sbuf, "W:%d R:%d D:%d", wash_count, rinse_count, dry_count);
			I2C_LCD_write_string_XY(1,0,sbuf);
			
		
	}
}
    18b8:	7d c0       	rjmp	.+250    	; 0x19b4 <MANUAL_time+0x248>
		if (get_button1())
		{
			power_MANUAL();
			break;
		}
			wash_time = wash_count * 5;
    18ba:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <wash_count>
    18be:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <wash_count+0x1>
    18c2:	9c 01       	movw	r18, r24
    18c4:	22 0f       	add	r18, r18
    18c6:	33 1f       	adc	r19, r19
    18c8:	22 0f       	add	r18, r18
    18ca:	33 1f       	adc	r19, r19
    18cc:	82 0f       	add	r24, r18
    18ce:	93 1f       	adc	r25, r19
    18d0:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <wash_time+0x1>
    18d4:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <wash_time>
			rinse_time = rinse_count * 5;
    18d8:	20 91 38 02 	lds	r18, 0x0238	; 0x800238 <rinse_count>
    18dc:	30 91 39 02 	lds	r19, 0x0239	; 0x800239 <rinse_count+0x1>
    18e0:	c9 01       	movw	r24, r18
    18e2:	88 0f       	add	r24, r24
    18e4:	99 1f       	adc	r25, r25
    18e6:	88 0f       	add	r24, r24
    18e8:	99 1f       	adc	r25, r25
    18ea:	28 0f       	add	r18, r24
    18ec:	39 1f       	adc	r19, r25
    18ee:	30 93 33 02 	sts	0x0233, r19	; 0x800233 <rinse_time+0x1>
    18f2:	20 93 32 02 	sts	0x0232, r18	; 0x800232 <rinse_time>
			dry_time = dry_count * 5;
    18f6:	20 91 36 02 	lds	r18, 0x0236	; 0x800236 <dry_count>
    18fa:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <dry_count+0x1>
    18fe:	c9 01       	movw	r24, r18
    1900:	88 0f       	add	r24, r24
    1902:	99 1f       	adc	r25, r25
    1904:	88 0f       	add	r24, r24
    1906:	99 1f       	adc	r25, r25
    1908:	28 0f       	add	r18, r24
    190a:	39 1f       	adc	r19, r25
    190c:	30 93 31 02 	sts	0x0231, r19	; 0x800231 <dry_time+0x1>
    1910:	20 93 30 02 	sts	0x0230, r18	; 0x800230 <dry_time>
			sec_count = 0;
    1914:	10 92 54 02 	sts	0x0254, r1	; 0x800254 <sec_count>
    1918:	10 92 55 02 	sts	0x0255, r1	; 0x800255 <sec_count+0x1>
    191c:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <sec_count+0x2>
    1920:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <sec_count+0x3>
			 I2C_LCD_write_string_XY(0, 0, "                ");
    1924:	4e e1       	ldi	r20, 0x1E	; 30
    1926:	51 e0       	ldi	r21, 0x01	; 1
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	70 e0       	ldi	r23, 0x00	; 0
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
			sprintf(sbuf, "[choose]bt count");
    1934:	81 e1       	ldi	r24, 0x11	; 17
    1936:	ec e9       	ldi	r30, 0x9C	; 156
    1938:	f1 e0       	ldi	r31, 0x01	; 1
    193a:	8e 01       	movw	r16, r28
    193c:	0f 5f       	subi	r16, 0xFF	; 255
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	d8 01       	movw	r26, r16
    1942:	01 90       	ld	r0, Z+
    1944:	0d 92       	st	X+, r0
    1946:	8a 95       	dec	r24
    1948:	e1 f7       	brne	.-8      	; 0x1942 <MANUAL_time+0x1d6>
			I2C_LCD_write_string_XY(0,0,sbuf);
    194a:	a8 01       	movw	r20, r16
    194c:	60 e0       	ldi	r22, 0x00	; 0
    194e:	70 e0       	ldi	r23, 0x00	; 0
    1950:	80 e0       	ldi	r24, 0x00	; 0
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
			 I2C_LCD_write_string_XY(1, 0, "                ");
    1958:	4e e1       	ldi	r20, 0x1E	; 30
    195a:	51 e0       	ldi	r21, 0x01	; 1
    195c:	60 e0       	ldi	r22, 0x00	; 0
    195e:	70 e0       	ldi	r23, 0x00	; 0
    1960:	81 e0       	ldi	r24, 0x01	; 1
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
			sprintf(sbuf, "W:%d R:%d D:%d", wash_count, rinse_count, dry_count);
    1968:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <dry_count+0x1>
    196c:	8f 93       	push	r24
    196e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <dry_count>
    1972:	8f 93       	push	r24
    1974:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <rinse_count+0x1>
    1978:	8f 93       	push	r24
    197a:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <rinse_count>
    197e:	8f 93       	push	r24
    1980:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <wash_count+0x1>
    1984:	8f 93       	push	r24
    1986:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <wash_count>
    198a:	8f 93       	push	r24
    198c:	8d ea       	ldi	r24, 0xAD	; 173
    198e:	91 e0       	ldi	r25, 0x01	; 1
    1990:	9f 93       	push	r25
    1992:	8f 93       	push	r24
    1994:	1f 93       	push	r17
    1996:	0f 93       	push	r16
    1998:	aa d1       	rcall	.+852    	; 0x1cee <sprintf>
			I2C_LCD_write_string_XY(1,0,sbuf);
    199a:	a8 01       	movw	r20, r16
    199c:	60 e0       	ldi	r22, 0x00	; 0
    199e:	70 e0       	ldi	r23, 0x00	; 0
    19a0:	81 e0       	ldi	r24, 0x01	; 1
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
			
		
	}
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	f8 94       	cli
    19ac:	de bf       	out	0x3e, r29	; 62
    19ae:	0f be       	out	0x3f, r0	; 63
    19b0:	cd bf       	out	0x3d, r28	; 61
    19b2:	ec ce       	rjmp	.-552    	; 0x178c <MANUAL_time+0x20>
}
    19b4:	ac 96       	adiw	r28, 0x2c	; 44
    19b6:	0f b6       	in	r0, 0x3f	; 63
    19b8:	f8 94       	cli
    19ba:	de bf       	out	0x3e, r29	; 62
    19bc:	0f be       	out	0x3f, r0	; 63
    19be:	cd bf       	out	0x3d, r28	; 61
    19c0:	df 91       	pop	r29
    19c2:	cf 91       	pop	r28
    19c4:	1f 91       	pop	r17
    19c6:	0f 91       	pop	r16
    19c8:	ff 90       	pop	r15
    19ca:	ef 90       	pop	r14
    19cc:	08 95       	ret

000019ce <main>:
		int button1_state =0;
		int button2_state =0;
		int button3_state =0;
		int fan_mode ;			// start : 1/stop : 0

		init_pwm();
    19ce:	0e 94 97 03 	call	0x72e	; 0x72e <init_pwm>
		init_led();
    19d2:	0e 94 b3 02 	call	0x566	; 0x566 <init_led>
		init_fnd();
    19d6:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <init_fnd>
		init_button();
    19da:	0e 94 71 00 	call	0xe2	; 0xe2 <init_button>
		init_uart0();		// uart0 를 초기화
    19de:	25 d1       	rcall	.+586    	; 0x1c2a <init_uart0>
		init_UART1();		// uart1 를 초기화
    19e0:	37 d1       	rcall	.+622    	; 0x1c50 <init_UART1>
    19e2:	0e 94 6f 02 	call	0x4de	; 0x4de <I2C_LCD_init>
		I2C_LCD_init();		// LCD 초기화
    19e6:	80 e0       	ldi	r24, 0x00	; 0
		stdout = &OUTPUT;	// 2. for printf fprintf(stdout,"test"); ==> printf    : printf 해주기 위한 작업
    19e8:	91 e0       	ldi	r25, 0x01	; 1
    19ea:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <__iob+0x3>
    19ee:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <__iob+0x2>
    19f2:	0e 94 8d 03 	call	0x71a	; 0x71a <init_timer0>
		init_timer0();
    19f6:	78 94       	sei
		sei();				// 전역적으로 인터럽트 허용
    19f8:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <mode_state>
	while (1)
	{
			
		
		
		if(mode_state == 0)
    19fc:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <mode_state+0x1>
    1a00:	89 2b       	or	r24, r25
    1a02:	09 f0       	breq	.+2      	; 0x1a06 <main+0x38>
    1a04:	84 c0       	rjmp	.+264    	; 0x1b0e <main+0x140>
    1a06:	4c e1       	ldi	r20, 0x1C	; 28
		{
			I2C_LCD_write_string_XY(0, 0, "                  ");
    1a08:	51 e0       	ldi	r21, 0x01	; 1
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	70 e0       	ldi	r23, 0x00	; 0
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a16:	4c eb       	ldi	r20, 0xBC	; 188
			I2C_LCD_write_string_XY(0, 0, "==  MODE SET ==  ");
    1a18:	51 e0       	ldi	r21, 0x01	; 1
    1a1a:	60 e0       	ldi	r22, 0x00	; 0
    1a1c:	70 e0       	ldi	r23, 0x00	; 0
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a26:	4c e1       	ldi	r20, 0x1C	; 28
			I2C_LCD_write_string_XY(1, 0, "                  ");
    1a28:	51 e0       	ldi	r21, 0x01	; 1
    1a2a:	60 e0       	ldi	r22, 0x00	; 0
    1a2c:	70 e0       	ldi	r23, 0x00	; 0
    1a2e:	81 e0       	ldi	r24, 0x01	; 1
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a36:	4e ec       	ldi	r20, 0xCE	; 206
			I2C_LCD_write_string_XY(1, 0, " 1.AUTO 2.MANUAL ");
    1a38:	51 e0       	ldi	r21, 0x01	; 1
    1a3a:	60 e0       	ldi	r22, 0x00	; 0
    1a3c:	70 e0       	ldi	r23, 0x00	; 0
    1a3e:	81 e0       	ldi	r24, 0x01	; 1
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a46:	0e 94 75 00 	call	0xea	; 0xea <get_button1>
			
			
			if(get_button1())  // Auto 선택
    1a4a:	89 2b       	or	r24, r25
    1a4c:	71 f1       	breq	.+92     	; 0x1aaa <main+0xdc>
    1a4e:	4c e1       	ldi	r20, 0x1C	; 28
			{
				I2C_LCD_write_string_XY(0, 0, "                  ");
    1a50:	51 e0       	ldi	r21, 0x01	; 1
    1a52:	60 e0       	ldi	r22, 0x00	; 0
    1a54:	70 e0       	ldi	r23, 0x00	; 0
    1a56:	80 e0       	ldi	r24, 0x00	; 0
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a5e:	40 ee       	ldi	r20, 0xE0	; 224
				I2C_LCD_write_string_XY(0, 0, "==  AUTO SET ==  ");
    1a60:	51 e0       	ldi	r21, 0x01	; 1
    1a62:	60 e0       	ldi	r22, 0x00	; 0
    1a64:	70 e0       	ldi	r23, 0x00	; 0
    1a66:	80 e0       	ldi	r24, 0x00	; 0
    1a68:	90 e0       	ldi	r25, 0x00	; 0
    1a6a:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a6e:	4c e1       	ldi	r20, 0x1C	; 28
				I2C_LCD_write_string_XY(1, 0, "                  ");
    1a70:	51 e0       	ldi	r21, 0x01	; 1
    1a72:	60 e0       	ldi	r22, 0x00	; 0
    1a74:	70 e0       	ldi	r23, 0x00	; 0
    1a76:	81 e0       	ldi	r24, 0x01	; 1
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a7e:	42 ef       	ldi	r20, 0xF2	; 242
				I2C_LCD_write_string_XY(1, 0, " 1.FAST 2.common ");
    1a80:	51 e0       	ldi	r21, 0x01	; 1
    1a82:	60 e0       	ldi	r22, 0x00	; 0
    1a84:	70 e0       	ldi	r23, 0x00	; 0
    1a86:	81 e0       	ldi	r24, 0x01	; 1
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1a8e:	81 e0       	ldi	r24, 0x01	; 1
				mode_state = 1;
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <mode_state+0x1>
    1a96:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <mode_state>
    1a9a:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <auto_state+0x1>
				auto_state = 1;
    1a9e:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <auto_state>
    1aa2:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <manual_state+0x1>
				manual_state = 0;
    1aa6:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <manual_state>
    1aaa:	0e 94 a4 00 	call	0x148	; 0x148 <get_button2>
 
			}
			if(get_button2())  // Manual 선택
    1aae:	89 2b       	or	r24, r25
    1ab0:	71 f1       	breq	.+92     	; 0x1b0e <main+0x140>
    1ab2:	4c e1       	ldi	r20, 0x1C	; 28
			{
				
				I2C_LCD_write_string_XY(0, 0, "                  ");
    1ab4:	51 e0       	ldi	r21, 0x01	; 1
    1ab6:	60 e0       	ldi	r22, 0x00	; 0
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1ac2:	44 e0       	ldi	r20, 0x04	; 4
				I2C_LCD_write_string_XY(0, 0, "== MANUAL SET ==  ");
    1ac4:	52 e0       	ldi	r21, 0x02	; 2
    1ac6:	60 e0       	ldi	r22, 0x00	; 0
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	80 e0       	ldi	r24, 0x00	; 0
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1ad2:	4c e1       	ldi	r20, 0x1C	; 28
				I2C_LCD_write_string_XY(1, 0, "                  ");
    1ad4:	51 e0       	ldi	r21, 0x01	; 1
    1ad6:	60 e0       	ldi	r22, 0x00	; 0
    1ad8:	70 e0       	ldi	r23, 0x00	; 0
    1ada:	81 e0       	ldi	r24, 0x01	; 1
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1ae2:	47 e1       	ldi	r20, 0x17	; 23
				I2C_LCD_write_string_XY(1, 0, " choose ==> bt2  ");
    1ae4:	52 e0       	ldi	r21, 0x02	; 2
    1ae6:	60 e0       	ldi	r22, 0x00	; 0
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	81 e0       	ldi	r24, 0x01	; 1
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 aa 02 	call	0x554	; 0x554 <I2C_LCD_write_string_XY>
    1af2:	81 e0       	ldi	r24, 0x01	; 1
				mode_state = 1;
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <mode_state+0x1>
    1afa:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <mode_state>
    1afe:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <auto_state+0x1>
				auto_state = 0;
    1b02:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <auto_state>
    1b06:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <manual_state+0x1>
				manual_state = 1;
    1b0a:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <manual_state>
    1b0e:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <mode_state>
				
			}
		}
		
		
			if(mode_state == 1 && auto_state == 1)  // Auto_state 1 일 때
    1b12:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <mode_state+0x1>
    1b16:	01 97       	sbiw	r24, 0x01	; 1
    1b18:	f1 f4       	brne	.+60     	; 0x1b56 <main+0x188>
    1b1a:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <auto_state>
    1b1e:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <auto_state+0x1>
    1b22:	01 97       	sbiw	r24, 0x01	; 1
    1b24:	c1 f4       	brne	.+48     	; 0x1b56 <main+0x188>
    1b26:	0e 94 a4 00 	call	0x148	; 0x148 <get_button2>
			{
		
					if(get_button2())
    1b2a:	89 2b       	or	r24, r25
    1b2c:	41 f0       	breq	.+16     	; 0x1b3e <main+0x170>
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
					{
						fast_indicator=1;
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <fast_indicator+0x1>
    1b36:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <fast_indicator>
    1b3a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <FAST_time>

						FAST_time();	
    1b3e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <get_button3>

					}

 

				if( get_button3())
    1b42:	89 2b       	or	r24, r25
    1b44:	41 f0       	breq	.+16     	; 0x1b56 <main+0x188>
    1b46:	81 e0       	ldi	r24, 0x01	; 1
				{
					common_indicator=1;
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <common_indicator+0x1>
    1b4e:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <common_indicator>
    1b52:	0e 94 ff 04 	call	0x9fe	; 0x9fe <common_time>
					common_time();
    1b56:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <mode_state>
				
				}
				
			}
			
			if(mode_state == 1 && manual_state == 1)  // Manual_state 1 일 때
    1b5a:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <mode_state+0x1>
    1b5e:	01 97       	sbiw	r24, 0x01	; 1
    1b60:	09 f0       	breq	.+2      	; 0x1b64 <main+0x196>
    1b62:	4a cf       	rjmp	.-364    	; 0x19f8 <main+0x2a>
    1b64:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <manual_state>
    1b68:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <manual_state+0x1>
    1b6c:	01 97       	sbiw	r24, 0x01	; 1
    1b6e:	09 f0       	breq	.+2      	; 0x1b72 <main+0x1a4>
    1b70:	43 cf       	rjmp	.-378    	; 0x19f8 <main+0x2a>
    1b72:	0e 94 a4 00 	call	0x148	; 0x148 <get_button2>
			{
			   if(get_button2())
    1b76:	89 2b       	or	r24, r25
    1b78:	09 f4       	brne	.+2      	; 0x1b7c <main+0x1ae>
    1b7a:	3e cf       	rjmp	.-388    	; 0x19f8 <main+0x2a>
			   {
				   MANUAL_time();
    1b7c:	f7 dd       	rcall	.-1042   	; 0x176c <MANUAL_time>
    1b7e:	3c cf       	rjmp	.-392    	; 0x19f8 <main+0x2a>

00001b80 <inc_time_sec>:
    1b80:	ea e6       	ldi	r30, 0x6A	; 106
}

// 1초에 1번씩 call을 한다. 분초
void inc_time_sec(void)
{
	time_clock.sec--;
    1b82:	f2 e0       	ldi	r31, 0x02	; 2
    1b84:	82 81       	ldd	r24, Z+2	; 0x02
    1b86:	81 50       	subi	r24, 0x01	; 1
    1b88:	82 83       	std	Z+2, r24	; 0x02
	if(time_clock.sec >= 60)
    1b8a:	8c 33       	cpi	r24, 0x3C	; 60
    1b8c:	70 f0       	brcs	.+28     	; 0x1baa <inc_time_sec+0x2a>
	{
		time_clock.sec = 0;
    1b8e:	12 82       	std	Z+2, r1	; 0x02
		time_clock.min++;
    1b90:	81 81       	ldd	r24, Z+1	; 0x01
    1b92:	8f 5f       	subi	r24, 0xFF	; 255
    1b94:	81 83       	std	Z+1, r24	; 0x01
		if(time_clock.min  >= 60)
    1b96:	8c 33       	cpi	r24, 0x3C	; 60
    1b98:	40 f0       	brcs	.+16     	; 0x1baa <inc_time_sec+0x2a>
		{
			time_clock.min = 0;
    1b9a:	11 82       	std	Z+1, r1	; 0x01
			time_clock.hour++;
    1b9c:	80 81       	ld	r24, Z
    1b9e:	8f 5f       	subi	r24, 0xFF	; 255
    1ba0:	80 83       	st	Z, r24
			if(time_clock.hour >= 24)
    1ba2:	88 31       	cpi	r24, 0x18	; 24
    1ba4:	10 f0       	brcs	.+4      	; 0x1baa <inc_time_sec+0x2a>
			{
				time_clock.hour=0;
    1ba6:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <time_clock>
    1baa:	08 95       	ret

00001bac <__vector_18>:
    1bac:	1f 92       	push	r1
    1bae:	0f 92       	push	r0
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	0f 92       	push	r0
    1bb4:	11 24       	eor	r1, r1
    1bb6:	0b b6       	in	r0, 0x3b	; 59
    1bb8:	0f 92       	push	r0
    1bba:	2f 93       	push	r18
    1bbc:	3f 93       	push	r19
    1bbe:	4f 93       	push	r20
    1bc0:	5f 93       	push	r21
    1bc2:	8f 93       	push	r24
    1bc4:	ef 93       	push	r30
    1bc6:	ff 93       	push	r31
    1bc8:	8c b1       	in	r24, 0x0c	; 12
    1bca:	8d 30       	cpi	r24, 0x0D	; 13
    1bcc:	11 f0       	breq	.+4      	; 0x1bd2 <__vector_18+0x26>
    1bce:	8a 30       	cpi	r24, 0x0A	; 10
    1bd0:	79 f4       	brne	.+30     	; 0x1bf0 <__vector_18+0x44>
    1bd2:	e0 91 6d 02 	lds	r30, 0x026D	; 0x80026d <i>
    1bd6:	f0 91 6e 02 	lds	r31, 0x026E	; 0x80026e <i+0x1>
    1bda:	ec 58       	subi	r30, 0x8C	; 140
    1bdc:	fd 4f       	sbci	r31, 0xFD	; 253
    1bde:	10 82       	st	Z, r1
    1be0:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <i+0x1>
    1be4:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <i>
    1be8:	81 e0       	ldi	r24, 0x01	; 1
    1bea:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <rx_ready_flag>
    1bee:	0f c0       	rjmp	.+30     	; 0x1c0e <__vector_18+0x62>
    1bf0:	20 91 6d 02 	lds	r18, 0x026D	; 0x80026d <i>
    1bf4:	30 91 6e 02 	lds	r19, 0x026E	; 0x80026e <i+0x1>
    1bf8:	a9 01       	movw	r20, r18
    1bfa:	4f 5f       	subi	r20, 0xFF	; 255
    1bfc:	5f 4f       	sbci	r21, 0xFF	; 255
    1bfe:	50 93 6e 02 	sts	0x026E, r21	; 0x80026e <i+0x1>
    1c02:	40 93 6d 02 	sts	0x026D, r20	; 0x80026d <i>
    1c06:	f9 01       	movw	r30, r18
    1c08:	ec 58       	subi	r30, 0x8C	; 140
    1c0a:	fd 4f       	sbci	r31, 0xFD	; 253
    1c0c:	80 83       	st	Z, r24
    1c0e:	ff 91       	pop	r31
    1c10:	ef 91       	pop	r30
    1c12:	8f 91       	pop	r24
    1c14:	5f 91       	pop	r21
    1c16:	4f 91       	pop	r20
    1c18:	3f 91       	pop	r19
    1c1a:	2f 91       	pop	r18
    1c1c:	0f 90       	pop	r0
    1c1e:	0b be       	out	0x3b, r0	; 59
    1c20:	0f 90       	pop	r0
    1c22:	0f be       	out	0x3f, r0	; 63
    1c24:	0f 90       	pop	r0
    1c26:	1f 90       	pop	r1
    1c28:	18 95       	reti

00001c2a <init_uart0>:
    1c2a:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    1c2e:	8f ec       	ldi	r24, 0xCF	; 207
    1c30:	89 b9       	out	0x09, r24	; 9
    1c32:	8b b1       	in	r24, 0x0b	; 11
    1c34:	82 60       	ori	r24, 0x02	; 2
    1c36:	8b b9       	out	0x0b, r24	; 11
    1c38:	e5 e9       	ldi	r30, 0x95	; 149
    1c3a:	f0 e0       	ldi	r31, 0x00	; 0
    1c3c:	80 81       	ld	r24, Z
    1c3e:	86 60       	ori	r24, 0x06	; 6
    1c40:	80 83       	st	Z, r24
    1c42:	88 e9       	ldi	r24, 0x98	; 152
    1c44:	8a b9       	out	0x0a, r24	; 10
    1c46:	08 95       	ret

00001c48 <UART0_transmit>:
    1c48:	5d 9b       	sbis	0x0b, 5	; 11
    1c4a:	fe cf       	rjmp	.-4      	; 0x1c48 <UART0_transmit>
    1c4c:	8c b9       	out	0x0c, r24	; 12
    1c4e:	08 95       	ret

00001c50 <init_UART1>:
    1c50:	ea e9       	ldi	r30, 0x9A	; 154
    1c52:	f0 e0       	ldi	r31, 0x00	; 0
    1c54:	80 81       	ld	r24, Z
    1c56:	88 69       	ori	r24, 0x98	; 152
    1c58:	80 83       	st	Z, r24
    1c5a:	eb e9       	ldi	r30, 0x9B	; 155
    1c5c:	f0 e0       	ldi	r31, 0x00	; 0
    1c5e:	80 81       	ld	r24, Z
    1c60:	82 60       	ori	r24, 0x02	; 2
    1c62:	80 83       	st	Z, r24
    1c64:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
    1c68:	8f ec       	ldi	r24, 0xCF	; 207
    1c6a:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    1c6e:	08 95       	ret

00001c70 <__divmodhi4>:
    1c70:	97 fb       	bst	r25, 7
    1c72:	07 2e       	mov	r0, r23
    1c74:	16 f4       	brtc	.+4      	; 0x1c7a <__divmodhi4+0xa>
    1c76:	00 94       	com	r0
    1c78:	06 d0       	rcall	.+12     	; 0x1c86 <__divmodhi4_neg1>
    1c7a:	77 fd       	sbrc	r23, 7
    1c7c:	08 d0       	rcall	.+16     	; 0x1c8e <__divmodhi4_neg2>
    1c7e:	23 d0       	rcall	.+70     	; 0x1cc6 <__udivmodhi4>
    1c80:	07 fc       	sbrc	r0, 7
    1c82:	05 d0       	rcall	.+10     	; 0x1c8e <__divmodhi4_neg2>
    1c84:	3e f4       	brtc	.+14     	; 0x1c94 <__divmodhi4_exit>

00001c86 <__divmodhi4_neg1>:
    1c86:	90 95       	com	r25
    1c88:	81 95       	neg	r24
    1c8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8c:	08 95       	ret

00001c8e <__divmodhi4_neg2>:
    1c8e:	70 95       	com	r23
    1c90:	61 95       	neg	r22
    1c92:	7f 4f       	sbci	r23, 0xFF	; 255

00001c94 <__divmodhi4_exit>:
    1c94:	08 95       	ret

00001c96 <__tablejump2__>:
    1c96:	ee 0f       	add	r30, r30
    1c98:	ff 1f       	adc	r31, r31
    1c9a:	00 24       	eor	r0, r0
    1c9c:	00 1c       	adc	r0, r0
    1c9e:	0b be       	out	0x3b, r0	; 59
    1ca0:	07 90       	elpm	r0, Z+
    1ca2:	f6 91       	elpm	r31, Z
    1ca4:	e0 2d       	mov	r30, r0
    1ca6:	09 94       	ijmp

00001ca8 <__umulhisi3>:
    1ca8:	a2 9f       	mul	r26, r18
    1caa:	b0 01       	movw	r22, r0
    1cac:	b3 9f       	mul	r27, r19
    1cae:	c0 01       	movw	r24, r0
    1cb0:	a3 9f       	mul	r26, r19
    1cb2:	70 0d       	add	r23, r0
    1cb4:	81 1d       	adc	r24, r1
    1cb6:	11 24       	eor	r1, r1
    1cb8:	91 1d       	adc	r25, r1
    1cba:	b2 9f       	mul	r27, r18
    1cbc:	70 0d       	add	r23, r0
    1cbe:	81 1d       	adc	r24, r1
    1cc0:	11 24       	eor	r1, r1
    1cc2:	91 1d       	adc	r25, r1
    1cc4:	08 95       	ret

00001cc6 <__udivmodhi4>:
    1cc6:	aa 1b       	sub	r26, r26
    1cc8:	bb 1b       	sub	r27, r27
    1cca:	51 e1       	ldi	r21, 0x11	; 17
    1ccc:	07 c0       	rjmp	.+14     	; 0x1cdc <__udivmodhi4_ep>

00001cce <__udivmodhi4_loop>:
    1cce:	aa 1f       	adc	r26, r26
    1cd0:	bb 1f       	adc	r27, r27
    1cd2:	a6 17       	cp	r26, r22
    1cd4:	b7 07       	cpc	r27, r23
    1cd6:	10 f0       	brcs	.+4      	; 0x1cdc <__udivmodhi4_ep>
    1cd8:	a6 1b       	sub	r26, r22
    1cda:	b7 0b       	sbc	r27, r23

00001cdc <__udivmodhi4_ep>:
    1cdc:	88 1f       	adc	r24, r24
    1cde:	99 1f       	adc	r25, r25
    1ce0:	5a 95       	dec	r21
    1ce2:	a9 f7       	brne	.-22     	; 0x1cce <__udivmodhi4_loop>
    1ce4:	80 95       	com	r24
    1ce6:	90 95       	com	r25
    1ce8:	bc 01       	movw	r22, r24
    1cea:	cd 01       	movw	r24, r26
    1cec:	08 95       	ret

00001cee <sprintf>:
    1cee:	0f 93       	push	r16
    1cf0:	1f 93       	push	r17
    1cf2:	cf 93       	push	r28
    1cf4:	df 93       	push	r29
    1cf6:	cd b7       	in	r28, 0x3d	; 61
    1cf8:	de b7       	in	r29, 0x3e	; 62
    1cfa:	2e 97       	sbiw	r28, 0x0e	; 14
    1cfc:	0f b6       	in	r0, 0x3f	; 63
    1cfe:	f8 94       	cli
    1d00:	de bf       	out	0x3e, r29	; 62
    1d02:	0f be       	out	0x3f, r0	; 63
    1d04:	cd bf       	out	0x3d, r28	; 61
    1d06:	0d 89       	ldd	r16, Y+21	; 0x15
    1d08:	1e 89       	ldd	r17, Y+22	; 0x16
    1d0a:	86 e0       	ldi	r24, 0x06	; 6
    1d0c:	8c 83       	std	Y+4, r24	; 0x04
    1d0e:	1a 83       	std	Y+2, r17	; 0x02
    1d10:	09 83       	std	Y+1, r16	; 0x01
    1d12:	8f ef       	ldi	r24, 0xFF	; 255
    1d14:	9f e7       	ldi	r25, 0x7F	; 127
    1d16:	9e 83       	std	Y+6, r25	; 0x06
    1d18:	8d 83       	std	Y+5, r24	; 0x05
    1d1a:	ae 01       	movw	r20, r28
    1d1c:	47 5e       	subi	r20, 0xE7	; 231
    1d1e:	5f 4f       	sbci	r21, 0xFF	; 255
    1d20:	6f 89       	ldd	r22, Y+23	; 0x17
    1d22:	78 8d       	ldd	r23, Y+24	; 0x18
    1d24:	ce 01       	movw	r24, r28
    1d26:	01 96       	adiw	r24, 0x01	; 1
    1d28:	10 d0       	rcall	.+32     	; 0x1d4a <vfprintf>
    1d2a:	ef 81       	ldd	r30, Y+7	; 0x07
    1d2c:	f8 85       	ldd	r31, Y+8	; 0x08
    1d2e:	e0 0f       	add	r30, r16
    1d30:	f1 1f       	adc	r31, r17
    1d32:	10 82       	st	Z, r1
    1d34:	2e 96       	adiw	r28, 0x0e	; 14
    1d36:	0f b6       	in	r0, 0x3f	; 63
    1d38:	f8 94       	cli
    1d3a:	de bf       	out	0x3e, r29	; 62
    1d3c:	0f be       	out	0x3f, r0	; 63
    1d3e:	cd bf       	out	0x3d, r28	; 61
    1d40:	df 91       	pop	r29
    1d42:	cf 91       	pop	r28
    1d44:	1f 91       	pop	r17
    1d46:	0f 91       	pop	r16
    1d48:	08 95       	ret

00001d4a <vfprintf>:
    1d4a:	2f 92       	push	r2
    1d4c:	3f 92       	push	r3
    1d4e:	4f 92       	push	r4
    1d50:	5f 92       	push	r5
    1d52:	6f 92       	push	r6
    1d54:	7f 92       	push	r7
    1d56:	8f 92       	push	r8
    1d58:	9f 92       	push	r9
    1d5a:	af 92       	push	r10
    1d5c:	bf 92       	push	r11
    1d5e:	cf 92       	push	r12
    1d60:	df 92       	push	r13
    1d62:	ef 92       	push	r14
    1d64:	ff 92       	push	r15
    1d66:	0f 93       	push	r16
    1d68:	1f 93       	push	r17
    1d6a:	cf 93       	push	r28
    1d6c:	df 93       	push	r29
    1d6e:	cd b7       	in	r28, 0x3d	; 61
    1d70:	de b7       	in	r29, 0x3e	; 62
    1d72:	2b 97       	sbiw	r28, 0x0b	; 11
    1d74:	0f b6       	in	r0, 0x3f	; 63
    1d76:	f8 94       	cli
    1d78:	de bf       	out	0x3e, r29	; 62
    1d7a:	0f be       	out	0x3f, r0	; 63
    1d7c:	cd bf       	out	0x3d, r28	; 61
    1d7e:	6c 01       	movw	r12, r24
    1d80:	7b 01       	movw	r14, r22
    1d82:	8a 01       	movw	r16, r20
    1d84:	fc 01       	movw	r30, r24
    1d86:	17 82       	std	Z+7, r1	; 0x07
    1d88:	16 82       	std	Z+6, r1	; 0x06
    1d8a:	83 81       	ldd	r24, Z+3	; 0x03
    1d8c:	81 ff       	sbrs	r24, 1
    1d8e:	bf c1       	rjmp	.+894    	; 0x210e <vfprintf+0x3c4>
    1d90:	ce 01       	movw	r24, r28
    1d92:	01 96       	adiw	r24, 0x01	; 1
    1d94:	3c 01       	movw	r6, r24
    1d96:	f6 01       	movw	r30, r12
    1d98:	93 81       	ldd	r25, Z+3	; 0x03
    1d9a:	f7 01       	movw	r30, r14
    1d9c:	93 fd       	sbrc	r25, 3
    1d9e:	85 91       	lpm	r24, Z+
    1da0:	93 ff       	sbrs	r25, 3
    1da2:	81 91       	ld	r24, Z+
    1da4:	7f 01       	movw	r14, r30
    1da6:	88 23       	and	r24, r24
    1da8:	09 f4       	brne	.+2      	; 0x1dac <vfprintf+0x62>
    1daa:	ad c1       	rjmp	.+858    	; 0x2106 <vfprintf+0x3bc>
    1dac:	85 32       	cpi	r24, 0x25	; 37
    1dae:	39 f4       	brne	.+14     	; 0x1dbe <vfprintf+0x74>
    1db0:	93 fd       	sbrc	r25, 3
    1db2:	85 91       	lpm	r24, Z+
    1db4:	93 ff       	sbrs	r25, 3
    1db6:	81 91       	ld	r24, Z+
    1db8:	7f 01       	movw	r14, r30
    1dba:	85 32       	cpi	r24, 0x25	; 37
    1dbc:	21 f4       	brne	.+8      	; 0x1dc6 <vfprintf+0x7c>
    1dbe:	b6 01       	movw	r22, r12
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	d6 d1       	rcall	.+940    	; 0x2170 <fputc>
    1dc4:	e8 cf       	rjmp	.-48     	; 0x1d96 <vfprintf+0x4c>
    1dc6:	91 2c       	mov	r9, r1
    1dc8:	21 2c       	mov	r2, r1
    1dca:	31 2c       	mov	r3, r1
    1dcc:	ff e1       	ldi	r31, 0x1F	; 31
    1dce:	f3 15       	cp	r31, r3
    1dd0:	d8 f0       	brcs	.+54     	; 0x1e08 <vfprintf+0xbe>
    1dd2:	8b 32       	cpi	r24, 0x2B	; 43
    1dd4:	79 f0       	breq	.+30     	; 0x1df4 <vfprintf+0xaa>
    1dd6:	38 f4       	brcc	.+14     	; 0x1de6 <vfprintf+0x9c>
    1dd8:	80 32       	cpi	r24, 0x20	; 32
    1dda:	79 f0       	breq	.+30     	; 0x1dfa <vfprintf+0xb0>
    1ddc:	83 32       	cpi	r24, 0x23	; 35
    1dde:	a1 f4       	brne	.+40     	; 0x1e08 <vfprintf+0xbe>
    1de0:	23 2d       	mov	r18, r3
    1de2:	20 61       	ori	r18, 0x10	; 16
    1de4:	1d c0       	rjmp	.+58     	; 0x1e20 <vfprintf+0xd6>
    1de6:	8d 32       	cpi	r24, 0x2D	; 45
    1de8:	61 f0       	breq	.+24     	; 0x1e02 <vfprintf+0xb8>
    1dea:	80 33       	cpi	r24, 0x30	; 48
    1dec:	69 f4       	brne	.+26     	; 0x1e08 <vfprintf+0xbe>
    1dee:	23 2d       	mov	r18, r3
    1df0:	21 60       	ori	r18, 0x01	; 1
    1df2:	16 c0       	rjmp	.+44     	; 0x1e20 <vfprintf+0xd6>
    1df4:	83 2d       	mov	r24, r3
    1df6:	82 60       	ori	r24, 0x02	; 2
    1df8:	38 2e       	mov	r3, r24
    1dfa:	e3 2d       	mov	r30, r3
    1dfc:	e4 60       	ori	r30, 0x04	; 4
    1dfe:	3e 2e       	mov	r3, r30
    1e00:	2a c0       	rjmp	.+84     	; 0x1e56 <vfprintf+0x10c>
    1e02:	f3 2d       	mov	r31, r3
    1e04:	f8 60       	ori	r31, 0x08	; 8
    1e06:	1d c0       	rjmp	.+58     	; 0x1e42 <vfprintf+0xf8>
    1e08:	37 fc       	sbrc	r3, 7
    1e0a:	2d c0       	rjmp	.+90     	; 0x1e66 <vfprintf+0x11c>
    1e0c:	20 ed       	ldi	r18, 0xD0	; 208
    1e0e:	28 0f       	add	r18, r24
    1e10:	2a 30       	cpi	r18, 0x0A	; 10
    1e12:	40 f0       	brcs	.+16     	; 0x1e24 <vfprintf+0xda>
    1e14:	8e 32       	cpi	r24, 0x2E	; 46
    1e16:	b9 f4       	brne	.+46     	; 0x1e46 <vfprintf+0xfc>
    1e18:	36 fc       	sbrc	r3, 6
    1e1a:	75 c1       	rjmp	.+746    	; 0x2106 <vfprintf+0x3bc>
    1e1c:	23 2d       	mov	r18, r3
    1e1e:	20 64       	ori	r18, 0x40	; 64
    1e20:	32 2e       	mov	r3, r18
    1e22:	19 c0       	rjmp	.+50     	; 0x1e56 <vfprintf+0x10c>
    1e24:	36 fe       	sbrs	r3, 6
    1e26:	06 c0       	rjmp	.+12     	; 0x1e34 <vfprintf+0xea>
    1e28:	8a e0       	ldi	r24, 0x0A	; 10
    1e2a:	98 9e       	mul	r9, r24
    1e2c:	20 0d       	add	r18, r0
    1e2e:	11 24       	eor	r1, r1
    1e30:	92 2e       	mov	r9, r18
    1e32:	11 c0       	rjmp	.+34     	; 0x1e56 <vfprintf+0x10c>
    1e34:	ea e0       	ldi	r30, 0x0A	; 10
    1e36:	2e 9e       	mul	r2, r30
    1e38:	20 0d       	add	r18, r0
    1e3a:	11 24       	eor	r1, r1
    1e3c:	22 2e       	mov	r2, r18
    1e3e:	f3 2d       	mov	r31, r3
    1e40:	f0 62       	ori	r31, 0x20	; 32
    1e42:	3f 2e       	mov	r3, r31
    1e44:	08 c0       	rjmp	.+16     	; 0x1e56 <vfprintf+0x10c>
    1e46:	8c 36       	cpi	r24, 0x6C	; 108
    1e48:	21 f4       	brne	.+8      	; 0x1e52 <vfprintf+0x108>
    1e4a:	83 2d       	mov	r24, r3
    1e4c:	80 68       	ori	r24, 0x80	; 128
    1e4e:	38 2e       	mov	r3, r24
    1e50:	02 c0       	rjmp	.+4      	; 0x1e56 <vfprintf+0x10c>
    1e52:	88 36       	cpi	r24, 0x68	; 104
    1e54:	41 f4       	brne	.+16     	; 0x1e66 <vfprintf+0x11c>
    1e56:	f7 01       	movw	r30, r14
    1e58:	93 fd       	sbrc	r25, 3
    1e5a:	85 91       	lpm	r24, Z+
    1e5c:	93 ff       	sbrs	r25, 3
    1e5e:	81 91       	ld	r24, Z+
    1e60:	7f 01       	movw	r14, r30
    1e62:	81 11       	cpse	r24, r1
    1e64:	b3 cf       	rjmp	.-154    	; 0x1dcc <vfprintf+0x82>
    1e66:	98 2f       	mov	r25, r24
    1e68:	9f 7d       	andi	r25, 0xDF	; 223
    1e6a:	95 54       	subi	r25, 0x45	; 69
    1e6c:	93 30       	cpi	r25, 0x03	; 3
    1e6e:	28 f4       	brcc	.+10     	; 0x1e7a <vfprintf+0x130>
    1e70:	0c 5f       	subi	r16, 0xFC	; 252
    1e72:	1f 4f       	sbci	r17, 0xFF	; 255
    1e74:	9f e3       	ldi	r25, 0x3F	; 63
    1e76:	99 83       	std	Y+1, r25	; 0x01
    1e78:	0d c0       	rjmp	.+26     	; 0x1e94 <vfprintf+0x14a>
    1e7a:	83 36       	cpi	r24, 0x63	; 99
    1e7c:	31 f0       	breq	.+12     	; 0x1e8a <vfprintf+0x140>
    1e7e:	83 37       	cpi	r24, 0x73	; 115
    1e80:	71 f0       	breq	.+28     	; 0x1e9e <vfprintf+0x154>
    1e82:	83 35       	cpi	r24, 0x53	; 83
    1e84:	09 f0       	breq	.+2      	; 0x1e88 <vfprintf+0x13e>
    1e86:	55 c0       	rjmp	.+170    	; 0x1f32 <vfprintf+0x1e8>
    1e88:	20 c0       	rjmp	.+64     	; 0x1eca <vfprintf+0x180>
    1e8a:	f8 01       	movw	r30, r16
    1e8c:	80 81       	ld	r24, Z
    1e8e:	89 83       	std	Y+1, r24	; 0x01
    1e90:	0e 5f       	subi	r16, 0xFE	; 254
    1e92:	1f 4f       	sbci	r17, 0xFF	; 255
    1e94:	88 24       	eor	r8, r8
    1e96:	83 94       	inc	r8
    1e98:	91 2c       	mov	r9, r1
    1e9a:	53 01       	movw	r10, r6
    1e9c:	12 c0       	rjmp	.+36     	; 0x1ec2 <vfprintf+0x178>
    1e9e:	28 01       	movw	r4, r16
    1ea0:	f2 e0       	ldi	r31, 0x02	; 2
    1ea2:	4f 0e       	add	r4, r31
    1ea4:	51 1c       	adc	r5, r1
    1ea6:	f8 01       	movw	r30, r16
    1ea8:	a0 80       	ld	r10, Z
    1eaa:	b1 80       	ldd	r11, Z+1	; 0x01
    1eac:	36 fe       	sbrs	r3, 6
    1eae:	03 c0       	rjmp	.+6      	; 0x1eb6 <vfprintf+0x16c>
    1eb0:	69 2d       	mov	r22, r9
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
    1eb4:	02 c0       	rjmp	.+4      	; 0x1eba <vfprintf+0x170>
    1eb6:	6f ef       	ldi	r22, 0xFF	; 255
    1eb8:	7f ef       	ldi	r23, 0xFF	; 255
    1eba:	c5 01       	movw	r24, r10
    1ebc:	4e d1       	rcall	.+668    	; 0x215a <strnlen>
    1ebe:	4c 01       	movw	r8, r24
    1ec0:	82 01       	movw	r16, r4
    1ec2:	f3 2d       	mov	r31, r3
    1ec4:	ff 77       	andi	r31, 0x7F	; 127
    1ec6:	3f 2e       	mov	r3, r31
    1ec8:	15 c0       	rjmp	.+42     	; 0x1ef4 <vfprintf+0x1aa>
    1eca:	28 01       	movw	r4, r16
    1ecc:	22 e0       	ldi	r18, 0x02	; 2
    1ece:	42 0e       	add	r4, r18
    1ed0:	51 1c       	adc	r5, r1
    1ed2:	f8 01       	movw	r30, r16
    1ed4:	a0 80       	ld	r10, Z
    1ed6:	b1 80       	ldd	r11, Z+1	; 0x01
    1ed8:	36 fe       	sbrs	r3, 6
    1eda:	03 c0       	rjmp	.+6      	; 0x1ee2 <vfprintf+0x198>
    1edc:	69 2d       	mov	r22, r9
    1ede:	70 e0       	ldi	r23, 0x00	; 0
    1ee0:	02 c0       	rjmp	.+4      	; 0x1ee6 <vfprintf+0x19c>
    1ee2:	6f ef       	ldi	r22, 0xFF	; 255
    1ee4:	7f ef       	ldi	r23, 0xFF	; 255
    1ee6:	c5 01       	movw	r24, r10
    1ee8:	2d d1       	rcall	.+602    	; 0x2144 <strnlen_P>
    1eea:	4c 01       	movw	r8, r24
    1eec:	f3 2d       	mov	r31, r3
    1eee:	f0 68       	ori	r31, 0x80	; 128
    1ef0:	3f 2e       	mov	r3, r31
    1ef2:	82 01       	movw	r16, r4
    1ef4:	33 fc       	sbrc	r3, 3
    1ef6:	19 c0       	rjmp	.+50     	; 0x1f2a <vfprintf+0x1e0>
    1ef8:	82 2d       	mov	r24, r2
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	88 16       	cp	r8, r24
    1efe:	99 06       	cpc	r9, r25
    1f00:	a0 f4       	brcc	.+40     	; 0x1f2a <vfprintf+0x1e0>
    1f02:	b6 01       	movw	r22, r12
    1f04:	80 e2       	ldi	r24, 0x20	; 32
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	33 d1       	rcall	.+614    	; 0x2170 <fputc>
    1f0a:	2a 94       	dec	r2
    1f0c:	f5 cf       	rjmp	.-22     	; 0x1ef8 <vfprintf+0x1ae>
    1f0e:	f5 01       	movw	r30, r10
    1f10:	37 fc       	sbrc	r3, 7
    1f12:	85 91       	lpm	r24, Z+
    1f14:	37 fe       	sbrs	r3, 7
    1f16:	81 91       	ld	r24, Z+
    1f18:	5f 01       	movw	r10, r30
    1f1a:	b6 01       	movw	r22, r12
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	28 d1       	rcall	.+592    	; 0x2170 <fputc>
    1f20:	21 10       	cpse	r2, r1
    1f22:	2a 94       	dec	r2
    1f24:	21 e0       	ldi	r18, 0x01	; 1
    1f26:	82 1a       	sub	r8, r18
    1f28:	91 08       	sbc	r9, r1
    1f2a:	81 14       	cp	r8, r1
    1f2c:	91 04       	cpc	r9, r1
    1f2e:	79 f7       	brne	.-34     	; 0x1f0e <vfprintf+0x1c4>
    1f30:	e1 c0       	rjmp	.+450    	; 0x20f4 <vfprintf+0x3aa>
    1f32:	84 36       	cpi	r24, 0x64	; 100
    1f34:	11 f0       	breq	.+4      	; 0x1f3a <vfprintf+0x1f0>
    1f36:	89 36       	cpi	r24, 0x69	; 105
    1f38:	39 f5       	brne	.+78     	; 0x1f88 <vfprintf+0x23e>
    1f3a:	f8 01       	movw	r30, r16
    1f3c:	37 fe       	sbrs	r3, 7
    1f3e:	07 c0       	rjmp	.+14     	; 0x1f4e <vfprintf+0x204>
    1f40:	60 81       	ld	r22, Z
    1f42:	71 81       	ldd	r23, Z+1	; 0x01
    1f44:	82 81       	ldd	r24, Z+2	; 0x02
    1f46:	93 81       	ldd	r25, Z+3	; 0x03
    1f48:	0c 5f       	subi	r16, 0xFC	; 252
    1f4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f4c:	08 c0       	rjmp	.+16     	; 0x1f5e <vfprintf+0x214>
    1f4e:	60 81       	ld	r22, Z
    1f50:	71 81       	ldd	r23, Z+1	; 0x01
    1f52:	07 2e       	mov	r0, r23
    1f54:	00 0c       	add	r0, r0
    1f56:	88 0b       	sbc	r24, r24
    1f58:	99 0b       	sbc	r25, r25
    1f5a:	0e 5f       	subi	r16, 0xFE	; 254
    1f5c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5e:	f3 2d       	mov	r31, r3
    1f60:	ff 76       	andi	r31, 0x6F	; 111
    1f62:	3f 2e       	mov	r3, r31
    1f64:	97 ff       	sbrs	r25, 7
    1f66:	09 c0       	rjmp	.+18     	; 0x1f7a <vfprintf+0x230>
    1f68:	90 95       	com	r25
    1f6a:	80 95       	com	r24
    1f6c:	70 95       	com	r23
    1f6e:	61 95       	neg	r22
    1f70:	7f 4f       	sbci	r23, 0xFF	; 255
    1f72:	8f 4f       	sbci	r24, 0xFF	; 255
    1f74:	9f 4f       	sbci	r25, 0xFF	; 255
    1f76:	f0 68       	ori	r31, 0x80	; 128
    1f78:	3f 2e       	mov	r3, r31
    1f7a:	2a e0       	ldi	r18, 0x0A	; 10
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	a3 01       	movw	r20, r6
    1f80:	33 d1       	rcall	.+614    	; 0x21e8 <__ultoa_invert>
    1f82:	88 2e       	mov	r8, r24
    1f84:	86 18       	sub	r8, r6
    1f86:	44 c0       	rjmp	.+136    	; 0x2010 <vfprintf+0x2c6>
    1f88:	85 37       	cpi	r24, 0x75	; 117
    1f8a:	31 f4       	brne	.+12     	; 0x1f98 <vfprintf+0x24e>
    1f8c:	23 2d       	mov	r18, r3
    1f8e:	2f 7e       	andi	r18, 0xEF	; 239
    1f90:	b2 2e       	mov	r11, r18
    1f92:	2a e0       	ldi	r18, 0x0A	; 10
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	25 c0       	rjmp	.+74     	; 0x1fe2 <vfprintf+0x298>
    1f98:	93 2d       	mov	r25, r3
    1f9a:	99 7f       	andi	r25, 0xF9	; 249
    1f9c:	b9 2e       	mov	r11, r25
    1f9e:	8f 36       	cpi	r24, 0x6F	; 111
    1fa0:	c1 f0       	breq	.+48     	; 0x1fd2 <vfprintf+0x288>
    1fa2:	18 f4       	brcc	.+6      	; 0x1faa <vfprintf+0x260>
    1fa4:	88 35       	cpi	r24, 0x58	; 88
    1fa6:	79 f0       	breq	.+30     	; 0x1fc6 <vfprintf+0x27c>
    1fa8:	ae c0       	rjmp	.+348    	; 0x2106 <vfprintf+0x3bc>
    1faa:	80 37       	cpi	r24, 0x70	; 112
    1fac:	19 f0       	breq	.+6      	; 0x1fb4 <vfprintf+0x26a>
    1fae:	88 37       	cpi	r24, 0x78	; 120
    1fb0:	21 f0       	breq	.+8      	; 0x1fba <vfprintf+0x270>
    1fb2:	a9 c0       	rjmp	.+338    	; 0x2106 <vfprintf+0x3bc>
    1fb4:	e9 2f       	mov	r30, r25
    1fb6:	e0 61       	ori	r30, 0x10	; 16
    1fb8:	be 2e       	mov	r11, r30
    1fba:	b4 fe       	sbrs	r11, 4
    1fbc:	0d c0       	rjmp	.+26     	; 0x1fd8 <vfprintf+0x28e>
    1fbe:	fb 2d       	mov	r31, r11
    1fc0:	f4 60       	ori	r31, 0x04	; 4
    1fc2:	bf 2e       	mov	r11, r31
    1fc4:	09 c0       	rjmp	.+18     	; 0x1fd8 <vfprintf+0x28e>
    1fc6:	34 fe       	sbrs	r3, 4
    1fc8:	0a c0       	rjmp	.+20     	; 0x1fde <vfprintf+0x294>
    1fca:	29 2f       	mov	r18, r25
    1fcc:	26 60       	ori	r18, 0x06	; 6
    1fce:	b2 2e       	mov	r11, r18
    1fd0:	06 c0       	rjmp	.+12     	; 0x1fde <vfprintf+0x294>
    1fd2:	28 e0       	ldi	r18, 0x08	; 8
    1fd4:	30 e0       	ldi	r19, 0x00	; 0
    1fd6:	05 c0       	rjmp	.+10     	; 0x1fe2 <vfprintf+0x298>
    1fd8:	20 e1       	ldi	r18, 0x10	; 16
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	02 c0       	rjmp	.+4      	; 0x1fe2 <vfprintf+0x298>
    1fde:	20 e1       	ldi	r18, 0x10	; 16
    1fe0:	32 e0       	ldi	r19, 0x02	; 2
    1fe2:	f8 01       	movw	r30, r16
    1fe4:	b7 fe       	sbrs	r11, 7
    1fe6:	07 c0       	rjmp	.+14     	; 0x1ff6 <vfprintf+0x2ac>
    1fe8:	60 81       	ld	r22, Z
    1fea:	71 81       	ldd	r23, Z+1	; 0x01
    1fec:	82 81       	ldd	r24, Z+2	; 0x02
    1fee:	93 81       	ldd	r25, Z+3	; 0x03
    1ff0:	0c 5f       	subi	r16, 0xFC	; 252
    1ff2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff4:	06 c0       	rjmp	.+12     	; 0x2002 <vfprintf+0x2b8>
    1ff6:	60 81       	ld	r22, Z
    1ff8:	71 81       	ldd	r23, Z+1	; 0x01
    1ffa:	80 e0       	ldi	r24, 0x00	; 0
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	0e 5f       	subi	r16, 0xFE	; 254
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	a3 01       	movw	r20, r6
    2004:	f1 d0       	rcall	.+482    	; 0x21e8 <__ultoa_invert>
    2006:	88 2e       	mov	r8, r24
    2008:	86 18       	sub	r8, r6
    200a:	fb 2d       	mov	r31, r11
    200c:	ff 77       	andi	r31, 0x7F	; 127
    200e:	3f 2e       	mov	r3, r31
    2010:	36 fe       	sbrs	r3, 6
    2012:	0d c0       	rjmp	.+26     	; 0x202e <vfprintf+0x2e4>
    2014:	23 2d       	mov	r18, r3
    2016:	2e 7f       	andi	r18, 0xFE	; 254
    2018:	a2 2e       	mov	r10, r18
    201a:	89 14       	cp	r8, r9
    201c:	58 f4       	brcc	.+22     	; 0x2034 <vfprintf+0x2ea>
    201e:	34 fe       	sbrs	r3, 4
    2020:	0b c0       	rjmp	.+22     	; 0x2038 <vfprintf+0x2ee>
    2022:	32 fc       	sbrc	r3, 2
    2024:	09 c0       	rjmp	.+18     	; 0x2038 <vfprintf+0x2ee>
    2026:	83 2d       	mov	r24, r3
    2028:	8e 7e       	andi	r24, 0xEE	; 238
    202a:	a8 2e       	mov	r10, r24
    202c:	05 c0       	rjmp	.+10     	; 0x2038 <vfprintf+0x2ee>
    202e:	b8 2c       	mov	r11, r8
    2030:	a3 2c       	mov	r10, r3
    2032:	03 c0       	rjmp	.+6      	; 0x203a <vfprintf+0x2f0>
    2034:	b8 2c       	mov	r11, r8
    2036:	01 c0       	rjmp	.+2      	; 0x203a <vfprintf+0x2f0>
    2038:	b9 2c       	mov	r11, r9
    203a:	a4 fe       	sbrs	r10, 4
    203c:	0f c0       	rjmp	.+30     	; 0x205c <vfprintf+0x312>
    203e:	fe 01       	movw	r30, r28
    2040:	e8 0d       	add	r30, r8
    2042:	f1 1d       	adc	r31, r1
    2044:	80 81       	ld	r24, Z
    2046:	80 33       	cpi	r24, 0x30	; 48
    2048:	21 f4       	brne	.+8      	; 0x2052 <vfprintf+0x308>
    204a:	9a 2d       	mov	r25, r10
    204c:	99 7e       	andi	r25, 0xE9	; 233
    204e:	a9 2e       	mov	r10, r25
    2050:	09 c0       	rjmp	.+18     	; 0x2064 <vfprintf+0x31a>
    2052:	a2 fe       	sbrs	r10, 2
    2054:	06 c0       	rjmp	.+12     	; 0x2062 <vfprintf+0x318>
    2056:	b3 94       	inc	r11
    2058:	b3 94       	inc	r11
    205a:	04 c0       	rjmp	.+8      	; 0x2064 <vfprintf+0x31a>
    205c:	8a 2d       	mov	r24, r10
    205e:	86 78       	andi	r24, 0x86	; 134
    2060:	09 f0       	breq	.+2      	; 0x2064 <vfprintf+0x31a>
    2062:	b3 94       	inc	r11
    2064:	a3 fc       	sbrc	r10, 3
    2066:	10 c0       	rjmp	.+32     	; 0x2088 <vfprintf+0x33e>
    2068:	a0 fe       	sbrs	r10, 0
    206a:	06 c0       	rjmp	.+12     	; 0x2078 <vfprintf+0x32e>
    206c:	b2 14       	cp	r11, r2
    206e:	80 f4       	brcc	.+32     	; 0x2090 <vfprintf+0x346>
    2070:	28 0c       	add	r2, r8
    2072:	92 2c       	mov	r9, r2
    2074:	9b 18       	sub	r9, r11
    2076:	0d c0       	rjmp	.+26     	; 0x2092 <vfprintf+0x348>
    2078:	b2 14       	cp	r11, r2
    207a:	58 f4       	brcc	.+22     	; 0x2092 <vfprintf+0x348>
    207c:	b6 01       	movw	r22, r12
    207e:	80 e2       	ldi	r24, 0x20	; 32
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	76 d0       	rcall	.+236    	; 0x2170 <fputc>
    2084:	b3 94       	inc	r11
    2086:	f8 cf       	rjmp	.-16     	; 0x2078 <vfprintf+0x32e>
    2088:	b2 14       	cp	r11, r2
    208a:	18 f4       	brcc	.+6      	; 0x2092 <vfprintf+0x348>
    208c:	2b 18       	sub	r2, r11
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <vfprintf+0x34a>
    2090:	98 2c       	mov	r9, r8
    2092:	21 2c       	mov	r2, r1
    2094:	a4 fe       	sbrs	r10, 4
    2096:	0f c0       	rjmp	.+30     	; 0x20b6 <vfprintf+0x36c>
    2098:	b6 01       	movw	r22, r12
    209a:	80 e3       	ldi	r24, 0x30	; 48
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	68 d0       	rcall	.+208    	; 0x2170 <fputc>
    20a0:	a2 fe       	sbrs	r10, 2
    20a2:	16 c0       	rjmp	.+44     	; 0x20d0 <vfprintf+0x386>
    20a4:	a1 fc       	sbrc	r10, 1
    20a6:	03 c0       	rjmp	.+6      	; 0x20ae <vfprintf+0x364>
    20a8:	88 e7       	ldi	r24, 0x78	; 120
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	02 c0       	rjmp	.+4      	; 0x20b2 <vfprintf+0x368>
    20ae:	88 e5       	ldi	r24, 0x58	; 88
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	b6 01       	movw	r22, r12
    20b4:	0c c0       	rjmp	.+24     	; 0x20ce <vfprintf+0x384>
    20b6:	8a 2d       	mov	r24, r10
    20b8:	86 78       	andi	r24, 0x86	; 134
    20ba:	51 f0       	breq	.+20     	; 0x20d0 <vfprintf+0x386>
    20bc:	a1 fe       	sbrs	r10, 1
    20be:	02 c0       	rjmp	.+4      	; 0x20c4 <vfprintf+0x37a>
    20c0:	8b e2       	ldi	r24, 0x2B	; 43
    20c2:	01 c0       	rjmp	.+2      	; 0x20c6 <vfprintf+0x37c>
    20c4:	80 e2       	ldi	r24, 0x20	; 32
    20c6:	a7 fc       	sbrc	r10, 7
    20c8:	8d e2       	ldi	r24, 0x2D	; 45
    20ca:	b6 01       	movw	r22, r12
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	50 d0       	rcall	.+160    	; 0x2170 <fputc>
    20d0:	89 14       	cp	r8, r9
    20d2:	30 f4       	brcc	.+12     	; 0x20e0 <vfprintf+0x396>
    20d4:	b6 01       	movw	r22, r12
    20d6:	80 e3       	ldi	r24, 0x30	; 48
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	4a d0       	rcall	.+148    	; 0x2170 <fputc>
    20dc:	9a 94       	dec	r9
    20de:	f8 cf       	rjmp	.-16     	; 0x20d0 <vfprintf+0x386>
    20e0:	8a 94       	dec	r8
    20e2:	f3 01       	movw	r30, r6
    20e4:	e8 0d       	add	r30, r8
    20e6:	f1 1d       	adc	r31, r1
    20e8:	80 81       	ld	r24, Z
    20ea:	b6 01       	movw	r22, r12
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	40 d0       	rcall	.+128    	; 0x2170 <fputc>
    20f0:	81 10       	cpse	r8, r1
    20f2:	f6 cf       	rjmp	.-20     	; 0x20e0 <vfprintf+0x396>
    20f4:	22 20       	and	r2, r2
    20f6:	09 f4       	brne	.+2      	; 0x20fa <vfprintf+0x3b0>
    20f8:	4e ce       	rjmp	.-868    	; 0x1d96 <vfprintf+0x4c>
    20fa:	b6 01       	movw	r22, r12
    20fc:	80 e2       	ldi	r24, 0x20	; 32
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	37 d0       	rcall	.+110    	; 0x2170 <fputc>
    2102:	2a 94       	dec	r2
    2104:	f7 cf       	rjmp	.-18     	; 0x20f4 <vfprintf+0x3aa>
    2106:	f6 01       	movw	r30, r12
    2108:	86 81       	ldd	r24, Z+6	; 0x06
    210a:	97 81       	ldd	r25, Z+7	; 0x07
    210c:	02 c0       	rjmp	.+4      	; 0x2112 <vfprintf+0x3c8>
    210e:	8f ef       	ldi	r24, 0xFF	; 255
    2110:	9f ef       	ldi	r25, 0xFF	; 255
    2112:	2b 96       	adiw	r28, 0x0b	; 11
    2114:	0f b6       	in	r0, 0x3f	; 63
    2116:	f8 94       	cli
    2118:	de bf       	out	0x3e, r29	; 62
    211a:	0f be       	out	0x3f, r0	; 63
    211c:	cd bf       	out	0x3d, r28	; 61
    211e:	df 91       	pop	r29
    2120:	cf 91       	pop	r28
    2122:	1f 91       	pop	r17
    2124:	0f 91       	pop	r16
    2126:	ff 90       	pop	r15
    2128:	ef 90       	pop	r14
    212a:	df 90       	pop	r13
    212c:	cf 90       	pop	r12
    212e:	bf 90       	pop	r11
    2130:	af 90       	pop	r10
    2132:	9f 90       	pop	r9
    2134:	8f 90       	pop	r8
    2136:	7f 90       	pop	r7
    2138:	6f 90       	pop	r6
    213a:	5f 90       	pop	r5
    213c:	4f 90       	pop	r4
    213e:	3f 90       	pop	r3
    2140:	2f 90       	pop	r2
    2142:	08 95       	ret

00002144 <strnlen_P>:
    2144:	fc 01       	movw	r30, r24
    2146:	05 90       	lpm	r0, Z+
    2148:	61 50       	subi	r22, 0x01	; 1
    214a:	70 40       	sbci	r23, 0x00	; 0
    214c:	01 10       	cpse	r0, r1
    214e:	d8 f7       	brcc	.-10     	; 0x2146 <strnlen_P+0x2>
    2150:	80 95       	com	r24
    2152:	90 95       	com	r25
    2154:	8e 0f       	add	r24, r30
    2156:	9f 1f       	adc	r25, r31
    2158:	08 95       	ret

0000215a <strnlen>:
    215a:	fc 01       	movw	r30, r24
    215c:	61 50       	subi	r22, 0x01	; 1
    215e:	70 40       	sbci	r23, 0x00	; 0
    2160:	01 90       	ld	r0, Z+
    2162:	01 10       	cpse	r0, r1
    2164:	d8 f7       	brcc	.-10     	; 0x215c <strnlen+0x2>
    2166:	80 95       	com	r24
    2168:	90 95       	com	r25
    216a:	8e 0f       	add	r24, r30
    216c:	9f 1f       	adc	r25, r31
    216e:	08 95       	ret

00002170 <fputc>:
    2170:	0f 93       	push	r16
    2172:	1f 93       	push	r17
    2174:	cf 93       	push	r28
    2176:	df 93       	push	r29
    2178:	fb 01       	movw	r30, r22
    217a:	23 81       	ldd	r18, Z+3	; 0x03
    217c:	21 fd       	sbrc	r18, 1
    217e:	03 c0       	rjmp	.+6      	; 0x2186 <fputc+0x16>
    2180:	8f ef       	ldi	r24, 0xFF	; 255
    2182:	9f ef       	ldi	r25, 0xFF	; 255
    2184:	2c c0       	rjmp	.+88     	; 0x21de <fputc+0x6e>
    2186:	22 ff       	sbrs	r18, 2
    2188:	16 c0       	rjmp	.+44     	; 0x21b6 <fputc+0x46>
    218a:	46 81       	ldd	r20, Z+6	; 0x06
    218c:	57 81       	ldd	r21, Z+7	; 0x07
    218e:	24 81       	ldd	r18, Z+4	; 0x04
    2190:	35 81       	ldd	r19, Z+5	; 0x05
    2192:	42 17       	cp	r20, r18
    2194:	53 07       	cpc	r21, r19
    2196:	44 f4       	brge	.+16     	; 0x21a8 <fputc+0x38>
    2198:	a0 81       	ld	r26, Z
    219a:	b1 81       	ldd	r27, Z+1	; 0x01
    219c:	9d 01       	movw	r18, r26
    219e:	2f 5f       	subi	r18, 0xFF	; 255
    21a0:	3f 4f       	sbci	r19, 0xFF	; 255
    21a2:	31 83       	std	Z+1, r19	; 0x01
    21a4:	20 83       	st	Z, r18
    21a6:	8c 93       	st	X, r24
    21a8:	26 81       	ldd	r18, Z+6	; 0x06
    21aa:	37 81       	ldd	r19, Z+7	; 0x07
    21ac:	2f 5f       	subi	r18, 0xFF	; 255
    21ae:	3f 4f       	sbci	r19, 0xFF	; 255
    21b0:	37 83       	std	Z+7, r19	; 0x07
    21b2:	26 83       	std	Z+6, r18	; 0x06
    21b4:	14 c0       	rjmp	.+40     	; 0x21de <fputc+0x6e>
    21b6:	8b 01       	movw	r16, r22
    21b8:	ec 01       	movw	r28, r24
    21ba:	fb 01       	movw	r30, r22
    21bc:	00 84       	ldd	r0, Z+8	; 0x08
    21be:	f1 85       	ldd	r31, Z+9	; 0x09
    21c0:	e0 2d       	mov	r30, r0
    21c2:	09 95       	icall
    21c4:	89 2b       	or	r24, r25
    21c6:	e1 f6       	brne	.-72     	; 0x2180 <fputc+0x10>
    21c8:	d8 01       	movw	r26, r16
    21ca:	16 96       	adiw	r26, 0x06	; 6
    21cc:	8d 91       	ld	r24, X+
    21ce:	9c 91       	ld	r25, X
    21d0:	17 97       	sbiw	r26, 0x07	; 7
    21d2:	01 96       	adiw	r24, 0x01	; 1
    21d4:	17 96       	adiw	r26, 0x07	; 7
    21d6:	9c 93       	st	X, r25
    21d8:	8e 93       	st	-X, r24
    21da:	16 97       	sbiw	r26, 0x06	; 6
    21dc:	ce 01       	movw	r24, r28
    21de:	df 91       	pop	r29
    21e0:	cf 91       	pop	r28
    21e2:	1f 91       	pop	r17
    21e4:	0f 91       	pop	r16
    21e6:	08 95       	ret

000021e8 <__ultoa_invert>:
    21e8:	fa 01       	movw	r30, r20
    21ea:	aa 27       	eor	r26, r26
    21ec:	28 30       	cpi	r18, 0x08	; 8
    21ee:	51 f1       	breq	.+84     	; 0x2244 <__ultoa_invert+0x5c>
    21f0:	20 31       	cpi	r18, 0x10	; 16
    21f2:	81 f1       	breq	.+96     	; 0x2254 <__ultoa_invert+0x6c>
    21f4:	e8 94       	clt
    21f6:	6f 93       	push	r22
    21f8:	6e 7f       	andi	r22, 0xFE	; 254
    21fa:	6e 5f       	subi	r22, 0xFE	; 254
    21fc:	7f 4f       	sbci	r23, 0xFF	; 255
    21fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2200:	9f 4f       	sbci	r25, 0xFF	; 255
    2202:	af 4f       	sbci	r26, 0xFF	; 255
    2204:	b1 e0       	ldi	r27, 0x01	; 1
    2206:	3e d0       	rcall	.+124    	; 0x2284 <__ultoa_invert+0x9c>
    2208:	b4 e0       	ldi	r27, 0x04	; 4
    220a:	3c d0       	rcall	.+120    	; 0x2284 <__ultoa_invert+0x9c>
    220c:	67 0f       	add	r22, r23
    220e:	78 1f       	adc	r23, r24
    2210:	89 1f       	adc	r24, r25
    2212:	9a 1f       	adc	r25, r26
    2214:	a1 1d       	adc	r26, r1
    2216:	68 0f       	add	r22, r24
    2218:	79 1f       	adc	r23, r25
    221a:	8a 1f       	adc	r24, r26
    221c:	91 1d       	adc	r25, r1
    221e:	a1 1d       	adc	r26, r1
    2220:	6a 0f       	add	r22, r26
    2222:	71 1d       	adc	r23, r1
    2224:	81 1d       	adc	r24, r1
    2226:	91 1d       	adc	r25, r1
    2228:	a1 1d       	adc	r26, r1
    222a:	20 d0       	rcall	.+64     	; 0x226c <__ultoa_invert+0x84>
    222c:	09 f4       	brne	.+2      	; 0x2230 <__ultoa_invert+0x48>
    222e:	68 94       	set
    2230:	3f 91       	pop	r19
    2232:	2a e0       	ldi	r18, 0x0A	; 10
    2234:	26 9f       	mul	r18, r22
    2236:	11 24       	eor	r1, r1
    2238:	30 19       	sub	r19, r0
    223a:	30 5d       	subi	r19, 0xD0	; 208
    223c:	31 93       	st	Z+, r19
    223e:	de f6       	brtc	.-74     	; 0x21f6 <__ultoa_invert+0xe>
    2240:	cf 01       	movw	r24, r30
    2242:	08 95       	ret
    2244:	46 2f       	mov	r20, r22
    2246:	47 70       	andi	r20, 0x07	; 7
    2248:	40 5d       	subi	r20, 0xD0	; 208
    224a:	41 93       	st	Z+, r20
    224c:	b3 e0       	ldi	r27, 0x03	; 3
    224e:	0f d0       	rcall	.+30     	; 0x226e <__ultoa_invert+0x86>
    2250:	c9 f7       	brne	.-14     	; 0x2244 <__ultoa_invert+0x5c>
    2252:	f6 cf       	rjmp	.-20     	; 0x2240 <__ultoa_invert+0x58>
    2254:	46 2f       	mov	r20, r22
    2256:	4f 70       	andi	r20, 0x0F	; 15
    2258:	40 5d       	subi	r20, 0xD0	; 208
    225a:	4a 33       	cpi	r20, 0x3A	; 58
    225c:	18 f0       	brcs	.+6      	; 0x2264 <__ultoa_invert+0x7c>
    225e:	49 5d       	subi	r20, 0xD9	; 217
    2260:	31 fd       	sbrc	r19, 1
    2262:	40 52       	subi	r20, 0x20	; 32
    2264:	41 93       	st	Z+, r20
    2266:	02 d0       	rcall	.+4      	; 0x226c <__ultoa_invert+0x84>
    2268:	a9 f7       	brne	.-22     	; 0x2254 <__ultoa_invert+0x6c>
    226a:	ea cf       	rjmp	.-44     	; 0x2240 <__ultoa_invert+0x58>
    226c:	b4 e0       	ldi	r27, 0x04	; 4
    226e:	a6 95       	lsr	r26
    2270:	97 95       	ror	r25
    2272:	87 95       	ror	r24
    2274:	77 95       	ror	r23
    2276:	67 95       	ror	r22
    2278:	ba 95       	dec	r27
    227a:	c9 f7       	brne	.-14     	; 0x226e <__ultoa_invert+0x86>
    227c:	00 97       	sbiw	r24, 0x00	; 0
    227e:	61 05       	cpc	r22, r1
    2280:	71 05       	cpc	r23, r1
    2282:	08 95       	ret
    2284:	9b 01       	movw	r18, r22
    2286:	ac 01       	movw	r20, r24
    2288:	0a 2e       	mov	r0, r26
    228a:	06 94       	lsr	r0
    228c:	57 95       	ror	r21
    228e:	47 95       	ror	r20
    2290:	37 95       	ror	r19
    2292:	27 95       	ror	r18
    2294:	ba 95       	dec	r27
    2296:	c9 f7       	brne	.-14     	; 0x228a <__ultoa_invert+0xa2>
    2298:	62 0f       	add	r22, r18
    229a:	73 1f       	adc	r23, r19
    229c:	84 1f       	adc	r24, r20
    229e:	95 1f       	adc	r25, r21
    22a0:	a0 1d       	adc	r26, r0
    22a2:	08 95       	ret

000022a4 <_exit>:
    22a4:	f8 94       	cli

000022a6 <__stop_program>:
    22a6:	ff cf       	rjmp	.-2      	; 0x22a6 <__stop_program>
